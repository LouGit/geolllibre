--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = off;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET escape_string_warning = off;

--
-- Name: checks; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA checks;


--
-- Name: SCHEMA checks; Type: COMMENT; Schema: -; Owner: -
--

COMMENT ON SCHEMA checks IS 'Views selecting unconsistent, incoherent, unprobable data';


--
-- Name: gdm; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA gdm;


--
-- Name: pierre; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA pierre;


--
-- Name: stats_reports; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA stats_reports;


--
-- Name: SCHEMA stats_reports; Type: COMMENT; Schema: -; Owner: -
--

COMMENT ON SCHEMA stats_reports IS 'Views with statistics and reports, for daily/weekly/monthly statistics';


--
-- Name: tmp_imports; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA tmp_imports;


--
-- Name: plpgsql; Type: PROCEDURAL LANGUAGE; Schema: -; Owner: -
--

CREATE OR REPLACE PROCEDURAL LANGUAGE plpgsql;


--
-- Name: plpythonu; Type: PROCEDURAL LANGUAGE; Schema: -; Owner: -
--

CREATE OR REPLACE PROCEDURAL LANGUAGE plpythonu;


SET search_path = public, pg_catalog;

--
-- Name: box2d; Type: SHELL TYPE; Schema: public; Owner: -
--

CREATE TYPE box2d;


--
-- Name: box2d_in(cstring); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box2d_in(cstring) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX2DFLOAT4_in';


--
-- Name: box2d_out(box2d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box2d_out(box2d) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX2DFLOAT4_out';


--
-- Name: box2d; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE box2d (
    INTERNALLENGTH = 16,
    INPUT = box2d_in,
    OUTPUT = box2d_out,
    ALIGNMENT = int4,
    STORAGE = plain
);


--
-- Name: box3d; Type: SHELL TYPE; Schema: public; Owner: -
--

CREATE TYPE box3d;


--
-- Name: box3d_in(cstring); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box3d_in(cstring) RETURNS box3d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_in';


--
-- Name: box3d_out(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box3d_out(box3d) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_out';


--
-- Name: box3d; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE box3d (
    INTERNALLENGTH = 48,
    INPUT = box3d_in,
    OUTPUT = box3d_out,
    ALIGNMENT = double,
    STORAGE = plain
);


--
-- Name: box3d_extent; Type: SHELL TYPE; Schema: public; Owner: -
--

CREATE TYPE box3d_extent;


--
-- Name: box3d_extent_in(cstring); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box3d_extent_in(cstring) RETURNS box3d_extent
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_in';


--
-- Name: box3d_extent_out(box3d_extent); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box3d_extent_out(box3d_extent) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_extent_out';


--
-- Name: box3d_extent; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE box3d_extent (
    INTERNALLENGTH = 48,
    INPUT = box3d_extent_in,
    OUTPUT = box3d_extent_out,
    ALIGNMENT = double,
    STORAGE = plain
);


--
-- Name: chip; Type: SHELL TYPE; Schema: public; Owner: -
--

CREATE TYPE chip;


--
-- Name: chip_in(cstring); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION chip_in(cstring) RETURNS chip
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_in';


--
-- Name: chip_out(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION chip_out(chip) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_out';


--
-- Name: chip; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE chip (
    INTERNALLENGTH = variable,
    INPUT = chip_in,
    OUTPUT = chip_out,
    ALIGNMENT = double,
    STORAGE = extended
);


--
-- Name: geography; Type: SHELL TYPE; Schema: public; Owner: -
--

CREATE TYPE geography;


--
-- Name: geography_analyze(internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_analyze(internal) RETURNS boolean
    LANGUAGE c STRICT
    AS '$libdir/postgis-1.5', 'geography_analyze';


--
-- Name: geography_in(cstring, oid, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_in(cstring, oid, integer) RETURNS geography
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_in';


--
-- Name: geography_out(geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_out(geography) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_out';


--
-- Name: geography_typmod_in(cstring[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_typmod_in(cstring[]) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_typmod_in';


--
-- Name: geography_typmod_out(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_typmod_out(integer) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_typmod_out';


--
-- Name: geography; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE geography (
    INTERNALLENGTH = variable,
    INPUT = geography_in,
    OUTPUT = geography_out,
    TYPMOD_IN = geography_typmod_in,
    TYPMOD_OUT = geography_typmod_out,
    ANALYZE = geography_analyze,
    ALIGNMENT = double,
    STORAGE = main
);


--
-- Name: geometry; Type: SHELL TYPE; Schema: public; Owner: -
--

CREATE TYPE geometry;


--
-- Name: geometry_analyze(internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_analyze(internal) RETURNS boolean
    LANGUAGE c STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_analyze';


--
-- Name: geometry_in(cstring); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_in(cstring) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_in';


--
-- Name: geometry_out(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_out(geometry) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_out';


--
-- Name: geometry_recv(internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_recv(internal) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_recv';


--
-- Name: geometry_send(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_send(geometry) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_send';


--
-- Name: geometry; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE geometry (
    INTERNALLENGTH = variable,
    INPUT = geometry_in,
    OUTPUT = geometry_out,
    RECEIVE = geometry_recv,
    SEND = geometry_send,
    ANALYZE = geometry_analyze,
    DELIMITER = ':',
    ALIGNMENT = int4,
    STORAGE = main
);


--
-- Name: geometry_dump; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE geometry_dump AS (
	path integer[],
	geom geometry
);


--
-- Name: gidx; Type: SHELL TYPE; Schema: public; Owner: -
--

CREATE TYPE gidx;


--
-- Name: gidx_in(cstring); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION gidx_in(cstring) RETURNS gidx
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'gidx_in';


--
-- Name: gidx_out(gidx); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION gidx_out(gidx) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'gidx_out';


--
-- Name: gidx; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE gidx (
    INTERNALLENGTH = variable,
    INPUT = gidx_in,
    OUTPUT = gidx_out,
    ALIGNMENT = double,
    STORAGE = plain
);


--
-- Name: pgis_abs; Type: SHELL TYPE; Schema: public; Owner: -
--

CREATE TYPE pgis_abs;


--
-- Name: pgis_abs_in(cstring); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pgis_abs_in(cstring) RETURNS pgis_abs
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'pgis_abs_in';


--
-- Name: pgis_abs_out(pgis_abs); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pgis_abs_out(pgis_abs) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'pgis_abs_out';


--
-- Name: pgis_abs; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE pgis_abs (
    INTERNALLENGTH = 8,
    INPUT = pgis_abs_in,
    OUTPUT = pgis_abs_out,
    ALIGNMENT = double,
    STORAGE = plain
);


--
-- Name: spheroid; Type: SHELL TYPE; Schema: public; Owner: -
--

CREATE TYPE spheroid;


--
-- Name: spheroid_in(cstring); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION spheroid_in(cstring) RETURNS spheroid
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'ellipsoid_in';


--
-- Name: spheroid_out(spheroid); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION spheroid_out(spheroid) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'ellipsoid_out';


--
-- Name: spheroid; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE spheroid (
    INTERNALLENGTH = 65,
    INPUT = spheroid_in,
    OUTPUT = spheroid_out,
    ALIGNMENT = double,
    STORAGE = plain
);


SET search_path = pierre, pg_catalog;

--
-- Name: create_crosstab_view(character varying, character varying, character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: pierre; Owner: -
--

CREATE FUNCTION create_crosstab_view(eavsql_inarg character varying, resview character varying, rowid character varying, colid character varying, val character varying, agr character varying) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
    casesql varchar;
    dynsql varchar;    
    r record;
BEGIN   
dynsql='';
for r in
      select * from pg_views where lower(viewname) = lower(resview)
  loop
      execute 'DROP VIEW ' || resview;
  end loop;   
casesql='SELECT DISTINCT ' || colid || ' AS v from (' || eavsql_inarg || ') eav ORDER BY ' || colid;
FOR r IN EXECUTE casesql
  Loop
    dynsql = dynsql || ', ' || agr || '(CASE WHEN ' || colid || E'=\'' || r.v::varchar || E'\' THEN ' || val || ' ELSE NULL END) AS ' || agr || '_' || r.v;
  END LOOP;
dynsql = 'CREATE VIEW ' || resview || ' AS SELECT ' || rowid || dynsql || ' from (' || eavsql_inarg || ') eav GROUP BY ' || rowid;
EXECUTE dynsql;
END
$$;


SET search_path = public, pg_catalog;

--
-- Name: _st_asgeojson(integer, geometry, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_asgeojson(integer, geometry, integer, integer) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asGeoJson';


--
-- Name: _st_asgeojson(integer, geography, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_asgeojson(integer, geography, integer, integer) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_as_geojson';


--
-- Name: _st_asgml(integer, geometry, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_asgml(integer, geometry, integer, integer) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asGML';


--
-- Name: _st_asgml(integer, geography, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_asgml(integer, geography, integer, integer) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_as_gml';


--
-- Name: _st_askml(integer, geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_askml(integer, geometry, integer) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asKML';


--
-- Name: _st_askml(integer, geography, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_askml(integer, geography, integer) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_as_kml';


--
-- Name: _st_bestsrid(geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_bestsrid(geography) RETURNS integer
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_BestSRID($1,$1)$_$;


--
-- Name: _st_bestsrid(geography, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_bestsrid(geography, geography) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_bestsrid';


--
-- Name: _st_buffer(geometry, double precision, cstring); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_buffer(geometry, double precision, cstring) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'buffer';


--
-- Name: _st_contains(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_contains(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'contains';


--
-- Name: _st_containsproperly(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_containsproperly(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'containsproperly';


--
-- Name: _st_coveredby(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_coveredby(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'coveredby';


--
-- Name: _st_covers(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_covers(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'covers';


--
-- Name: _st_covers(geography, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_covers(geography, geography) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'geography_covers';


--
-- Name: _st_crosses(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_crosses(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'crosses';


--
-- Name: _st_dfullywithin(geometry, geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_dfullywithin(geometry, geometry, double precision) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_dfullywithin';


--
-- Name: _st_distance(geography, geography, double precision, boolean); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_distance(geography, geography, double precision, boolean) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'geography_distance';


--
-- Name: _st_dumppoints(geometry, integer[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_dumppoints(the_geom geometry, cur_path integer[]) RETURNS SETOF geometry_dump
    LANGUAGE plpgsql
    AS $$
DECLARE
  tmp geometry_dump;
  tmp2 geometry_dump;
  nb_points integer;
  nb_geom integer;
  i integer;
  j integer;
  g geometry;
  
BEGIN
  
  RAISE DEBUG '%,%', cur_path, ST_GeometryType(the_geom);

  -- Special case (MULTI* OR GEOMETRYCOLLECTION) : iterate and return the DumpPoints of the geometries
  SELECT ST_NumGeometries(the_geom) INTO nb_geom;

  IF (nb_geom IS NOT NULL) THEN
    
    i = 1;
    FOR tmp2 IN SELECT (ST_Dump(the_geom)).* LOOP

      FOR tmp IN SELECT * FROM _ST_DumpPoints(tmp2.geom, cur_path || tmp2.path) LOOP
	    RETURN NEXT tmp;
      END LOOP;
      i = i + 1;
      
    END LOOP;

    RETURN;
  END IF;
  

  -- Special case (POLYGON) : return the points of the rings of a polygon
  IF (ST_GeometryType(the_geom) = 'ST_Polygon') THEN

    FOR tmp IN SELECT * FROM _ST_DumpPoints(ST_ExteriorRing(the_geom), cur_path || ARRAY[1]) LOOP
      RETURN NEXT tmp;
    END LOOP;
    
    j := ST_NumInteriorRings(the_geom);
    FOR i IN 1..j LOOP
        FOR tmp IN SELECT * FROM _ST_DumpPoints(ST_InteriorRingN(the_geom, i), cur_path || ARRAY[i+1]) LOOP
          RETURN NEXT tmp;
        END LOOP;
    END LOOP;
    
    RETURN;
  END IF;

    
  -- Special case (POINT) : return the point
  IF (ST_GeometryType(the_geom) = 'ST_Point') THEN

    tmp.path = cur_path || ARRAY[1];
    tmp.geom = the_geom;

    RETURN NEXT tmp;
    RETURN;

  END IF;


  -- Use ST_NumPoints rather than ST_NPoints to have a NULL value if the_geom isn't
  -- a LINESTRING or CIRCULARSTRING.
  SELECT ST_NumPoints(the_geom) INTO nb_points;

  -- This should never happen
  IF (nb_points IS NULL) THEN
    RAISE EXCEPTION 'Unexpected error while dumping geometry %', ST_AsText(the_geom);
  END IF;

  FOR i IN 1..nb_points LOOP
    tmp.path = cur_path || ARRAY[i];
    tmp.geom := ST_PointN(the_geom, i);
    RETURN NEXT tmp;
  END LOOP;
   
END
$$;


--
-- Name: _st_dwithin(geometry, geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_dwithin(geometry, geometry, double precision) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_dwithin';


--
-- Name: _st_dwithin(geography, geography, double precision, boolean); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_dwithin(geography, geography, double precision, boolean) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'geography_dwithin';


--
-- Name: _st_equals(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_equals(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'geomequals';


--
-- Name: _st_expand(geography, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_expand(geography, double precision) RETURNS geography
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_expand';


--
-- Name: _st_intersects(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_intersects(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'intersects';


--
-- Name: _st_linecrossingdirection(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_linecrossingdirection(geometry, geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'ST_LineCrossingDirection';


--
-- Name: _st_longestline(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_longestline(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_longestline2d';


--
-- Name: _st_maxdistance(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_maxdistance(geometry, geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_maxdistance2d_linestring';


--
-- Name: _st_orderingequals(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_orderingequals(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_same';


--
-- Name: _st_overlaps(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_overlaps(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'overlaps';


--
-- Name: _st_pointoutside(geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_pointoutside(geography) RETURNS geography
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_point_outside';


--
-- Name: _st_touches(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_touches(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'touches';


--
-- Name: _st_within(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_within(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'within';


--
-- Name: addauth(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION addauth(text) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$ 
DECLARE
	lockid alias for $1;
	okay boolean;
	myrec record;
BEGIN
	-- check to see if table exists
	--  if not, CREATE TEMP TABLE mylock (transid xid, lockcode text)
	okay := 'f';
	FOR myrec IN SELECT * FROM pg_class WHERE relname = 'temp_lock_have_table' LOOP
		okay := 't';
	END LOOP; 
	IF (okay <> 't') THEN 
		CREATE TEMP TABLE temp_lock_have_table (transid xid, lockcode text);
			-- this will only work from pgsql7.4 up
			-- ON COMMIT DELETE ROWS;
	END IF;

	--  INSERT INTO mylock VALUES ( $1)
--	EXECUTE 'INSERT INTO temp_lock_have_table VALUES ( '||
--		quote_literal(getTransactionID()) || ',' ||
--		quote_literal(lockid) ||')';

	INSERT INTO temp_lock_have_table VALUES (getTransactionID(), lockid);

	RETURN true::boolean;
END;
$_$;


--
-- Name: addbbox(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION addbbox(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_addBBOX';


--
-- Name: addgeometrycolumn(character varying, character varying, integer, character varying, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION addgeometrycolumn(character varying, character varying, integer, character varying, integer) RETURNS text
    LANGUAGE plpgsql STRICT
    AS $_$
DECLARE
	ret  text;
BEGIN
	SELECT AddGeometryColumn('','',$1,$2,$3,$4,$5) into ret;
	RETURN ret;
END;
$_$;


--
-- Name: addgeometrycolumn(character varying, character varying, character varying, integer, character varying, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION addgeometrycolumn(character varying, character varying, character varying, integer, character varying, integer) RETURNS text
    LANGUAGE plpgsql STABLE STRICT
    AS $_$
DECLARE
	ret  text;
BEGIN
	SELECT AddGeometryColumn('',$1,$2,$3,$4,$5,$6) into ret;
	RETURN ret;
END;
$_$;


--
-- Name: addgeometrycolumn(character varying, character varying, character varying, character varying, integer, character varying, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION addgeometrycolumn(character varying, character varying, character varying, character varying, integer, character varying, integer) RETURNS text
    LANGUAGE plpgsql STRICT
    AS $_$
DECLARE
	catalog_name alias for $1;
	schema_name alias for $2;
	table_name alias for $3;
	column_name alias for $4;
	new_srid alias for $5;
	new_type alias for $6;
	new_dim alias for $7;
	rec RECORD;
	sr varchar;
	real_schema name;
	sql text;

BEGIN

	-- Verify geometry type
	IF ( NOT ( (new_type = 'GEOMETRY') OR
			   (new_type = 'GEOMETRYCOLLECTION') OR
			   (new_type = 'POINT') OR
			   (new_type = 'MULTIPOINT') OR
			   (new_type = 'POLYGON') OR
			   (new_type = 'MULTIPOLYGON') OR
			   (new_type = 'LINESTRING') OR
			   (new_type = 'MULTILINESTRING') OR
			   (new_type = 'GEOMETRYCOLLECTIONM') OR
			   (new_type = 'POINTM') OR
			   (new_type = 'MULTIPOINTM') OR
			   (new_type = 'POLYGONM') OR
			   (new_type = 'MULTIPOLYGONM') OR
			   (new_type = 'LINESTRINGM') OR
			   (new_type = 'MULTILINESTRINGM') OR
			   (new_type = 'CIRCULARSTRING') OR
			   (new_type = 'CIRCULARSTRINGM') OR
			   (new_type = 'COMPOUNDCURVE') OR
			   (new_type = 'COMPOUNDCURVEM') OR
			   (new_type = 'CURVEPOLYGON') OR
			   (new_type = 'CURVEPOLYGONM') OR
			   (new_type = 'MULTICURVE') OR
			   (new_type = 'MULTICURVEM') OR
			   (new_type = 'MULTISURFACE') OR
			   (new_type = 'MULTISURFACEM')) )
	THEN
		RAISE EXCEPTION 'Invalid type name - valid ones are:
	POINT, MULTIPOINT,
	LINESTRING, MULTILINESTRING,
	POLYGON, MULTIPOLYGON,
	CIRCULARSTRING, COMPOUNDCURVE, MULTICURVE,
	CURVEPOLYGON, MULTISURFACE,
	GEOMETRY, GEOMETRYCOLLECTION,
	POINTM, MULTIPOINTM,
	LINESTRINGM, MULTILINESTRINGM,
	POLYGONM, MULTIPOLYGONM,
	CIRCULARSTRINGM, COMPOUNDCURVEM, MULTICURVEM
	CURVEPOLYGONM, MULTISURFACEM,
	or GEOMETRYCOLLECTIONM';
		RETURN 'fail';
	END IF;


	-- Verify dimension
	IF ( (new_dim >4) OR (new_dim <0) ) THEN
		RAISE EXCEPTION 'invalid dimension';
		RETURN 'fail';
	END IF;

	IF ( (new_type LIKE '%M') AND (new_dim!=3) ) THEN
		RAISE EXCEPTION 'TypeM needs 3 dimensions';
		RETURN 'fail';
	END IF;


	-- Verify SRID
	IF ( new_srid != -1 ) THEN
		SELECT SRID INTO sr FROM spatial_ref_sys WHERE SRID = new_srid;
		IF NOT FOUND THEN
			RAISE EXCEPTION 'AddGeometryColumns() - invalid SRID';
			RETURN 'fail';
		END IF;
	END IF;


	-- Verify schema
	IF ( schema_name IS NOT NULL AND schema_name != '' ) THEN
		sql := 'SELECT nspname FROM pg_namespace ' ||
			'WHERE text(nspname) = ' || quote_literal(schema_name) ||
			'LIMIT 1';
		RAISE DEBUG '%', sql;
		EXECUTE sql INTO real_schema;

		IF ( real_schema IS NULL ) THEN
			RAISE EXCEPTION 'Schema % is not a valid schemaname', quote_literal(schema_name);
			RETURN 'fail';
		END IF;
	END IF;

	IF ( real_schema IS NULL ) THEN
		RAISE DEBUG 'Detecting schema';
		sql := 'SELECT n.nspname AS schemaname ' ||
			'FROM pg_catalog.pg_class c ' ||
			  'JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace ' ||
			'WHERE c.relkind = ' || quote_literal('r') ||
			' AND n.nspname NOT IN (' || quote_literal('pg_catalog') || ', ' || quote_literal('pg_toast') || ')' ||
			' AND pg_catalog.pg_table_is_visible(c.oid)' ||
			' AND c.relname = ' || quote_literal(table_name);
		RAISE DEBUG '%', sql;
		EXECUTE sql INTO real_schema;

		IF ( real_schema IS NULL ) THEN
			RAISE EXCEPTION 'Table % does not occur in the search_path', quote_literal(table_name);
			RETURN 'fail';
		END IF;
	END IF;


	-- Add geometry column to table
	sql := 'ALTER TABLE ' ||
		quote_ident(real_schema) || '.' || quote_ident(table_name)
		|| ' ADD COLUMN ' || quote_ident(column_name) ||
		' geometry ';
	RAISE DEBUG '%', sql;
	EXECUTE sql;


	-- Delete stale record in geometry_columns (if any)
	sql := 'DELETE FROM geometry_columns WHERE
		f_table_catalog = ' || quote_literal('') ||
		' AND f_table_schema = ' ||
		quote_literal(real_schema) ||
		' AND f_table_name = ' || quote_literal(table_name) ||
		' AND f_geometry_column = ' || quote_literal(column_name);
	RAISE DEBUG '%', sql;
	EXECUTE sql;


	-- Add record in geometry_columns
	sql := 'INSERT INTO geometry_columns (f_table_catalog,f_table_schema,f_table_name,' ||
										  'f_geometry_column,coord_dimension,srid,type)' ||
		' VALUES (' ||
		quote_literal('') || ',' ||
		quote_literal(real_schema) || ',' ||
		quote_literal(table_name) || ',' ||
		quote_literal(column_name) || ',' ||
		new_dim::text || ',' ||
		new_srid::text || ',' ||
		quote_literal(new_type) || ')';
	RAISE DEBUG '%', sql;
	EXECUTE sql;


	-- Add table CHECKs
	sql := 'ALTER TABLE ' ||
		quote_ident(real_schema) || '.' || quote_ident(table_name)
		|| ' ADD CONSTRAINT '
		|| quote_ident('enforce_srid_' || column_name)
		|| ' CHECK (ST_SRID(' || quote_ident(column_name) ||
		') = ' || new_srid::text || ')' ;
	RAISE DEBUG '%', sql;
	EXECUTE sql;

	sql := 'ALTER TABLE ' ||
		quote_ident(real_schema) || '.' || quote_ident(table_name)
		|| ' ADD CONSTRAINT '
		|| quote_ident('enforce_dims_' || column_name)
		|| ' CHECK (ST_NDims(' || quote_ident(column_name) ||
		') = ' || new_dim::text || ')' ;
	RAISE DEBUG '%', sql;
	EXECUTE sql;

	IF ( NOT (new_type = 'GEOMETRY')) THEN
		sql := 'ALTER TABLE ' ||
			quote_ident(real_schema) || '.' || quote_ident(table_name) || ' ADD CONSTRAINT ' ||
			quote_ident('enforce_geotype_' || column_name) ||
			' CHECK (GeometryType(' ||
			quote_ident(column_name) || ')=' ||
			quote_literal(new_type) || ' OR (' ||
			quote_ident(column_name) || ') is null)';
		RAISE DEBUG '%', sql;
		EXECUTE sql;
	END IF;

	RETURN
		real_schema || '.' ||
		table_name || '.' || column_name ||
		' SRID:' || new_srid::text ||
		' TYPE:' || new_type ||
		' DIMS:' || new_dim::text || ' ';
END;
$_$;


--
-- Name: addpoint(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION addpoint(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_addpoint';


--
-- Name: addpoint(geometry, geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION addpoint(geometry, geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_addpoint';


--
-- Name: affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT affine($1,  $2, $3, 0,  $4, $5, 0,  0, 0, 1,  $6, $7, 0)$_$;


--
-- Name: affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_affine';


--
-- Name: area(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION area(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_area_polygon';


--
-- Name: area2d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION area2d(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_area_polygon';


--
-- Name: asbinary(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION asbinary(geometry) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asBinary';


--
-- Name: asbinary(geometry, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION asbinary(geometry, text) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asBinary';


--
-- Name: asewkb(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION asewkb(geometry) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'WKBFromLWGEOM';


--
-- Name: asewkb(geometry, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION asewkb(geometry, text) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'WKBFromLWGEOM';


--
-- Name: asewkt(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION asewkt(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asEWKT';


--
-- Name: asgml(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION asgml(geometry) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGML(2, $1, 15, 0)$_$;


--
-- Name: asgml(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION asgml(geometry, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGML(2, $1, $2, 0)$_$;


--
-- Name: ashexewkb(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION ashexewkb(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asHEXEWKB';


--
-- Name: ashexewkb(geometry, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION ashexewkb(geometry, text) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asHEXEWKB';


--
-- Name: askml(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION askml(geometry) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsKML(2, transform($1,4326), 15)$_$;


--
-- Name: askml(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION askml(geometry, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsKML(2, transform($1,4326), $2)$_$;


--
-- Name: askml(integer, geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION askml(integer, geometry, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsKML($1, transform($2,4326), $3)$_$;


--
-- Name: assvg(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION assvg(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'assvg_geometry';


--
-- Name: assvg(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION assvg(geometry, integer) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'assvg_geometry';


--
-- Name: assvg(geometry, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION assvg(geometry, integer, integer) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'assvg_geometry';


--
-- Name: astext(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION astext(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asText';


--
-- Name: azimuth(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION azimuth(geometry, geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_azimuth';


--
-- Name: bdmpolyfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION bdmpolyfromtext(text, integer) RETURNS geometry
    LANGUAGE plpgsql IMMUTABLE STRICT
    AS $_$
DECLARE
	geomtext alias for $1;
	srid alias for $2;
	mline geometry;
	geom geometry;
BEGIN
	mline := MultiLineStringFromText(geomtext, srid);

	IF mline IS NULL
	THEN
		RAISE EXCEPTION 'Input is not a MultiLinestring';
	END IF;

	geom := multi(BuildArea(mline));

	RETURN geom;
END;
$_$;


--
-- Name: bdpolyfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION bdpolyfromtext(text, integer) RETURNS geometry
    LANGUAGE plpgsql IMMUTABLE STRICT
    AS $_$
DECLARE
	geomtext alias for $1;
	srid alias for $2;
	mline geometry;
	geom geometry;
BEGIN
	mline := MultiLineStringFromText(geomtext, srid);

	IF mline IS NULL
	THEN
		RAISE EXCEPTION 'Input is not a MultiLinestring';
	END IF;

	geom := BuildArea(mline);

	IF GeometryType(geom) != 'POLYGON'
	THEN
		RAISE EXCEPTION 'Input returns more then a single polygon, try using BdMPolyFromText instead';
	END IF;

	RETURN geom;
END;
$_$;


--
-- Name: boundary(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION boundary(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'boundary';


--
-- Name: box(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box(geometry) RETURNS box
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_to_BOX';


--
-- Name: box(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box(box3d) RETURNS box
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_to_BOX';


--
-- Name: box2d(box3d_extent); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box2d(box3d_extent) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_to_BOX2DFLOAT4';


--
-- Name: box2d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box2d(geometry) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_to_BOX2DFLOAT4';


--
-- Name: box2d(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box2d(box3d) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_to_BOX2DFLOAT4';


--
-- Name: box3d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box3d(geometry) RETURNS box3d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_to_BOX3D';


--
-- Name: box3d(box2d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box3d(box2d) RETURNS box3d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX2DFLOAT4_to_BOX3D';


--
-- Name: box3d_extent(box3d_extent); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box3d_extent(box3d_extent) RETURNS box3d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_extent_to_BOX3D';


--
-- Name: box3dtobox(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box3dtobox(box3d) RETURNS box
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT box($1)$_$;


--
-- Name: buffer(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION buffer(geometry, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'buffer';


--
-- Name: buffer(geometry, double precision, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION buffer(geometry, double precision, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT ST_Buffer($1, $2, $3)$_$;


--
-- Name: buildarea(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION buildarea(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_buildarea';


--
-- Name: bytea(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION bytea(geometry) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_to_bytea';


--
-- Name: centroid(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION centroid(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'centroid';


--
-- Name: checkauth(text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION checkauth(text, text) RETURNS integer
    LANGUAGE sql
    AS $_$ SELECT CheckAuth('', $1, $2) $_$;


--
-- Name: checkauth(text, text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION checkauth(text, text, text) RETURNS integer
    LANGUAGE plpgsql
    AS $_$ 
DECLARE
	schema text;
BEGIN
	IF NOT LongTransactionsEnabled() THEN
		RAISE EXCEPTION 'Long transaction support disabled, use EnableLongTransaction() to enable.';
	END IF;

	if ( $1 != '' ) THEN
		schema = $1;
	ELSE
		SELECT current_schema() into schema;
	END IF;

	-- TODO: check for an already existing trigger ?

	EXECUTE 'CREATE TRIGGER check_auth BEFORE UPDATE OR DELETE ON ' 
		|| quote_ident(schema) || '.' || quote_ident($2)
		||' FOR EACH ROW EXECUTE PROCEDURE CheckAuthTrigger('
		|| quote_literal($3) || ')';

	RETURN 0;
END;
$_$;


--
-- Name: checkauthtrigger(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION checkauthtrigger() RETURNS trigger
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'check_authorization';


--
-- Name: collect(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION collect(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'LWGEOM_collect';


--
-- Name: combine_bbox(box2d, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION combine_bbox(box2d, geometry) RETURNS box2d
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'BOX2DFLOAT4_combine';


--
-- Name: combine_bbox(box3d_extent, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION combine_bbox(box3d_extent, geometry) RETURNS box3d_extent
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'BOX3D_combine';


--
-- Name: combine_bbox(box3d, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION combine_bbox(box3d, geometry) RETURNS box3d
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'BOX3D_combine';


--
-- Name: compression(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION compression(chip) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_getCompression';


--
-- Name: contains(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION contains(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'contains';


--
-- Name: convexhull(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION convexhull(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'convexhull';


--
-- Name: crosses(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION crosses(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'crosses';


--
-- Name: datatype(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION datatype(chip) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_getDatatype';


--
-- Name: difference(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION difference(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'difference';


--
-- Name: dimension(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION dimension(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_dimension';


--
-- Name: disablelongtransactions(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION disablelongtransactions() RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE
	rec RECORD;

BEGIN

	--
	-- Drop all triggers applied by CheckAuth()
	--
	FOR rec IN
		SELECT c.relname, t.tgname, t.tgargs FROM pg_trigger t, pg_class c, pg_proc p
		WHERE p.proname = 'checkauthtrigger' and t.tgfoid = p.oid and t.tgrelid = c.oid
	LOOP
		EXECUTE 'DROP TRIGGER ' || quote_ident(rec.tgname) ||
			' ON ' || quote_ident(rec.relname);
	END LOOP;

	--
	-- Drop the authorization_table table
	--
	FOR rec IN SELECT * FROM pg_class WHERE relname = 'authorization_table' LOOP
		DROP TABLE authorization_table;
	END LOOP;

	--
	-- Drop the authorized_tables view
	--
	FOR rec IN SELECT * FROM pg_class WHERE relname = 'authorized_tables' LOOP
		DROP VIEW authorized_tables;
	END LOOP;

	RETURN 'Long transactions support disabled';
END;
$$;


--
-- Name: disjoint(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION disjoint(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'disjoint';


--
-- Name: distance(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION distance(geometry, geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_mindistance2d';


--
-- Name: distance_sphere(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION distance_sphere(geometry, geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_distance_sphere';


--
-- Name: distance_spheroid(geometry, geometry, spheroid); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION distance_spheroid(geometry, geometry, spheroid) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_distance_ellipsoid';


--
-- Name: dropbbox(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION dropbbox(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_dropBBOX';


--
-- Name: dropgeometrycolumn(character varying, character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION dropgeometrycolumn(character varying, character varying) RETURNS text
    LANGUAGE plpgsql STRICT
    AS $_$
DECLARE
	ret text;
BEGIN
	SELECT DropGeometryColumn('','',$1,$2) into ret;
	RETURN ret;
END;
$_$;


--
-- Name: dropgeometrycolumn(character varying, character varying, character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION dropgeometrycolumn(character varying, character varying, character varying) RETURNS text
    LANGUAGE plpgsql STRICT
    AS $_$
DECLARE
	ret text;
BEGIN
	SELECT DropGeometryColumn('',$1,$2,$3) into ret;
	RETURN ret;
END;
$_$;


--
-- Name: dropgeometrycolumn(character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION dropgeometrycolumn(character varying, character varying, character varying, character varying) RETURNS text
    LANGUAGE plpgsql STRICT
    AS $_$
DECLARE
	catalog_name alias for $1;
	schema_name alias for $2;
	table_name alias for $3;
	column_name alias for $4;
	myrec RECORD;
	okay boolean;
	real_schema name;

BEGIN


	-- Find, check or fix schema_name
	IF ( schema_name != '' ) THEN
		okay = 'f';

		FOR myrec IN SELECT nspname FROM pg_namespace WHERE text(nspname) = schema_name LOOP
			okay := 't';
		END LOOP;

		IF ( okay <> 't' ) THEN
			RAISE NOTICE 'Invalid schema name - using current_schema()';
			SELECT current_schema() into real_schema;
		ELSE
			real_schema = schema_name;
		END IF;
	ELSE
		SELECT current_schema() into real_schema;
	END IF;

	-- Find out if the column is in the geometry_columns table
	okay = 'f';
	FOR myrec IN SELECT * from geometry_columns where f_table_schema = text(real_schema) and f_table_name = table_name and f_geometry_column = column_name LOOP
		okay := 't';
	END LOOP;
	IF (okay <> 't') THEN
		RAISE EXCEPTION 'column not found in geometry_columns table';
		RETURN 'f';
	END IF;

	-- Remove ref from geometry_columns table
	EXECUTE 'delete from geometry_columns where f_table_schema = ' ||
		quote_literal(real_schema) || ' and f_table_name = ' ||
		quote_literal(table_name)  || ' and f_geometry_column = ' ||
		quote_literal(column_name);

	-- Remove table column
	EXECUTE 'ALTER TABLE ' || quote_ident(real_schema) || '.' ||
		quote_ident(table_name) || ' DROP COLUMN ' ||
		quote_ident(column_name);

	RETURN real_schema || '.' || table_name || '.' || column_name ||' effectively removed.';

END;
$_$;


--
-- Name: dropgeometrytable(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION dropgeometrytable(character varying) RETURNS text
    LANGUAGE sql STRICT
    AS $_$ SELECT DropGeometryTable('','',$1) $_$;


--
-- Name: dropgeometrytable(character varying, character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION dropgeometrytable(character varying, character varying) RETURNS text
    LANGUAGE sql STRICT
    AS $_$ SELECT DropGeometryTable('',$1,$2) $_$;


--
-- Name: dropgeometrytable(character varying, character varying, character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION dropgeometrytable(character varying, character varying, character varying) RETURNS text
    LANGUAGE plpgsql STRICT
    AS $_$
DECLARE
	catalog_name alias for $1;
	schema_name alias for $2;
	table_name alias for $3;
	real_schema name;

BEGIN

	IF ( schema_name = '' ) THEN
		SELECT current_schema() into real_schema;
	ELSE
		real_schema = schema_name;
	END IF;

	-- Remove refs from geometry_columns table
	EXECUTE 'DELETE FROM geometry_columns WHERE ' ||
		'f_table_schema = ' || quote_literal(real_schema) ||
		' AND ' ||
		' f_table_name = ' || quote_literal(table_name);

	-- Remove table
	EXECUTE 'DROP TABLE '
		|| quote_ident(real_schema) || '.' ||
		quote_ident(table_name);

	RETURN
		real_schema || '.' ||
		table_name ||' dropped.';

END;
$_$;


--
-- Name: dump(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION dump(geometry) RETURNS SETOF geometry_dump
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_dump';


--
-- Name: dumprings(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION dumprings(geometry) RETURNS SETOF geometry_dump
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_dump_rings';


--
-- Name: enablelongtransactions(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION enablelongtransactions() RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE
	"query" text;
	exists bool;
	rec RECORD;

BEGIN

	exists = 'f';
	FOR rec IN SELECT * FROM pg_class WHERE relname = 'authorization_table'
	LOOP
		exists = 't';
	END LOOP;

	IF NOT exists
	THEN
		"query" = 'CREATE TABLE authorization_table (
			toid oid, -- table oid
			rid text, -- row id
			expires timestamp,
			authid text
		)';
		EXECUTE "query";
	END IF;

	exists = 'f';
	FOR rec IN SELECT * FROM pg_class WHERE relname = 'authorized_tables'
	LOOP
		exists = 't';
	END LOOP;

	IF NOT exists THEN
		"query" = 'CREATE VIEW authorized_tables AS ' ||
			'SELECT ' ||
			'n.nspname as schema, ' ||
			'c.relname as table, trim(' ||
			quote_literal(chr(92) || '000') ||
			' from t.tgargs) as id_column ' ||
			'FROM pg_trigger t, pg_class c, pg_proc p ' ||
			', pg_namespace n ' ||
			'WHERE p.proname = ' || quote_literal('checkauthtrigger') ||
			' AND c.relnamespace = n.oid' ||
			' AND t.tgfoid = p.oid and t.tgrelid = c.oid';
		EXECUTE "query";
	END IF;

	RETURN 'Long transactions support enabled';
END;
$$;


--
-- Name: endpoint(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION endpoint(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_endpoint_linestring';


--
-- Name: envelope(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION envelope(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_envelope';


--
-- Name: equals(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION equals(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geomequals';


--
-- Name: estimated_extent(text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION estimated_extent(text, text) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT SECURITY DEFINER
    AS '$libdir/postgis-1.5', 'LWGEOM_estimated_extent';


--
-- Name: estimated_extent(text, text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION estimated_extent(text, text, text) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT SECURITY DEFINER
    AS '$libdir/postgis-1.5', 'LWGEOM_estimated_extent';


--
-- Name: expand(box3d, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION expand(box3d, double precision) RETURNS box3d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_expand';


--
-- Name: expand(box2d, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION expand(box2d, double precision) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX2DFLOAT4_expand';


--
-- Name: expand(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION expand(geometry, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_expand';


--
-- Name: exteriorring(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION exteriorring(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_exteriorring_polygon';


--
-- Name: factor(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION factor(chip) RETURNS real
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_getFactor';


--
-- Name: find_extent(text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION find_extent(text, text) RETURNS box2d
    LANGUAGE plpgsql IMMUTABLE STRICT
    AS $_$
DECLARE
	tablename alias for $1;
	columnname alias for $2;
	myrec RECORD;

BEGIN
	FOR myrec IN EXECUTE 'SELECT extent("' || columnname || '") FROM "' || tablename || '"' LOOP
		return myrec.extent;
	END LOOP;
END;
$_$;


--
-- Name: find_extent(text, text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION find_extent(text, text, text) RETURNS box2d
    LANGUAGE plpgsql IMMUTABLE STRICT
    AS $_$
DECLARE
	schemaname alias for $1;
	tablename alias for $2;
	columnname alias for $3;
	myrec RECORD;

BEGIN
	FOR myrec IN EXECUTE 'SELECT extent("' || columnname || '") FROM "' || schemaname || '"."' || tablename || '"' LOOP
		return myrec.extent;
	END LOOP;
END;
$_$;


--
-- Name: find_srid(character varying, character varying, character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION find_srid(character varying, character varying, character varying) RETURNS integer
    LANGUAGE plpgsql IMMUTABLE STRICT
    AS $_$
DECLARE
	schem text;
	tabl text;
	sr int4;
BEGIN
	IF $1 IS NULL THEN
	  RAISE EXCEPTION 'find_srid() - schema is NULL!';
	END IF;
	IF $2 IS NULL THEN
	  RAISE EXCEPTION 'find_srid() - table name is NULL!';
	END IF;
	IF $3 IS NULL THEN
	  RAISE EXCEPTION 'find_srid() - column name is NULL!';
	END IF;
	schem = $1;
	tabl = $2;
-- if the table contains a . and the schema is empty
-- split the table into a schema and a table
-- otherwise drop through to default behavior
	IF ( schem = '' and tabl LIKE '%.%' ) THEN
	 schem = substr(tabl,1,strpos(tabl,'.')-1);
	 tabl = substr(tabl,length(schem)+2);
	ELSE
	 schem = schem || '%';
	END IF;

	select SRID into sr from geometry_columns where f_table_schema like schem and f_table_name = tabl and f_geometry_column = $3;
	IF NOT FOUND THEN
	   RAISE EXCEPTION 'find_srid() - couldnt find the corresponding SRID - is the geometry registered in the GEOMETRY_COLUMNS table?  Is there an uppercase/lowercase missmatch?';
	END IF;
	return sr;
END;
$_$;


--
-- Name: fix_geometry_columns(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION fix_geometry_columns() RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE
	mislinked record;
	result text;
	linked integer;
	deleted integer;
	foundschema integer;
BEGIN

	-- Since 7.3 schema support has been added.
	-- Previous postgis versions used to put the database name in
	-- the schema column. This needs to be fixed, so we try to
	-- set the correct schema for each geometry_colums record
	-- looking at table, column, type and srid.
	UPDATE geometry_columns SET f_table_schema = n.nspname
		FROM pg_namespace n, pg_class c, pg_attribute a,
			pg_constraint sridcheck, pg_constraint typecheck
			WHERE ( f_table_schema is NULL
		OR f_table_schema = ''
			OR f_table_schema NOT IN (
					SELECT nspname::varchar
					FROM pg_namespace nn, pg_class cc, pg_attribute aa
					WHERE cc.relnamespace = nn.oid
					AND cc.relname = f_table_name::name
					AND aa.attrelid = cc.oid
					AND aa.attname = f_geometry_column::name))
			AND f_table_name::name = c.relname
			AND c.oid = a.attrelid
			AND c.relnamespace = n.oid
			AND f_geometry_column::name = a.attname

			AND sridcheck.conrelid = c.oid
		AND sridcheck.consrc LIKE '(srid(% = %)'
			AND sridcheck.consrc ~ textcat(' = ', srid::text)

			AND typecheck.conrelid = c.oid
		AND typecheck.consrc LIKE
		'((geometrytype(%) = ''%''::text) OR (% IS NULL))'
			AND typecheck.consrc ~ textcat(' = ''', type::text)

			AND NOT EXISTS (
					SELECT oid FROM geometry_columns gc
					WHERE c.relname::varchar = gc.f_table_name
					AND n.nspname::varchar = gc.f_table_schema
					AND a.attname::varchar = gc.f_geometry_column
			);

	GET DIAGNOSTICS foundschema = ROW_COUNT;

	-- no linkage to system table needed
	return 'fixed:'||foundschema::text;

END;
$$;


--
-- Name: force_2d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION force_2d(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_force_2d';


--
-- Name: force_3d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION force_3d(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_force_3dz';


--
-- Name: force_3dm(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION force_3dm(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_force_3dm';


--
-- Name: force_3dz(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION force_3dz(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_force_3dz';


--
-- Name: force_4d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION force_4d(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_force_4d';


--
-- Name: force_collection(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION force_collection(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_force_collection';


--
-- Name: forcerhr(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION forcerhr(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_forceRHR_poly';


--
-- Name: generate_cross_sections_array(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION generate_cross_sections_array() RETURNS trigger
    LANGUAGE plpythonu
    AS $$
#{{{
#{{{
# Cette fonction est appele depuis un TRIGGER de la 
# table sections_definition, sans arguments, et elle 
# renvoie un trigger.
# dfinition du TRIGGER:
#    CREATE TRIGGER sections_definition_change 
#    AFTER INSERT OR UPDATE ON sections_definition 
#    FOR EACH ROW 
#    EXECUTE PROCEDURE generate_cross_sections_array();
#
# @#faire le pendant, qui dtruise les enregistrements de sections_array quand on supprime un enregistrement de sections_definition
#}}}
from math import sin, cos, pi
import string

sep       = "," #"\t"      #dfinition du sparateur: la virgule 
sepchar   = "\'"           #dfinition du sparateur de chane de caractres: le ', en SQL

#Cherchons les paramtres dfinissant les coupes, dans la table sections_definition:
res = plpy.execute("SELECT opid, id, location, srid, ll_corner_x, ll_corner_y, ll_corner_z, azim_ng, interval, num_start, count, length, title FROM sections_definition /*WHERE opid IN (SELECT opid FROM operation_active)*/;")

sql_insert = ""               #on btit une chane sql_insert qui contiendra tout ce qu'il faudra faire, des insertions essentiellement

#on enlve d'abord les coupes existantes dans la table sections_array{{{
sql_insert += "DELETE FROM sections_array WHERE sections_array.opid IN (SELECT opid FROM operation_active) AND sections_array.id IS NOT NULL; "
#non: plutt, on enlve seulement les coupes existantes pour le mme id que celui qui vient d'tre affect:
#sql_insert +="DELETE FROM sections_array WHERE substr(sections_array.title, 1, " + str(NEW["title"].len) + ") = " + sepchar + NEW["title"] + sepchar + ";"
# => marche pas:
#  ERREUR:  PL/python : NameError: global name 'NEW' is not defined
#  CONTEXTE : fonction PL/ generate_cross_sections_array Python 
# =>@#reprendre
#}}}

i = 0
for line in res:
    #le rsultat est fourni sous forme de tuples de dictionnaires:
    opid              = line["opid"]
    id                = line["id"]
    srid              = line["srid"]
    location          = line["location"]
    ll_corner_x       = line["ll_corner_x"]
    ll_corner_y       = line["ll_corner_y"]
    ll_corner_z       = line["ll_corner_z"]
    azim_ng           = line["azim_ng"]
    interval_         = line["interval"]
    num_start         = line["num_start"]
    count             = line["count"]
    length            = line["length"]
    title             = line["title"]
    #num   = 1                                   #pas besoin, on a mis un autoincrment dans la table 
    indice_coupe = num_start                     #l'indice de la coupe 
    sql_insert += "INSERT INTO sections_array (opid, location, id, title, srid, length, x1, y1, z1, x2, y2, z2) VALUES \n"
    for j in range(count):
        #out =  str(opid) + sep + sepchar + location + sepchar + sep + sepchar + location+'_'+str(indice_coupe).zfill(3) + sepchar + sep + sepchar + title + " - section # "+str(indice_coupe)                       + sepchar + sep + str(srid) + sep
        out  =  str(opid) + sep + sepchar + location + sepchar + sep + sepchar + location+'_'+str(indice_coupe).zfill(3) + sepchar + sep + sepchar + title + " - section " + location+'_'+str(indice_coupe).zfill(3) + sepchar + sep + str(srid) + sep
        x2 = ll_corner_x+interval_*(j) * cos((90.0-azim_ng)/180*pi)
        y2 = ll_corner_y+interval_*(j) * sin((90.0-azim_ng)/180*pi)
        x1 = x2 - length * sin((90.0-azim_ng)/180*pi)
        y1 = y2 + length * cos((90.0-azim_ng)/180*pi)
        z  = ll_corner_z
        out += str(length) + sep + str(x1) + sep + str(y1) + sep + str(z) + sep + str(x2) + sep + str(y2) + sep + str(z)
        sql_insert += "("+out+"),\n"
        indice_coupe += 1
    sql_insert = sql_insert[0:len(sql_insert)-2]  #pour enlever le dernier ",\n"
    sql_insert += ";\n"
    i += 1

# au lieu de retourner la chaine (comme dans le scr
res = plpy.execute(sql_insert)
return 'OK'
#}}}
$$;


--
-- Name: geography(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography(geometry) RETURNS geography
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_from_geometry';


--
-- Name: geography(geography, integer, boolean); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography(geography, integer, boolean) RETURNS geography
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_enforce_typmod';


--
-- Name: geography_cmp(geography, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_cmp(geography, geography) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_cmp';


--
-- Name: geography_eq(geography, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_eq(geography, geography) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_eq';


--
-- Name: geography_ge(geography, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_ge(geography, geography) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_ge';


--
-- Name: geography_gist_compress(internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_gist_compress(internal) RETURNS internal
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'geography_gist_compress';


--
-- Name: geography_gist_consistent(internal, geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_gist_consistent(internal, geometry, integer) RETURNS boolean
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'geography_gist_consistent';


--
-- Name: geography_gist_decompress(internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_gist_decompress(internal) RETURNS internal
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'geography_gist_decompress';


--
-- Name: geography_gist_join_selectivity(internal, oid, internal, smallint); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_gist_join_selectivity(internal, oid, internal, smallint) RETURNS double precision
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'geography_gist_join_selectivity';


--
-- Name: geography_gist_penalty(internal, internal, internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_gist_penalty(internal, internal, internal) RETURNS internal
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'geography_gist_penalty';


--
-- Name: geography_gist_picksplit(internal, internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_gist_picksplit(internal, internal) RETURNS internal
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'geography_gist_picksplit';


--
-- Name: geography_gist_same(box2d, box2d, internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_gist_same(box2d, box2d, internal) RETURNS internal
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'geography_gist_same';


--
-- Name: geography_gist_selectivity(internal, oid, internal, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_gist_selectivity(internal, oid, internal, integer) RETURNS double precision
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'geography_gist_selectivity';


--
-- Name: geography_gist_union(bytea, internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_gist_union(bytea, internal) RETURNS internal
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'geography_gist_union';


--
-- Name: geography_gt(geography, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_gt(geography, geography) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_gt';


--
-- Name: geography_le(geography, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_le(geography, geography) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_le';


--
-- Name: geography_lt(geography, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_lt(geography, geography) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_lt';


--
-- Name: geography_overlaps(geography, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_overlaps(geography, geography) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_overlaps';


--
-- Name: geography_typmod_dims(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_typmod_dims(integer) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_typmod_dims';


--
-- Name: geography_typmod_srid(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_typmod_srid(integer) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_typmod_srid';


--
-- Name: geography_typmod_type(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_typmod_type(integer) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_typmod_type';


--
-- Name: geomcollfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geomcollfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE
	WHEN geometrytype(GeomFromText($1)) = 'GEOMETRYCOLLECTION'
	THEN GeomFromText($1)
	ELSE NULL END
	$_$;


--
-- Name: geomcollfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geomcollfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE
	WHEN geometrytype(GeomFromText($1, $2)) = 'GEOMETRYCOLLECTION'
	THEN GeomFromText($1,$2)
	ELSE NULL END
	$_$;


--
-- Name: geomcollfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geomcollfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE
	WHEN geometrytype(GeomFromWKB($1)) = 'GEOMETRYCOLLECTION'
	THEN GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: geomcollfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geomcollfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE
	WHEN geometrytype(GeomFromWKB($1, $2)) = 'GEOMETRYCOLLECTION'
	THEN GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: geometry(box3d_extent); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry(box3d_extent) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_to_LWGEOM';


--
-- Name: geometry(box2d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry(box2d) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX2DFLOAT4_to_LWGEOM';


--
-- Name: geometry(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry(box3d) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_to_LWGEOM';


--
-- Name: geometry(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry(text) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'parse_WKT_lwgeom';


--
-- Name: geometry(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry(chip) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_to_LWGEOM';


--
-- Name: geometry(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry(bytea) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_from_bytea';


--
-- Name: geometry(geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry(geography) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geometry_from_geography';


--
-- Name: geometry_above(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_above(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_above';


--
-- Name: geometry_below(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_below(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_below';


--
-- Name: geometry_cmp(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_cmp(geometry, geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'lwgeom_cmp';


--
-- Name: geometry_contain(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_contain(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_contain';


--
-- Name: geometry_contained(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_contained(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_contained';


--
-- Name: geometry_eq(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_eq(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'lwgeom_eq';


--
-- Name: geometry_ge(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_ge(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'lwgeom_ge';


--
-- Name: geometry_gist_joinsel(internal, oid, internal, smallint); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_gist_joinsel(internal, oid, internal, smallint) RETURNS double precision
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'LWGEOM_gist_joinsel';


--
-- Name: geometry_gist_sel(internal, oid, internal, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_gist_sel(internal, oid, internal, integer) RETURNS double precision
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'LWGEOM_gist_sel';


--
-- Name: geometry_gt(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_gt(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'lwgeom_gt';


--
-- Name: geometry_le(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_le(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'lwgeom_le';


--
-- Name: geometry_left(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_left(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_left';


--
-- Name: geometry_lt(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_lt(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'lwgeom_lt';


--
-- Name: geometry_overabove(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_overabove(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_overabove';


--
-- Name: geometry_overbelow(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_overbelow(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_overbelow';


--
-- Name: geometry_overlap(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_overlap(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_overlap';


--
-- Name: geometry_overleft(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_overleft(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_overleft';


--
-- Name: geometry_overright(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_overright(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_overright';


--
-- Name: geometry_right(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_right(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_right';


--
-- Name: geometry_same(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_same(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_samebox';


--
-- Name: geometry_samebox(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_samebox(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_samebox';


--
-- Name: geometryfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometryfromtext(text) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_from_text';


--
-- Name: geometryfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometryfromtext(text, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_from_text';


--
-- Name: geometryn(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometryn(geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_geometryn_collection';


--
-- Name: geometrytype(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometrytype(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_getTYPE';


--
-- Name: geomfromewkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geomfromewkb(bytea) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOMFromWKB';


--
-- Name: geomfromewkt(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geomfromewkt(text) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'parse_WKT_lwgeom';


--
-- Name: geomfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geomfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT geometryfromtext($1)$_$;


--
-- Name: geomfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geomfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT geometryfromtext($1, $2)$_$;


--
-- Name: geomfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geomfromwkb(bytea) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_from_WKB';


--
-- Name: geomfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geomfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT setSRID(GeomFromWKB($1), $2)$_$;


--
-- Name: geomunion(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geomunion(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geomunion';


--
-- Name: get_proj4_from_srid(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION get_proj4_from_srid(integer) RETURNS text
    LANGUAGE plpgsql IMMUTABLE STRICT
    AS $_$
BEGIN
	RETURN proj4text::text FROM spatial_ref_sys WHERE srid= $1;
END;
$_$;


--
-- Name: getbbox(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION getbbox(geometry) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_to_BOX2DFLOAT4';


--
-- Name: getsrid(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION getsrid(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_getSRID';


--
-- Name: gettransactionid(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION gettransactionid() RETURNS xid
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'getTransactionID';


--
-- Name: hasbbox(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION hasbbox(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_hasBBOX';


--
-- Name: height(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION height(chip) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_getHeight';


--
-- Name: interiorringn(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION interiorringn(geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_interiorringn_polygon';


--
-- Name: intersection(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION intersection(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'intersection';


--
-- Name: intersects(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION intersects(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'intersects';


--
-- Name: isclosed(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION isclosed(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_isclosed_linestring';


--
-- Name: isempty(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION isempty(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_isempty';


--
-- Name: isring(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION isring(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'isring';


--
-- Name: issimple(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION issimple(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'issimple';


--
-- Name: isvalid(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION isvalid(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'isvalid';


--
-- Name: lab_ana_results_sample_id_default_value_num(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION lab_ana_results_sample_id_default_value_num() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
--UPDATE public.lab_ana_results SET sample_id = lab_sampleid WHERE (sample_id IS NULL OR sample_id = '') AND (lab_sampleid IS NOT NULL OR lab_sampleid <> '');
UPDATE public.lab_ana_results SET sample_id_lab = sample_id;
UPDATE public.lab_ana_results SET sample_id = REPLACE(sample_id, 'STD:', '') WHERE sample_id ILIKE 'STD%';

UPDATE public.lab_ana_results SET value_num = 
REPLACE(
REPLACE(
REPLACE(
REPLACE(
REPLACE(
REPLACE(
REPLACE(
REPLACE(value,     'IS',           '-999'), 
                  'NSS',           '-999'), 
                  'LNR',          '-9999'), 
                   'NA',            '-99'), 
                    '<',              '-'),
                    '>',               ''),
                 'Not Received',  '-9999'),
                 'Bag Empty',     '-9999')::numeric WHERE value <> 'NULL' AND value IS NOT NULL AND value_num IS NULL;
RETURN NULL;
END;
$$;


--
-- Name: length(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION length(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_length_linestring';


--
-- Name: length2d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION length2d(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_length2d_linestring';


--
-- Name: length2d_spheroid(geometry, spheroid); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION length2d_spheroid(geometry, spheroid) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_length2d_ellipsoid';


--
-- Name: length3d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION length3d(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_length_linestring';


--
-- Name: length3d_spheroid(geometry, spheroid); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION length3d_spheroid(geometry, spheroid) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_length_ellipsoid_linestring';


--
-- Name: length_spheroid(geometry, spheroid); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION length_spheroid(geometry, spheroid) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_length_ellipsoid_linestring';


--
-- Name: line_interpolate_point(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION line_interpolate_point(geometry, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_line_interpolate_point';


--
-- Name: line_locate_point(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION line_locate_point(geometry, geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_line_locate_point';


--
-- Name: line_substring(geometry, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION line_substring(geometry, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_line_substring';


--
-- Name: linefrommultipoint(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION linefrommultipoint(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_line_from_mpoint';


--
-- Name: linefromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION linefromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromText($1)) = 'LINESTRING'
	THEN GeomFromText($1)
	ELSE NULL END
	$_$;


--
-- Name: linefromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION linefromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromText($1, $2)) = 'LINESTRING'
	THEN GeomFromText($1,$2)
	ELSE NULL END
	$_$;


--
-- Name: linefromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION linefromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1)) = 'LINESTRING'
	THEN GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: linefromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION linefromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1, $2)) = 'LINESTRING'
	THEN GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: linemerge(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION linemerge(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'linemerge';


--
-- Name: linestringfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION linestringfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT LineFromText($1)$_$;


--
-- Name: linestringfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION linestringfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT LineFromText($1, $2)$_$;


--
-- Name: linestringfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION linestringfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1)) = 'LINESTRING'
	THEN GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: linestringfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION linestringfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1, $2)) = 'LINESTRING'
	THEN GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: locate_along_measure(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION locate_along_measure(geometry, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT locate_between_measures($1, $2, $2) $_$;


--
-- Name: locate_between_measures(geometry, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION locate_between_measures(geometry, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_locate_between_m';


--
-- Name: lockrow(text, text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION lockrow(text, text, text) RETURNS integer
    LANGUAGE sql STRICT
    AS $_$ SELECT LockRow(current_schema(), $1, $2, $3, now()::timestamp+'1:00'); $_$;


--
-- Name: lockrow(text, text, text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION lockrow(text, text, text, text) RETURNS integer
    LANGUAGE sql STRICT
    AS $_$ SELECT LockRow($1, $2, $3, $4, now()::timestamp+'1:00'); $_$;


--
-- Name: lockrow(text, text, text, timestamp without time zone); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION lockrow(text, text, text, timestamp without time zone) RETURNS integer
    LANGUAGE sql STRICT
    AS $_$ SELECT LockRow(current_schema(), $1, $2, $3, $4); $_$;


--
-- Name: lockrow(text, text, text, text, timestamp without time zone); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION lockrow(text, text, text, text, timestamp without time zone) RETURNS integer
    LANGUAGE plpgsql STRICT
    AS $_$ 
DECLARE
	myschema alias for $1;
	mytable alias for $2;
	myrid   alias for $3;
	authid alias for $4;
	expires alias for $5;
	ret int;
	mytoid oid;
	myrec RECORD;
	
BEGIN

	IF NOT LongTransactionsEnabled() THEN
		RAISE EXCEPTION 'Long transaction support disabled, use EnableLongTransaction() to enable.';
	END IF;

	EXECUTE 'DELETE FROM authorization_table WHERE expires < now()'; 

	SELECT c.oid INTO mytoid FROM pg_class c, pg_namespace n
		WHERE c.relname = mytable
		AND c.relnamespace = n.oid
		AND n.nspname = myschema;

	-- RAISE NOTICE 'toid: %', mytoid;

	FOR myrec IN SELECT * FROM authorization_table WHERE 
		toid = mytoid AND rid = myrid
	LOOP
		IF myrec.authid != authid THEN
			RETURN 0;
		ELSE
			RETURN 1;
		END IF;
	END LOOP;

	EXECUTE 'INSERT INTO authorization_table VALUES ('||
		quote_literal(mytoid::text)||','||quote_literal(myrid)||
		','||quote_literal(expires::text)||
		','||quote_literal(authid) ||')';

	GET DIAGNOSTICS ret = ROW_COUNT;

	RETURN ret;
END;
$_$;


--
-- Name: longtransactionsenabled(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION longtransactionsenabled() RETURNS boolean
    LANGUAGE plpgsql
    AS $$ 
DECLARE
	rec RECORD;
BEGIN
	FOR rec IN SELECT oid FROM pg_class WHERE relname = 'authorized_tables'
	LOOP
		return 't';
	END LOOP;
	return 'f';
END;
$$;


--
-- Name: lwgeom_gist_compress(internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION lwgeom_gist_compress(internal) RETURNS internal
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'LWGEOM_gist_compress';


--
-- Name: lwgeom_gist_consistent(internal, geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION lwgeom_gist_consistent(internal, geometry, integer) RETURNS boolean
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'LWGEOM_gist_consistent';


--
-- Name: lwgeom_gist_decompress(internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION lwgeom_gist_decompress(internal) RETURNS internal
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'LWGEOM_gist_decompress';


--
-- Name: lwgeom_gist_penalty(internal, internal, internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION lwgeom_gist_penalty(internal, internal, internal) RETURNS internal
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'LWGEOM_gist_penalty';


--
-- Name: lwgeom_gist_picksplit(internal, internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION lwgeom_gist_picksplit(internal, internal) RETURNS internal
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'LWGEOM_gist_picksplit';


--
-- Name: lwgeom_gist_same(box2d, box2d, internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION lwgeom_gist_same(box2d, box2d, internal) RETURNS internal
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'LWGEOM_gist_same';


--
-- Name: lwgeom_gist_union(bytea, internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION lwgeom_gist_union(bytea, internal) RETURNS internal
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'LWGEOM_gist_union';


--
-- Name: m(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION m(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_m_point';


--
-- Name: makebox2d(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION makebox2d(geometry, geometry) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX2DFLOAT4_construct';


--
-- Name: makebox3d(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION makebox3d(geometry, geometry) RETURNS box3d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_construct';


--
-- Name: makeline(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION makeline(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makeline';


--
-- Name: makeline_garray(geometry[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION makeline_garray(geometry[]) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makeline_garray';


--
-- Name: makepoint(double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION makepoint(double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makepoint';


--
-- Name: makepoint(double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION makepoint(double precision, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makepoint';


--
-- Name: makepoint(double precision, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION makepoint(double precision, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makepoint';


--
-- Name: makepointm(double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION makepointm(double precision, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makepoint3dm';


--
-- Name: makepolygon(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION makepolygon(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makepoly';


--
-- Name: makepolygon(geometry, geometry[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION makepolygon(geometry, geometry[]) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makepoly';


--
-- Name: max_distance(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION max_distance(geometry, geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_maxdistance2d_linestring';


--
-- Name: mem_size(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mem_size(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_mem_size';


--
-- Name: mlinefromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mlinefromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromText($1)) = 'MULTILINESTRING'
	THEN GeomFromText($1)
	ELSE NULL END
	$_$;


--
-- Name: mlinefromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mlinefromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE
	WHEN geometrytype(GeomFromText($1, $2)) = 'MULTILINESTRING'
	THEN GeomFromText($1,$2)
	ELSE NULL END
	$_$;


--
-- Name: mlinefromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mlinefromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1)) = 'MULTILINESTRING'
	THEN GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: mlinefromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mlinefromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1, $2)) = 'MULTILINESTRING'
	THEN GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: mpointfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mpointfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromText($1)) = 'MULTIPOINT'
	THEN GeomFromText($1)
	ELSE NULL END
	$_$;


--
-- Name: mpointfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mpointfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromText($1,$2)) = 'MULTIPOINT'
	THEN GeomFromText($1,$2)
	ELSE NULL END
	$_$;


--
-- Name: mpointfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mpointfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1)) = 'MULTIPOINT'
	THEN GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: mpointfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mpointfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1,$2)) = 'MULTIPOINT'
	THEN GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: mpolyfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mpolyfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromText($1)) = 'MULTIPOLYGON'
	THEN GeomFromText($1)
	ELSE NULL END
	$_$;


--
-- Name: mpolyfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mpolyfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromText($1, $2)) = 'MULTIPOLYGON'
	THEN GeomFromText($1,$2)
	ELSE NULL END
	$_$;


--
-- Name: mpolyfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mpolyfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1)) = 'MULTIPOLYGON'
	THEN GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: mpolyfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mpolyfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1, $2)) = 'MULTIPOLYGON'
	THEN GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: multi(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION multi(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_force_multi';


--
-- Name: multilinefromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION multilinefromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1)) = 'MULTILINESTRING'
	THEN GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: multilinefromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION multilinefromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1, $2)) = 'MULTILINESTRING'
	THEN GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: multilinestringfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION multilinestringfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT ST_MLineFromText($1)$_$;


--
-- Name: multilinestringfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION multilinestringfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT MLineFromText($1, $2)$_$;


--
-- Name: multipointfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION multipointfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT MPointFromText($1)$_$;


--
-- Name: multipointfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION multipointfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT MPointFromText($1, $2)$_$;


--
-- Name: multipointfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION multipointfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1)) = 'MULTIPOINT'
	THEN GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: multipointfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION multipointfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1,$2)) = 'MULTIPOINT'
	THEN GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: multipolyfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION multipolyfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1)) = 'MULTIPOLYGON'
	THEN GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: multipolyfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION multipolyfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1, $2)) = 'MULTIPOLYGON'
	THEN GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: multipolygonfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION multipolygonfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT MPolyFromText($1)$_$;


--
-- Name: multipolygonfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION multipolygonfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT MPolyFromText($1, $2)$_$;


--
-- Name: ndims(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION ndims(geometry) RETURNS smallint
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_ndims';


--
-- Name: noop(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION noop(geometry) RETURNS geometry
    LANGUAGE c STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_noop';


--
-- Name: npoints(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION npoints(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_npoints';


--
-- Name: nrings(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION nrings(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_nrings';


--
-- Name: numgeometries(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION numgeometries(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_numgeometries_collection';


--
-- Name: numinteriorring(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION numinteriorring(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_numinteriorrings_polygon';


--
-- Name: numinteriorrings(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION numinteriorrings(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_numinteriorrings_polygon';


--
-- Name: numpoints(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION numpoints(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_numpoints_linestring';


--
-- Name: overlaps(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION "overlaps"(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'overlaps';


--
-- Name: perimeter(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION perimeter(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_perimeter_poly';


--
-- Name: perimeter2d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION perimeter2d(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_perimeter2d_poly';


--
-- Name: perimeter3d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION perimeter3d(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_perimeter_poly';


--
-- Name: pgis_geometry_accum_finalfn(pgis_abs); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pgis_geometry_accum_finalfn(pgis_abs) RETURNS geometry[]
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'pgis_geometry_accum_finalfn';


--
-- Name: pgis_geometry_accum_transfn(pgis_abs, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pgis_geometry_accum_transfn(pgis_abs, geometry) RETURNS pgis_abs
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'pgis_geometry_accum_transfn';


--
-- Name: pgis_geometry_collect_finalfn(pgis_abs); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pgis_geometry_collect_finalfn(pgis_abs) RETURNS geometry
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'pgis_geometry_collect_finalfn';


--
-- Name: pgis_geometry_makeline_finalfn(pgis_abs); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pgis_geometry_makeline_finalfn(pgis_abs) RETURNS geometry
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'pgis_geometry_makeline_finalfn';


--
-- Name: pgis_geometry_polygonize_finalfn(pgis_abs); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pgis_geometry_polygonize_finalfn(pgis_abs) RETURNS geometry
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'pgis_geometry_polygonize_finalfn';


--
-- Name: pgis_geometry_union_finalfn(pgis_abs); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pgis_geometry_union_finalfn(pgis_abs) RETURNS geometry
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'pgis_geometry_union_finalfn';


--
-- Name: point_inside_circle(geometry, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION point_inside_circle(geometry, double precision, double precision, double precision) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_inside_circle_point';


--
-- Name: pointfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pointfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromText($1)) = 'POINT'
	THEN GeomFromText($1)
	ELSE NULL END
	$_$;


--
-- Name: pointfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pointfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromText($1, $2)) = 'POINT'
	THEN GeomFromText($1,$2)
	ELSE NULL END
	$_$;


--
-- Name: pointfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pointfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1)) = 'POINT'
	THEN GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: pointfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pointfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1, $2)) = 'POINT'
	THEN GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: pointn(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pointn(geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_pointn_linestring';


--
-- Name: pointonsurface(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pointonsurface(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'pointonsurface';


--
-- Name: polyfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION polyfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromText($1)) = 'POLYGON'
	THEN GeomFromText($1)
	ELSE NULL END
	$_$;


--
-- Name: polyfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION polyfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromText($1, $2)) = 'POLYGON'
	THEN GeomFromText($1,$2)
	ELSE NULL END
	$_$;


--
-- Name: polyfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION polyfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1)) = 'POLYGON'
	THEN GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: polyfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION polyfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1, $2)) = 'POLYGON'
	THEN GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: polygonfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION polygonfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT PolyFromText($1)$_$;


--
-- Name: polygonfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION polygonfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT PolyFromText($1, $2)$_$;


--
-- Name: polygonfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION polygonfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1)) = 'POLYGON'
	THEN GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: polygonfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION polygonfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1,$2)) = 'POLYGON'
	THEN GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: polygonize_garray(geometry[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION polygonize_garray(geometry[]) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'polygonize_garray';


--
-- Name: populate_geometry_columns(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION populate_geometry_columns() RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE
	inserted    integer;
	oldcount    integer;
	probed      integer;
	stale       integer;
	gcs         RECORD;
	gc          RECORD;
	gsrid       integer;
	gndims      integer;
	gtype       text;
	query       text;
	gc_is_valid boolean;

BEGIN
	SELECT count(*) INTO oldcount FROM geometry_columns;
	inserted := 0;

	EXECUTE 'TRUNCATE geometry_columns';

	-- Count the number of geometry columns in all tables and views
	SELECT count(DISTINCT c.oid) INTO probed
	FROM pg_class c,
		 pg_attribute a,
		 pg_type t,
		 pg_namespace n
	WHERE (c.relkind = 'r' OR c.relkind = 'v')
	AND t.typname = 'geometry'
	AND a.attisdropped = false
	AND a.atttypid = t.oid
	AND a.attrelid = c.oid
	AND c.relnamespace = n.oid
	AND n.nspname NOT ILIKE 'pg_temp%';

	-- Iterate through all non-dropped geometry columns
	RAISE DEBUG 'Processing Tables.....';

	FOR gcs IN
	SELECT DISTINCT ON (c.oid) c.oid, n.nspname, c.relname
		FROM pg_class c,
			 pg_attribute a,
			 pg_type t,
			 pg_namespace n
		WHERE c.relkind = 'r'
		AND t.typname = 'geometry'
		AND a.attisdropped = false
		AND a.atttypid = t.oid
		AND a.attrelid = c.oid
		AND c.relnamespace = n.oid
		AND n.nspname NOT ILIKE 'pg_temp%'
	LOOP

	inserted := inserted + populate_geometry_columns(gcs.oid);
	END LOOP;

	-- Add views to geometry columns table
	RAISE DEBUG 'Processing Views.....';
	FOR gcs IN
	SELECT DISTINCT ON (c.oid) c.oid, n.nspname, c.relname
		FROM pg_class c,
			 pg_attribute a,
			 pg_type t,
			 pg_namespace n
		WHERE c.relkind = 'v'
		AND t.typname = 'geometry'
		AND a.attisdropped = false
		AND a.atttypid = t.oid
		AND a.attrelid = c.oid
		AND c.relnamespace = n.oid
	LOOP

	inserted := inserted + populate_geometry_columns(gcs.oid);
	END LOOP;

	IF oldcount > inserted THEN
	stale = oldcount-inserted;
	ELSE
	stale = 0;
	END IF;

	RETURN 'probed:' ||probed|| ' inserted:'||inserted|| ' conflicts:'||probed-inserted|| ' deleted:'||stale;
END

$$;


--
-- Name: populate_geometry_columns(oid); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION populate_geometry_columns(tbl_oid oid) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
	gcs         RECORD;
	gc          RECORD;
	gsrid       integer;
	gndims      integer;
	gtype       text;
	query       text;
	gc_is_valid boolean;
	inserted    integer;

BEGIN
	inserted := 0;

	-- Iterate through all geometry columns in this table
	FOR gcs IN
	SELECT n.nspname, c.relname, a.attname
		FROM pg_class c,
			 pg_attribute a,
			 pg_type t,
			 pg_namespace n
		WHERE c.relkind = 'r'
		AND t.typname = 'geometry'
		AND a.attisdropped = false
		AND a.atttypid = t.oid
		AND a.attrelid = c.oid
		AND c.relnamespace = n.oid
		AND n.nspname NOT ILIKE 'pg_temp%'
		AND c.oid = tbl_oid
	LOOP

	RAISE DEBUG 'Processing table %.%.%', gcs.nspname, gcs.relname, gcs.attname;

	DELETE FROM geometry_columns
	  WHERE f_table_schema = quote_ident(gcs.nspname)
	  AND f_table_name = quote_ident(gcs.relname)
	  AND f_geometry_column = quote_ident(gcs.attname);

	gc_is_valid := true;

	-- Try to find srid check from system tables (pg_constraint)
	gsrid :=
		(SELECT replace(replace(split_part(s.consrc, ' = ', 2), ')', ''), '(', '')
		 FROM pg_class c, pg_namespace n, pg_attribute a, pg_constraint s
		 WHERE n.nspname = gcs.nspname
		 AND c.relname = gcs.relname
		 AND a.attname = gcs.attname
		 AND a.attrelid = c.oid
		 AND s.connamespace = n.oid
		 AND s.conrelid = c.oid
		 AND a.attnum = ANY (s.conkey)
		 AND s.consrc LIKE '%srid(% = %');
	IF (gsrid IS NULL) THEN
		-- Try to find srid from the geometry itself
		EXECUTE 'SELECT srid(' || quote_ident(gcs.attname) || ')
				 FROM ONLY ' || quote_ident(gcs.nspname) || '.' || quote_ident(gcs.relname) || '
				 WHERE ' || quote_ident(gcs.attname) || ' IS NOT NULL LIMIT 1'
			INTO gc;
		gsrid := gc.srid;

		-- Try to apply srid check to column
		IF (gsrid IS NOT NULL) THEN
			BEGIN
				EXECUTE 'ALTER TABLE ONLY ' || quote_ident(gcs.nspname) || '.' || quote_ident(gcs.relname) || '
						 ADD CONSTRAINT ' || quote_ident('enforce_srid_' || gcs.attname) || '
						 CHECK (srid(' || quote_ident(gcs.attname) || ') = ' || gsrid || ')';
			EXCEPTION
				WHEN check_violation THEN
					RAISE WARNING 'Not inserting ''%'' in ''%.%'' into geometry_columns: could not apply constraint CHECK (srid(%) = %)', quote_ident(gcs.attname), quote_ident(gcs.nspname), quote_ident(gcs.relname), quote_ident(gcs.attname), gsrid;
					gc_is_valid := false;
			END;
		END IF;
	END IF;

	-- Try to find ndims check from system tables (pg_constraint)
	gndims :=
		(SELECT replace(split_part(s.consrc, ' = ', 2), ')', '')
		 FROM pg_class c, pg_namespace n, pg_attribute a, pg_constraint s
		 WHERE n.nspname = gcs.nspname
		 AND c.relname = gcs.relname
		 AND a.attname = gcs.attname
		 AND a.attrelid = c.oid
		 AND s.connamespace = n.oid
		 AND s.conrelid = c.oid
		 AND a.attnum = ANY (s.conkey)
		 AND s.consrc LIKE '%ndims(% = %');
	IF (gndims IS NULL) THEN
		-- Try to find ndims from the geometry itself
		EXECUTE 'SELECT ndims(' || quote_ident(gcs.attname) || ')
				 FROM ONLY ' || quote_ident(gcs.nspname) || '.' || quote_ident(gcs.relname) || '
				 WHERE ' || quote_ident(gcs.attname) || ' IS NOT NULL LIMIT 1'
			INTO gc;
		gndims := gc.ndims;

		-- Try to apply ndims check to column
		IF (gndims IS NOT NULL) THEN
			BEGIN
				EXECUTE 'ALTER TABLE ONLY ' || quote_ident(gcs.nspname) || '.' || quote_ident(gcs.relname) || '
						 ADD CONSTRAINT ' || quote_ident('enforce_dims_' || gcs.attname) || '
						 CHECK (ndims(' || quote_ident(gcs.attname) || ') = '||gndims||')';
			EXCEPTION
				WHEN check_violation THEN
					RAISE WARNING 'Not inserting ''%'' in ''%.%'' into geometry_columns: could not apply constraint CHECK (ndims(%) = %)', quote_ident(gcs.attname), quote_ident(gcs.nspname), quote_ident(gcs.relname), quote_ident(gcs.attname), gndims;
					gc_is_valid := false;
			END;
		END IF;
	END IF;

	-- Try to find geotype check from system tables (pg_constraint)
	gtype :=
		(SELECT replace(split_part(s.consrc, '''', 2), ')', '')
		 FROM pg_class c, pg_namespace n, pg_attribute a, pg_constraint s
		 WHERE n.nspname = gcs.nspname
		 AND c.relname = gcs.relname
		 AND a.attname = gcs.attname
		 AND a.attrelid = c.oid
		 AND s.connamespace = n.oid
		 AND s.conrelid = c.oid
		 AND a.attnum = ANY (s.conkey)
		 AND s.consrc LIKE '%geometrytype(% = %');
	IF (gtype IS NULL) THEN
		-- Try to find geotype from the geometry itself
		EXECUTE 'SELECT geometrytype(' || quote_ident(gcs.attname) || ')
				 FROM ONLY ' || quote_ident(gcs.nspname) || '.' || quote_ident(gcs.relname) || '
				 WHERE ' || quote_ident(gcs.attname) || ' IS NOT NULL LIMIT 1'
			INTO gc;
		gtype := gc.geometrytype;
		--IF (gtype IS NULL) THEN
		--    gtype := 'GEOMETRY';
		--END IF;

		-- Try to apply geometrytype check to column
		IF (gtype IS NOT NULL) THEN
			BEGIN
				EXECUTE 'ALTER TABLE ONLY ' || quote_ident(gcs.nspname) || '.' || quote_ident(gcs.relname) || '
				ADD CONSTRAINT ' || quote_ident('enforce_geotype_' || gcs.attname) || '
				CHECK ((geometrytype(' || quote_ident(gcs.attname) || ') = ' || quote_literal(gtype) || ') OR (' || quote_ident(gcs.attname) || ' IS NULL))';
			EXCEPTION
				WHEN check_violation THEN
					-- No geometry check can be applied. This column contains a number of geometry types.
					RAISE WARNING 'Could not add geometry type check (%) to table column: %.%.%', gtype, quote_ident(gcs.nspname),quote_ident(gcs.relname),quote_ident(gcs.attname);
			END;
		END IF;
	END IF;

	IF (gsrid IS NULL) THEN
		RAISE WARNING 'Not inserting ''%'' in ''%.%'' into geometry_columns: could not determine the srid', quote_ident(gcs.attname), quote_ident(gcs.nspname), quote_ident(gcs.relname);
	ELSIF (gndims IS NULL) THEN
		RAISE WARNING 'Not inserting ''%'' in ''%.%'' into geometry_columns: could not determine the number of dimensions', quote_ident(gcs.attname), quote_ident(gcs.nspname), quote_ident(gcs.relname);
	ELSIF (gtype IS NULL) THEN
		RAISE WARNING 'Not inserting ''%'' in ''%.%'' into geometry_columns: could not determine the geometry type', quote_ident(gcs.attname), quote_ident(gcs.nspname), quote_ident(gcs.relname);
	ELSE
		-- Only insert into geometry_columns if table constraints could be applied.
		IF (gc_is_valid) THEN
			INSERT INTO geometry_columns (f_table_catalog,f_table_schema, f_table_name, f_geometry_column, coord_dimension, srid, type)
			VALUES ('', gcs.nspname, gcs.relname, gcs.attname, gndims, gsrid, gtype);
			inserted := inserted + 1;
		END IF;
	END IF;
	END LOOP;

	-- Add views to geometry columns table
	FOR gcs IN
	SELECT n.nspname, c.relname, a.attname
		FROM pg_class c,
			 pg_attribute a,
			 pg_type t,
			 pg_namespace n
		WHERE c.relkind = 'v'
		AND t.typname = 'geometry'
		AND a.attisdropped = false
		AND a.atttypid = t.oid
		AND a.attrelid = c.oid
		AND c.relnamespace = n.oid
		AND n.nspname NOT ILIKE 'pg_temp%'
		AND c.oid = tbl_oid
	LOOP
		RAISE DEBUG 'Processing view %.%.%', gcs.nspname, gcs.relname, gcs.attname;

		EXECUTE 'SELECT ndims(' || quote_ident(gcs.attname) || ')
				 FROM ' || quote_ident(gcs.nspname) || '.' || quote_ident(gcs.relname) || '
				 WHERE ' || quote_ident(gcs.attname) || ' IS NOT NULL LIMIT 1'
			INTO gc;
		gndims := gc.ndims;

		EXECUTE 'SELECT srid(' || quote_ident(gcs.attname) || ')
				 FROM ' || quote_ident(gcs.nspname) || '.' || quote_ident(gcs.relname) || '
				 WHERE ' || quote_ident(gcs.attname) || ' IS NOT NULL LIMIT 1'
			INTO gc;
		gsrid := gc.srid;

		EXECUTE 'SELECT geometrytype(' || quote_ident(gcs.attname) || ')
				 FROM ' || quote_ident(gcs.nspname) || '.' || quote_ident(gcs.relname) || '
				 WHERE ' || quote_ident(gcs.attname) || ' IS NOT NULL LIMIT 1'
			INTO gc;
		gtype := gc.geometrytype;

		IF (gndims IS NULL) THEN
			RAISE WARNING 'Not inserting ''%'' in ''%.%'' into geometry_columns: could not determine ndims', quote_ident(gcs.attname), quote_ident(gcs.nspname), quote_ident(gcs.relname);
		ELSIF (gsrid IS NULL) THEN
			RAISE WARNING 'Not inserting ''%'' in ''%.%'' into geometry_columns: could not determine srid', quote_ident(gcs.attname), quote_ident(gcs.nspname), quote_ident(gcs.relname);
		ELSIF (gtype IS NULL) THEN
			RAISE WARNING 'Not inserting ''%'' in ''%.%'' into geometry_columns: could not determine gtype', quote_ident(gcs.attname), quote_ident(gcs.nspname), quote_ident(gcs.relname);
		ELSE
			query := 'INSERT INTO geometry_columns (f_table_catalog,f_table_schema, f_table_name, f_geometry_column, coord_dimension, srid, type) ' ||
					 'VALUES ('''', ' || quote_literal(gcs.nspname) || ',' || quote_literal(gcs.relname) || ',' || quote_literal(gcs.attname) || ',' || gndims || ',' || gsrid || ',' || quote_literal(gtype) || ')';
			EXECUTE query;
			inserted := inserted + 1;
		END IF;
	END LOOP;

	RETURN inserted;
END

$$;


--
-- Name: postgis_addbbox(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_addbbox(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_addBBOX';


--
-- Name: postgis_cache_bbox(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_cache_bbox() RETURNS trigger
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'cache_bbox';


--
-- Name: postgis_dropbbox(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_dropbbox(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_dropBBOX';


--
-- Name: postgis_full_version(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_full_version() RETURNS text
    LANGUAGE plpgsql IMMUTABLE
    AS $$
DECLARE
	libver text;
	projver text;
	geosver text;
	libxmlver text;
	usestats bool;
	dbproc text;
	relproc text;
	fullver text;
BEGIN
	SELECT postgis_lib_version() INTO libver;
	SELECT postgis_proj_version() INTO projver;
	SELECT postgis_geos_version() INTO geosver;
	SELECT postgis_libxml_version() INTO libxmlver;
	SELECT postgis_uses_stats() INTO usestats;
	SELECT postgis_scripts_installed() INTO dbproc;
	SELECT postgis_scripts_released() INTO relproc;

	fullver = 'POSTGIS="' || libver || '"';

	IF  geosver IS NOT NULL THEN
		fullver = fullver || ' GEOS="' || geosver || '"';
	END IF;

	IF  projver IS NOT NULL THEN
		fullver = fullver || ' PROJ="' || projver || '"';
	END IF;

	IF  libxmlver IS NOT NULL THEN
		fullver = fullver || ' LIBXML="' || libxmlver || '"';
	END IF;

	IF usestats THEN
		fullver = fullver || ' USE_STATS';
	END IF;

	-- fullver = fullver || ' DBPROC="' || dbproc || '"';
	-- fullver = fullver || ' RELPROC="' || relproc || '"';

	IF dbproc != relproc THEN
		fullver = fullver || ' (procs from ' || dbproc || ' need upgrade)';
	END IF;

	RETURN fullver;
END
$$;


--
-- Name: postgis_geos_version(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_geos_version() RETURNS text
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'postgis_geos_version';


--
-- Name: postgis_getbbox(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_getbbox(geometry) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_to_BOX2DFLOAT4';


--
-- Name: postgis_gist_joinsel(internal, oid, internal, smallint); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_gist_joinsel(internal, oid, internal, smallint) RETURNS double precision
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'LWGEOM_gist_joinsel';


--
-- Name: postgis_gist_sel(internal, oid, internal, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_gist_sel(internal, oid, internal, integer) RETURNS double precision
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'LWGEOM_gist_sel';


--
-- Name: postgis_hasbbox(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_hasbbox(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_hasBBOX';


--
-- Name: postgis_lib_build_date(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_lib_build_date() RETURNS text
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'postgis_lib_build_date';


--
-- Name: postgis_lib_version(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_lib_version() RETURNS text
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'postgis_lib_version';


--
-- Name: postgis_libxml_version(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_libxml_version() RETURNS text
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'postgis_libxml_version';


--
-- Name: postgis_noop(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_noop(geometry) RETURNS geometry
    LANGUAGE c STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_noop';


--
-- Name: postgis_proj_version(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_proj_version() RETURNS text
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'postgis_proj_version';


--
-- Name: postgis_scripts_build_date(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_scripts_build_date() RETURNS text
    LANGUAGE sql IMMUTABLE
    AS $$SELECT '2011-03-17 11:30:13'::text AS version$$;


--
-- Name: postgis_scripts_installed(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_scripts_installed() RETURNS text
    LANGUAGE sql IMMUTABLE
    AS $$SELECT '1.5 r5976'::text AS version$$;


--
-- Name: postgis_scripts_released(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_scripts_released() RETURNS text
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'postgis_scripts_released';


--
-- Name: postgis_transform_geometry(geometry, text, text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_transform_geometry(geometry, text, text, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'transform_geom';


--
-- Name: postgis_uses_stats(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_uses_stats() RETURNS boolean
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'postgis_uses_stats';


--
-- Name: postgis_version(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_version() RETURNS text
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'postgis_version';


--
-- Name: probe_geometry_columns(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION probe_geometry_columns() RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE
	inserted integer;
	oldcount integer;
	probed integer;
	stale integer;
BEGIN

	SELECT count(*) INTO oldcount FROM geometry_columns;

	SELECT count(*) INTO probed
		FROM pg_class c, pg_attribute a, pg_type t,
			pg_namespace n,
			pg_constraint sridcheck, pg_constraint typecheck

		WHERE t.typname = 'geometry'
		AND a.atttypid = t.oid
		AND a.attrelid = c.oid
		AND c.relnamespace = n.oid
		AND sridcheck.connamespace = n.oid
		AND typecheck.connamespace = n.oid
		AND sridcheck.conrelid = c.oid
		AND sridcheck.consrc LIKE '(srid('||a.attname||') = %)'
		AND typecheck.conrelid = c.oid
		AND typecheck.consrc LIKE
		'((geometrytype('||a.attname||') = ''%''::text) OR (% IS NULL))'
		;

	INSERT INTO geometry_columns SELECT
		''::varchar as f_table_catalogue,
		n.nspname::varchar as f_table_schema,
		c.relname::varchar as f_table_name,
		a.attname::varchar as f_geometry_column,
		2 as coord_dimension,
		trim(both  ' =)' from
			replace(replace(split_part(
				sridcheck.consrc, ' = ', 2), ')', ''), '(', ''))::integer AS srid,
		trim(both ' =)''' from substr(typecheck.consrc,
			strpos(typecheck.consrc, '='),
			strpos(typecheck.consrc, '::')-
			strpos(typecheck.consrc, '=')
			))::varchar as type
		FROM pg_class c, pg_attribute a, pg_type t,
			pg_namespace n,
			pg_constraint sridcheck, pg_constraint typecheck
		WHERE t.typname = 'geometry'
		AND a.atttypid = t.oid
		AND a.attrelid = c.oid
		AND c.relnamespace = n.oid
		AND sridcheck.connamespace = n.oid
		AND typecheck.connamespace = n.oid
		AND sridcheck.conrelid = c.oid
		AND sridcheck.consrc LIKE '(st_srid('||a.attname||') = %)'
		AND typecheck.conrelid = c.oid
		AND typecheck.consrc LIKE
		'((geometrytype('||a.attname||') = ''%''::text) OR (% IS NULL))'

			AND NOT EXISTS (
					SELECT oid FROM geometry_columns gc
					WHERE c.relname::varchar = gc.f_table_name
					AND n.nspname::varchar = gc.f_table_schema
					AND a.attname::varchar = gc.f_geometry_column
			);

	GET DIAGNOSTICS inserted = ROW_COUNT;

	IF oldcount > probed THEN
		stale = oldcount-probed;
	ELSE
		stale = 0;
	END IF;

	RETURN 'probed:'||probed::text||
		' inserted:'||inserted::text||
		' conflicts:'||(probed-inserted)::text||
		' stale:'||stale::text;
END

$$;


--
-- Name: relate(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION relate(geometry, geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'relate_full';


--
-- Name: relate(geometry, geometry, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION relate(geometry, geometry, text) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'relate_pattern';


--
-- Name: removepoint(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION removepoint(geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_removepoint';


--
-- Name: rename_geometry_table_constraints(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION rename_geometry_table_constraints() RETURNS text
    LANGUAGE sql IMMUTABLE
    AS $$
SELECT 'rename_geometry_table_constraint() is obsoleted'::text
$$;


--
-- Name: reverse(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION reverse(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_reverse';


--
-- Name: rotate(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION rotate(geometry, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT rotateZ($1, $2)$_$;


--
-- Name: rotatex(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION rotatex(geometry, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT affine($1, 1, 0, 0, 0, cos($2), -sin($2), 0, sin($2), cos($2), 0, 0, 0)$_$;


--
-- Name: rotatey(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION rotatey(geometry, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT affine($1,  cos($2), 0, sin($2),  0, 1, 0,  -sin($2), 0, cos($2), 0,  0, 0)$_$;


--
-- Name: rotatez(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION rotatez(geometry, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT affine($1,  cos($2), -sin($2), 0,  sin($2), cos($2), 0,  0, 0, 1,  0, 0, 0)$_$;


--
-- Name: scale(geometry, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION scale(geometry, double precision, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT scale($1, $2, $3, 1)$_$;


--
-- Name: scale(geometry, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION scale(geometry, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT affine($1,  $2, 0, 0,  0, $3, 0,  0, 0, $4,  0, 0, 0)$_$;


--
-- Name: se_envelopesintersect(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION se_envelopesintersect(geometry, geometry) RETURNS boolean
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ 
	SELECT $1 && $2
	$_$;


--
-- Name: se_is3d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION se_is3d(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_hasz';


--
-- Name: se_ismeasured(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION se_ismeasured(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_hasm';


--
-- Name: se_locatealong(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION se_locatealong(geometry, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT locate_between_measures($1, $2, $2) $_$;


--
-- Name: se_locatebetween(geometry, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION se_locatebetween(geometry, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_locate_between_m';


--
-- Name: se_m(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION se_m(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_m_point';


--
-- Name: se_z(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION se_z(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_z_point';


--
-- Name: segmentize(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION segmentize(geometry, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_segmentize2d';


--
-- Name: setfactor(chip, real); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION setfactor(chip, real) RETURNS chip
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_setFactor';


--
-- Name: setpoint(geometry, integer, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION setpoint(geometry, integer, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_setpoint_linestring';


--
-- Name: setsrid(chip, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION setsrid(chip, integer) RETURNS chip
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_setSRID';


--
-- Name: setsrid(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION setsrid(geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_setSRID';


--
-- Name: shift_longitude(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION shift_longitude(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_longitude_shift';


--
-- Name: simplify(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION simplify(geometry, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_simplify2d';


--
-- Name: snaptogrid(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION snaptogrid(geometry, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT SnapToGrid($1, 0, 0, $2, $2)$_$;


--
-- Name: snaptogrid(geometry, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION snaptogrid(geometry, double precision, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT SnapToGrid($1, 0, 0, $2, $3)$_$;


--
-- Name: snaptogrid(geometry, double precision, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION snaptogrid(geometry, double precision, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_snaptogrid';


--
-- Name: snaptogrid(geometry, geometry, double precision, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION snaptogrid(geometry, geometry, double precision, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_snaptogrid_pointoff';


--
-- Name: srid(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION srid(chip) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_getSRID';


--
-- Name: srid(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION srid(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_getSRID';


--
-- Name: st_addmeasure(geometry, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_addmeasure(geometry, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'ST_AddMeasure';


--
-- Name: st_addpoint(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_addpoint(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_addpoint';


--
-- Name: st_addpoint(geometry, geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_addpoint(geometry, geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_addpoint';


--
-- Name: st_affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT affine($1,  $2, $3, 0,  $4, $5, 0,  0, 0, 1,  $6, $7, 0)$_$;


--
-- Name: st_affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_affine';


--
-- Name: st_area(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_area(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_area_polygon';


--
-- Name: st_area(geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_area(geography) RETURNS double precision
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT ST_Area($1, true)$_$;


--
-- Name: st_area(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_area(text) RETURNS double precision
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT ST_Area($1::geometry);  $_$;


--
-- Name: st_area(geography, boolean); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_area(geography, boolean) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'geography_area';


--
-- Name: st_area2d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_area2d(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_area_polygon';


--
-- Name: st_asbinary(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asbinary(geometry) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asBinary';


--
-- Name: st_asbinary(geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asbinary(geography) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_as_binary';


--
-- Name: st_asbinary(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asbinary(text) RETURNS bytea
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT ST_AsBinary($1::geometry);  $_$;


--
-- Name: st_asbinary(geometry, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asbinary(geometry, text) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asBinary';


--
-- Name: st_asewkb(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asewkb(geometry) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'WKBFromLWGEOM';


--
-- Name: st_asewkb(geometry, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asewkb(geometry, text) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'WKBFromLWGEOM';


--
-- Name: st_asewkt(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asewkt(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asEWKT';


--
-- Name: st_asgeojson(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgeojson(geometry) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGeoJson(1, $1, 15, 0)$_$;


--
-- Name: st_asgeojson(geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgeojson(geography) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGeoJson(1, $1, 15, 0)$_$;


--
-- Name: st_asgeojson(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgeojson(text) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT ST_AsGeoJson($1::geometry);  $_$;


--
-- Name: st_asgeojson(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgeojson(geometry, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGeoJson(1, $1, $2, 0)$_$;


--
-- Name: st_asgeojson(integer, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgeojson(integer, geometry) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGeoJson($1, $2, 15, 0)$_$;


--
-- Name: st_asgeojson(geography, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgeojson(geography, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGeoJson(1, $1, $2, 0)$_$;


--
-- Name: st_asgeojson(integer, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgeojson(integer, geography) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGeoJson($1, $2, 15, 0)$_$;


--
-- Name: st_asgeojson(integer, geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgeojson(integer, geometry, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGeoJson($1, $2, $3, 0)$_$;


--
-- Name: st_asgeojson(geometry, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgeojson(geometry, integer, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGeoJson(1, $1, $2, $3)$_$;


--
-- Name: st_asgeojson(integer, geography, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgeojson(integer, geography, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGeoJson($1, $2, $3, 0)$_$;


--
-- Name: st_asgeojson(geography, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgeojson(geography, integer, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGeoJson(1, $1, $2, $3)$_$;


--
-- Name: st_asgeojson(integer, geometry, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgeojson(integer, geometry, integer, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGeoJson($1, $2, $3, $4)$_$;


--
-- Name: st_asgeojson(integer, geography, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgeojson(integer, geography, integer, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGeoJson($1, $2, $3, $4)$_$;


--
-- Name: st_asgml(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgml(geometry) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGML(2, $1, 15, 0)$_$;


--
-- Name: st_asgml(geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgml(geography) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGML(2, $1, 15, 0)$_$;


--
-- Name: st_asgml(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgml(text) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT ST_AsGML($1::geometry);  $_$;


--
-- Name: st_asgml(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgml(geometry, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGML(2, $1, $2, 0)$_$;


--
-- Name: st_asgml(integer, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgml(integer, geometry) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGML($1, $2, 15, 0)$_$;


--
-- Name: st_asgml(geography, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgml(geography, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGML(2, $1, $2, 0)$_$;


--
-- Name: st_asgml(integer, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgml(integer, geography) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGML($1, $2, 15, 0)$_$;


--
-- Name: st_asgml(integer, geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgml(integer, geometry, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGML($1, $2, $3, 0)$_$;


--
-- Name: st_asgml(geometry, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgml(geometry, integer, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGML(2, $1, $2, $3)$_$;


--
-- Name: st_asgml(integer, geography, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgml(integer, geography, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGML($1, $2, $3, 0)$_$;


--
-- Name: st_asgml(geography, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgml(geography, integer, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGML(2, $1, $2, $3)$_$;


--
-- Name: st_asgml(integer, geometry, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgml(integer, geometry, integer, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGML($1, $2, $3, $4)$_$;


--
-- Name: st_asgml(integer, geography, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgml(integer, geography, integer, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGML($1, $2, $3, $4)$_$;


--
-- Name: st_ashexewkb(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_ashexewkb(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asHEXEWKB';


--
-- Name: st_ashexewkb(geometry, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_ashexewkb(geometry, text) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asHEXEWKB';


--
-- Name: st_askml(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_askml(geometry) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsKML(2, ST_Transform($1,4326), 15)$_$;


--
-- Name: st_askml(geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_askml(geography) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsKML(2, $1, 15)$_$;


--
-- Name: st_askml(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_askml(text) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT ST_AsKML($1::geometry);  $_$;


--
-- Name: st_askml(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_askml(geometry, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsKML(2, ST_Transform($1,4326), $2)$_$;


--
-- Name: st_askml(integer, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_askml(integer, geometry) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsKML($1, ST_Transform($2,4326), 15)$_$;


--
-- Name: st_askml(geography, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_askml(geography, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsKML(2, $1, $2)$_$;


--
-- Name: st_askml(integer, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_askml(integer, geography) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsKML($1, $2, 15)$_$;


--
-- Name: st_askml(integer, geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_askml(integer, geometry, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsKML($1, ST_Transform($2,4326), $3)$_$;


--
-- Name: st_askml(integer, geography, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_askml(integer, geography, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsKML($1, $2, $3)$_$;


--
-- Name: st_assvg(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_assvg(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'assvg_geometry';


--
-- Name: st_assvg(geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_assvg(geography) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_as_svg';


--
-- Name: st_assvg(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_assvg(text) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT ST_AsSVG($1::geometry);  $_$;


--
-- Name: st_assvg(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_assvg(geometry, integer) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'assvg_geometry';


--
-- Name: st_assvg(geography, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_assvg(geography, integer) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_as_svg';


--
-- Name: st_assvg(geometry, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_assvg(geometry, integer, integer) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'assvg_geometry';


--
-- Name: st_assvg(geography, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_assvg(geography, integer, integer) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_as_svg';


--
-- Name: st_astext(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_astext(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asText';


--
-- Name: st_astext(geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_astext(geography) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_as_text';


--
-- Name: st_astext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_astext(text) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT ST_AsText($1::geometry);  $_$;


--
-- Name: st_azimuth(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_azimuth(geometry, geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_azimuth';


--
-- Name: st_bdmpolyfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_bdmpolyfromtext(text, integer) RETURNS geometry
    LANGUAGE plpgsql IMMUTABLE STRICT
    AS $_$
DECLARE
	geomtext alias for $1;
	srid alias for $2;
	mline geometry;
	geom geometry;
BEGIN
	mline := ST_MultiLineStringFromText(geomtext, srid);

	IF mline IS NULL
	THEN
		RAISE EXCEPTION 'Input is not a MultiLinestring';
	END IF;

	geom := multi(ST_BuildArea(mline));

	RETURN geom;
END;
$_$;


--
-- Name: st_bdpolyfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_bdpolyfromtext(text, integer) RETURNS geometry
    LANGUAGE plpgsql IMMUTABLE STRICT
    AS $_$
DECLARE
	geomtext alias for $1;
	srid alias for $2;
	mline geometry;
	geom geometry;
BEGIN
	mline := ST_MultiLineStringFromText(geomtext, srid);

	IF mline IS NULL
	THEN
		RAISE EXCEPTION 'Input is not a MultiLinestring';
	END IF;

	geom := ST_BuildArea(mline);

	IF GeometryType(geom) != 'POLYGON'
	THEN
		RAISE EXCEPTION 'Input returns more then a single polygon, try using BdMPolyFromText instead';
	END IF;

	RETURN geom;
END;
$_$;


--
-- Name: st_boundary(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_boundary(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'boundary';


--
-- Name: st_box(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_box(geometry) RETURNS box
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_to_BOX';


--
-- Name: st_box(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_box(box3d) RETURNS box
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_to_BOX';


--
-- Name: st_box2d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_box2d(geometry) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_to_BOX2DFLOAT4';


--
-- Name: st_box2d(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_box2d(box3d) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_to_BOX2DFLOAT4';


--
-- Name: st_box2d(box3d_extent); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_box2d(box3d_extent) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_to_BOX2DFLOAT4';


--
-- Name: st_box2d_in(cstring); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_box2d_in(cstring) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX2DFLOAT4_in';


--
-- Name: st_box2d_out(box2d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_box2d_out(box2d) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX2DFLOAT4_out';


--
-- Name: st_box3d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_box3d(geometry) RETURNS box3d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_to_BOX3D';


--
-- Name: st_box3d(box2d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_box3d(box2d) RETURNS box3d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX2DFLOAT4_to_BOX3D';


--
-- Name: st_box3d_extent(box3d_extent); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_box3d_extent(box3d_extent) RETURNS box3d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_extent_to_BOX3D';


--
-- Name: st_box3d_in(cstring); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_box3d_in(cstring) RETURNS box3d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_in';


--
-- Name: st_box3d_out(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_box3d_out(box3d) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_out';


--
-- Name: st_buffer(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_buffer(geometry, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'buffer';


--
-- Name: st_buffer(geography, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_buffer(geography, double precision) RETURNS geography
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT geography(ST_Transform(ST_Buffer(ST_Transform(geometry($1), _ST_BestSRID($1)), $2), 4326))$_$;


--
-- Name: st_buffer(text, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_buffer(text, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT ST_Buffer($1::geometry, $2);  $_$;


--
-- Name: st_buffer(geometry, double precision, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_buffer(geometry, double precision, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT _ST_Buffer($1, $2,
		CAST('quad_segs='||CAST($3 AS text) as cstring))
	   $_$;


--
-- Name: st_buffer(geometry, double precision, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_buffer(geometry, double precision, text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT _ST_Buffer($1, $2,
		CAST( regexp_replace($3, '^[0123456789]+$',
			'quad_segs='||$3) AS cstring)
		)
	   $_$;


--
-- Name: st_buildarea(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_buildarea(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_buildarea';


--
-- Name: st_bytea(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_bytea(geometry) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_to_bytea';


--
-- Name: st_centroid(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_centroid(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'centroid';


--
-- Name: st_chip_in(cstring); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_chip_in(cstring) RETURNS chip
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_in';


--
-- Name: st_chip_out(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_chip_out(chip) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_out';


--
-- Name: st_closestpoint(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_closestpoint(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_closestpoint';


--
-- Name: st_collect(geometry[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_collect(geometry[]) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_collect_garray';


--
-- Name: st_collect(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_collect(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'LWGEOM_collect';


--
-- Name: st_collectionextract(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_collectionextract(geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'ST_CollectionExtract';


--
-- Name: st_combine_bbox(box2d, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_combine_bbox(box2d, geometry) RETURNS box2d
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'BOX2DFLOAT4_combine';


--
-- Name: st_combine_bbox(box3d_extent, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_combine_bbox(box3d_extent, geometry) RETURNS box3d_extent
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'BOX3D_combine';


--
-- Name: st_combine_bbox(box3d, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_combine_bbox(box3d, geometry) RETURNS box3d
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'BOX3D_combine';


--
-- Name: st_compression(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_compression(chip) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_getCompression';


--
-- Name: st_contains(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_contains(geometry, geometry) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && $2 AND _ST_Contains($1,$2)$_$;


--
-- Name: st_containsproperly(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_containsproperly(geometry, geometry) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && $2 AND _ST_ContainsProperly($1,$2)$_$;


--
-- Name: st_convexhull(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_convexhull(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'convexhull';


--
-- Name: st_coorddim(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_coorddim(geometry) RETURNS smallint
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_ndims';


--
-- Name: st_coveredby(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_coveredby(geometry, geometry) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && $2 AND _ST_CoveredBy($1,$2)$_$;


--
-- Name: st_coveredby(geography, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_coveredby(geography, geography) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && $2 AND _ST_Covers($2, $1)$_$;


--
-- Name: st_coveredby(text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_coveredby(text, text) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$ SELECT ST_CoveredBy($1::geometry, $2::geometry);  $_$;


--
-- Name: st_covers(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_covers(geometry, geometry) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && $2 AND _ST_Covers($1,$2)$_$;


--
-- Name: st_covers(geography, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_covers(geography, geography) RETURNS boolean
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT $1 && $2 AND _ST_Covers($1, $2)$_$;


--
-- Name: st_covers(text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_covers(text, text) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$ SELECT ST_Covers($1::geometry, $2::geometry);  $_$;


--
-- Name: st_crosses(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_crosses(geometry, geometry) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && $2 AND _ST_Crosses($1,$2)$_$;


--
-- Name: st_curvetoline(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_curvetoline(geometry) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT ST_CurveToLine($1, 32)$_$;


--
-- Name: st_curvetoline(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_curvetoline(geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_curve_segmentize';


--
-- Name: st_datatype(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_datatype(chip) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_getDatatype';


--
-- Name: st_dfullywithin(geometry, geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_dfullywithin(geometry, geometry, double precision) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && ST_Expand($2,$3) AND $2 && ST_Expand($1,$3) AND _ST_DFullyWithin(ST_ConvexHull($1), ST_ConvexHull($2), $3)$_$;


--
-- Name: st_difference(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_difference(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'difference';


--
-- Name: st_dimension(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_dimension(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_dimension';


--
-- Name: st_disjoint(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_disjoint(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'disjoint';


--
-- Name: st_distance(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_distance(geometry, geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_mindistance2d';


--
-- Name: st_distance(geography, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_distance(geography, geography) RETURNS double precision
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_Distance($1, $2, 0.0, true)$_$;


--
-- Name: st_distance(text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_distance(text, text) RETURNS double precision
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT ST_Distance($1::geometry, $2::geometry);  $_$;


--
-- Name: st_distance(geography, geography, boolean); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_distance(geography, geography, boolean) RETURNS double precision
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_Distance($1, $2, 0.0, $3)$_$;


--
-- Name: st_distance_sphere(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_distance_sphere(geometry, geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_distance_sphere';


--
-- Name: st_distance_spheroid(geometry, geometry, spheroid); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_distance_spheroid(geometry, geometry, spheroid) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_distance_ellipsoid';


--
-- Name: st_dump(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_dump(geometry) RETURNS SETOF geometry_dump
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_dump';


--
-- Name: st_dumppoints(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_dumppoints(geometry) RETURNS SETOF geometry_dump
    LANGUAGE sql
    AS $_$
  SELECT * FROM _ST_DumpPoints($1, NULL);
$_$;


--
-- Name: st_dumprings(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_dumprings(geometry) RETURNS SETOF geometry_dump
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_dump_rings';


--
-- Name: st_dwithin(geometry, geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_dwithin(geometry, geometry, double precision) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && ST_Expand($2,$3) AND $2 && ST_Expand($1,$3) AND _ST_DWithin($1, $2, $3)$_$;


--
-- Name: st_dwithin(geography, geography, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_dwithin(geography, geography, double precision) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && _ST_Expand($2,$3) AND $2 && _ST_Expand($1,$3) AND _ST_DWithin($1, $2, $3, true)$_$;


--
-- Name: st_dwithin(text, text, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_dwithin(text, text, double precision) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$ SELECT ST_DWithin($1::geometry, $2::geometry, $3);  $_$;


--
-- Name: st_dwithin(geography, geography, double precision, boolean); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_dwithin(geography, geography, double precision, boolean) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && _ST_Expand($2,$3) AND $2 && _ST_Expand($1,$3) AND _ST_DWithin($1, $2, $3, $4)$_$;


--
-- Name: st_endpoint(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_endpoint(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_endpoint_linestring';


--
-- Name: st_envelope(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_envelope(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_envelope';


--
-- Name: st_equals(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_equals(geometry, geometry) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && $2 AND _ST_Equals($1,$2)$_$;


--
-- Name: st_estimated_extent(text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_estimated_extent(text, text) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT SECURITY DEFINER
    AS '$libdir/postgis-1.5', 'LWGEOM_estimated_extent';


--
-- Name: st_estimated_extent(text, text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_estimated_extent(text, text, text) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT SECURITY DEFINER
    AS '$libdir/postgis-1.5', 'LWGEOM_estimated_extent';


--
-- Name: st_expand(box3d, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_expand(box3d, double precision) RETURNS box3d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_expand';


--
-- Name: st_expand(box2d, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_expand(box2d, double precision) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX2DFLOAT4_expand';


--
-- Name: st_expand(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_expand(geometry, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_expand';


--
-- Name: st_exteriorring(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_exteriorring(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_exteriorring_polygon';


--
-- Name: st_factor(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_factor(chip) RETURNS real
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_getFactor';


--
-- Name: st_find_extent(text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_find_extent(text, text) RETURNS box2d
    LANGUAGE plpgsql IMMUTABLE STRICT
    AS $_$
DECLARE
	tablename alias for $1;
	columnname alias for $2;
	myrec RECORD;

BEGIN
	FOR myrec IN EXECUTE 'SELECT extent("' || columnname || '") FROM "' || tablename || '"' LOOP
		return myrec.extent;
	END LOOP;
END;
$_$;


--
-- Name: st_find_extent(text, text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_find_extent(text, text, text) RETURNS box2d
    LANGUAGE plpgsql IMMUTABLE STRICT
    AS $_$
DECLARE
	schemaname alias for $1;
	tablename alias for $2;
	columnname alias for $3;
	myrec RECORD;

BEGIN
	FOR myrec IN EXECUTE 'SELECT extent("' || columnname || '") FROM "' || schemaname || '"."' || tablename || '"' LOOP
		return myrec.extent;
	END LOOP;
END;
$_$;


--
-- Name: st_force_2d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_force_2d(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_force_2d';


--
-- Name: st_force_3d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_force_3d(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_force_3dz';


--
-- Name: st_force_3dm(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_force_3dm(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_force_3dm';


--
-- Name: st_force_3dz(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_force_3dz(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_force_3dz';


--
-- Name: st_force_4d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_force_4d(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_force_4d';


--
-- Name: st_force_collection(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_force_collection(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_force_collection';


--
-- Name: st_forcerhr(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_forcerhr(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_forceRHR_poly';


--
-- Name: st_geogfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geogfromtext(text) RETURNS geography
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_from_text';


--
-- Name: st_geogfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geogfromwkb(bytea) RETURNS geography
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_from_binary';


--
-- Name: st_geographyfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geographyfromtext(text) RETURNS geography
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_from_text';


--
-- Name: st_geohash(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geohash(geometry) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT ST_GeoHash($1, 0)$_$;


--
-- Name: st_geohash(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geohash(geometry, integer) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'ST_GeoHash';


--
-- Name: st_geomcollfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geomcollfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE
	WHEN geometrytype(ST_GeomFromText($1)) = 'GEOMETRYCOLLECTION'
	THEN ST_GeomFromText($1)
	ELSE NULL END
	$_$;


--
-- Name: st_geomcollfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geomcollfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE
	WHEN geometrytype(ST_GeomFromText($1, $2)) = 'GEOMETRYCOLLECTION'
	THEN ST_GeomFromText($1,$2)
	ELSE NULL END
	$_$;


--
-- Name: st_geomcollfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geomcollfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE
	WHEN geometrytype(ST_GeomFromWKB($1)) = 'GEOMETRYCOLLECTION'
	THEN ST_GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: st_geomcollfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geomcollfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE
	WHEN geometrytype(GeomFromWKB($1, $2)) = 'GEOMETRYCOLLECTION'
	THEN GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: st_geometry(box2d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry(box2d) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX2DFLOAT4_to_LWGEOM';


--
-- Name: st_geometry(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry(box3d) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_to_LWGEOM';


--
-- Name: st_geometry(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry(text) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'parse_WKT_lwgeom';


--
-- Name: st_geometry(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry(chip) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_to_LWGEOM';


--
-- Name: st_geometry(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry(bytea) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_from_bytea';


--
-- Name: st_geometry(box3d_extent); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry(box3d_extent) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_to_LWGEOM';


--
-- Name: st_geometry_above(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_above(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_above';


--
-- Name: st_geometry_analyze(internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_analyze(internal) RETURNS boolean
    LANGUAGE c STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_analyze';


--
-- Name: st_geometry_below(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_below(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_below';


--
-- Name: st_geometry_cmp(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_cmp(geometry, geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'lwgeom_cmp';


--
-- Name: st_geometry_contain(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_contain(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_contain';


--
-- Name: st_geometry_contained(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_contained(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_contained';


--
-- Name: st_geometry_eq(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_eq(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'lwgeom_eq';


--
-- Name: st_geometry_ge(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_ge(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'lwgeom_ge';


--
-- Name: st_geometry_gt(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_gt(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'lwgeom_gt';


--
-- Name: st_geometry_in(cstring); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_in(cstring) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_in';


--
-- Name: st_geometry_le(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_le(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'lwgeom_le';


--
-- Name: st_geometry_left(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_left(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_left';


--
-- Name: st_geometry_lt(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_lt(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'lwgeom_lt';


--
-- Name: st_geometry_out(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_out(geometry) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_out';


--
-- Name: st_geometry_overabove(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_overabove(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_overabove';


--
-- Name: st_geometry_overbelow(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_overbelow(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_overbelow';


--
-- Name: st_geometry_overlap(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_overlap(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_overlap';


--
-- Name: st_geometry_overleft(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_overleft(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_overleft';


--
-- Name: st_geometry_overright(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_overright(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_overright';


--
-- Name: st_geometry_recv(internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_recv(internal) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_recv';


--
-- Name: st_geometry_right(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_right(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_right';


--
-- Name: st_geometry_same(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_same(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_samebox';


--
-- Name: st_geometry_send(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_send(geometry) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_send';


--
-- Name: st_geometryfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometryfromtext(text) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_from_text';


--
-- Name: st_geometryfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometryfromtext(text, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_from_text';


--
-- Name: st_geometryn(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometryn(geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_geometryn_collection';


--
-- Name: st_geometrytype(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometrytype(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geometry_geometrytype';


--
-- Name: st_geomfromewkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geomfromewkb(bytea) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOMFromWKB';


--
-- Name: st_geomfromewkt(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geomfromewkt(text) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'parse_WKT_lwgeom';


--
-- Name: st_geomfromgml(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geomfromgml(text) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geom_from_gml';


--
-- Name: st_geomfromkml(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geomfromkml(text) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geom_from_kml';


--
-- Name: st_geomfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geomfromtext(text) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_from_text';


--
-- Name: st_geomfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geomfromtext(text, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_from_text';


--
-- Name: st_geomfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geomfromwkb(bytea) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_from_WKB';


--
-- Name: st_geomfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geomfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT ST_SetSRID(ST_GeomFromWKB($1), $2)$_$;


--
-- Name: st_gmltosql(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_gmltosql(text) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geom_from_gml';


--
-- Name: st_hasarc(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_hasarc(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_has_arc';


--
-- Name: st_hausdorffdistance(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_hausdorffdistance(geometry, geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'hausdorffdistance';


--
-- Name: st_hausdorffdistance(geometry, geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_hausdorffdistance(geometry, geometry, double precision) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'hausdorffdistancedensify';


--
-- Name: st_height(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_height(chip) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_getHeight';


--
-- Name: st_interiorringn(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_interiorringn(geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_interiorringn_polygon';


--
-- Name: st_intersection(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_intersection(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'intersection';


--
-- Name: st_intersection(geography, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_intersection(geography, geography) RETURNS geography
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT geography(ST_Transform(ST_Intersection(ST_Transform(geometry($1), _ST_BestSRID($1, $2)), ST_Transform(geometry($2), _ST_BestSRID($1, $2))), 4326))$_$;


--
-- Name: st_intersection(text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_intersection(text, text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT ST_Intersection($1::geometry, $2::geometry);  $_$;


--
-- Name: st_intersects(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_intersects(geometry, geometry) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && $2 AND _ST_Intersects($1,$2)$_$;


--
-- Name: st_intersects(geography, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_intersects(geography, geography) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && $2 AND _ST_Distance($1, $2, 0.0, false) < 0.00001$_$;


--
-- Name: st_intersects(text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_intersects(text, text) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$ SELECT ST_Intersects($1::geometry, $2::geometry);  $_$;


--
-- Name: st_isclosed(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_isclosed(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_isclosed_linestring';


--
-- Name: st_isempty(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_isempty(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_isempty';


--
-- Name: st_isring(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_isring(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'isring';


--
-- Name: st_issimple(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_issimple(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'issimple';


--
-- Name: st_isvalid(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_isvalid(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'isvalid';


--
-- Name: st_isvalidreason(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_isvalidreason(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'isvalidreason';


--
-- Name: st_length(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_length(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_length2d_linestring';


--
-- Name: st_length(geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_length(geography) RETURNS double precision
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT ST_Length($1, true)$_$;


--
-- Name: st_length(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_length(text) RETURNS double precision
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT ST_Length($1::geometry);  $_$;


--
-- Name: st_length(geography, boolean); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_length(geography, boolean) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'geography_length';


--
-- Name: st_length2d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_length2d(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_length2d_linestring';


--
-- Name: st_length2d_spheroid(geometry, spheroid); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_length2d_spheroid(geometry, spheroid) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_length2d_ellipsoid';


--
-- Name: st_length3d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_length3d(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_length_linestring';


--
-- Name: st_length3d_spheroid(geometry, spheroid); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_length3d_spheroid(geometry, spheroid) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_length_ellipsoid_linestring';


--
-- Name: st_length_spheroid(geometry, spheroid); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_length_spheroid(geometry, spheroid) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_length_ellipsoid_linestring';


--
-- Name: st_line_interpolate_point(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_line_interpolate_point(geometry, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_line_interpolate_point';


--
-- Name: st_line_locate_point(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_line_locate_point(geometry, geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_line_locate_point';


--
-- Name: st_line_substring(geometry, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_line_substring(geometry, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_line_substring';


--
-- Name: st_linecrossingdirection(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_linecrossingdirection(geometry, geometry) RETURNS integer
    LANGUAGE sql IMMUTABLE
    AS $_$ SELECT CASE WHEN NOT $1 && $2 THEN 0 ELSE _ST_LineCrossingDirection($1,$2) END $_$;


--
-- Name: st_linefrommultipoint(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_linefrommultipoint(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_line_from_mpoint';


--
-- Name: st_linefromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_linefromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromText($1)) = 'LINESTRING'
	THEN ST_GeomFromText($1)
	ELSE NULL END
	$_$;


--
-- Name: st_linefromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_linefromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromText($1, $2)) = 'LINESTRING'
	THEN GeomFromText($1,$2)
	ELSE NULL END
	$_$;


--
-- Name: st_linefromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_linefromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1)) = 'LINESTRING'
	THEN ST_GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: st_linefromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_linefromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1, $2)) = 'LINESTRING'
	THEN ST_GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: st_linemerge(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_linemerge(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'linemerge';


--
-- Name: st_linestringfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_linestringfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1)) = 'LINESTRING'
	THEN GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: st_linestringfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_linestringfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1, $2)) = 'LINESTRING'
	THEN ST_GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: st_linetocurve(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_linetocurve(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_line_desegmentize';


--
-- Name: st_locate_along_measure(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_locate_along_measure(geometry, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT locate_between_measures($1, $2, $2) $_$;


--
-- Name: st_locate_between_measures(geometry, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_locate_between_measures(geometry, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_locate_between_m';


--
-- Name: st_locatebetweenelevations(geometry, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_locatebetweenelevations(geometry, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'ST_LocateBetweenElevations';


--
-- Name: st_longestline(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_longestline(geometry, geometry) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_LongestLine(ST_ConvexHull($1), ST_ConvexHull($2))$_$;


--
-- Name: st_m(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_m(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_m_point';


--
-- Name: st_makebox2d(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_makebox2d(geometry, geometry) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX2DFLOAT4_construct';


--
-- Name: st_makebox3d(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_makebox3d(geometry, geometry) RETURNS box3d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_construct';


--
-- Name: st_makeenvelope(double precision, double precision, double precision, double precision, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_makeenvelope(double precision, double precision, double precision, double precision, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'ST_MakeEnvelope';


--
-- Name: st_makeline(geometry[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_makeline(geometry[]) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makeline_garray';


--
-- Name: st_makeline(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_makeline(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makeline';


--
-- Name: st_makeline_garray(geometry[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_makeline_garray(geometry[]) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makeline_garray';


--
-- Name: st_makepoint(double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_makepoint(double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makepoint';


--
-- Name: st_makepoint(double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_makepoint(double precision, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makepoint';


--
-- Name: st_makepoint(double precision, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_makepoint(double precision, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makepoint';


--
-- Name: st_makepointm(double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_makepointm(double precision, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makepoint3dm';


--
-- Name: st_makepolygon(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_makepolygon(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makepoly';


--
-- Name: st_makepolygon(geometry, geometry[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_makepolygon(geometry, geometry[]) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makepoly';


--
-- Name: st_maxdistance(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_maxdistance(geometry, geometry) RETURNS double precision
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_MaxDistance(ST_ConvexHull($1), ST_ConvexHull($2))$_$;


--
-- Name: st_mem_size(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_mem_size(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_mem_size';


--
-- Name: st_minimumboundingcircle(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_minimumboundingcircle(geometry) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT ST_MinimumBoundingCircle($1, 48)$_$;


--
-- Name: st_minimumboundingcircle(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_minimumboundingcircle(inputgeom geometry, segs_per_quarter integer) RETURNS geometry
    LANGUAGE plpgsql IMMUTABLE STRICT
    AS $$
	DECLARE
	hull GEOMETRY;
	ring GEOMETRY;
	center GEOMETRY;
	radius DOUBLE PRECISION;
	dist DOUBLE PRECISION;
	d DOUBLE PRECISION;
	idx1 integer;
	idx2 integer;
	l1 GEOMETRY;
	l2 GEOMETRY;
	p1 GEOMETRY;
	p2 GEOMETRY;
	a1 DOUBLE PRECISION;
	a2 DOUBLE PRECISION;


	BEGIN

	-- First compute the ConvexHull of the geometry
	hull = ST_ConvexHull(inputgeom);
	--A point really has no MBC
	IF ST_GeometryType(hull) = 'ST_Point' THEN
		RETURN hull;
	END IF;
	-- convert the hull perimeter to a linestring so we can manipulate individual points
	--If its already a linestring force it to a closed linestring
	ring = CASE WHEN ST_GeometryType(hull) = 'ST_LineString' THEN ST_AddPoint(hull, ST_StartPoint(hull)) ELSE ST_ExteriorRing(hull) END;

	dist = 0;
	-- Brute Force - check every pair
	FOR i in 1 .. (ST_NumPoints(ring)-2)
		LOOP
			FOR j in i .. (ST_NumPoints(ring)-1)
				LOOP
				d = ST_Distance(ST_PointN(ring,i),ST_PointN(ring,j));
				-- Check the distance and update if larger
				IF (d > dist) THEN
					dist = d;
					idx1 = i;
					idx2 = j;
				END IF;
			END LOOP;
		END LOOP;

	-- We now have the diameter of the convex hull.  The following line returns it if desired.
	-- RETURN MakeLine(PointN(ring,idx1),PointN(ring,idx2));

	-- Now for the Minimum Bounding Circle.  Since we know the two points furthest from each
	-- other, the MBC must go through those two points. Start with those points as a diameter of a circle.

	-- The radius is half the distance between them and the center is midway between them
	radius = ST_Distance(ST_PointN(ring,idx1),ST_PointN(ring,idx2)) / 2.0;
	center = ST_Line_interpolate_point(ST_MakeLine(ST_PointN(ring,idx1),ST_PointN(ring,idx2)),0.5);

	-- Loop through each vertex and check if the distance from the center to the point
	-- is greater than the current radius.
	FOR k in 1 .. (ST_NumPoints(ring)-1)
		LOOP
		IF(k <> idx1 and k <> idx2) THEN
			dist = ST_Distance(center,ST_PointN(ring,k));
			IF (dist > radius) THEN
				-- We have to expand the circle.  The new circle must pass trhough
				-- three points - the two original diameters and this point.

				-- Draw a line from the first diameter to this point
				l1 = ST_Makeline(ST_PointN(ring,idx1),ST_PointN(ring,k));
				-- Compute the midpoint
				p1 = ST_line_interpolate_point(l1,0.5);
				-- Rotate the line 90 degrees around the midpoint (perpendicular bisector)
				l1 = ST_Translate(ST_Rotate(ST_Translate(l1,-X(p1),-Y(p1)),pi()/2),X(p1),Y(p1));
				--  Compute the azimuth of the bisector
				a1 = ST_Azimuth(ST_PointN(l1,1),ST_PointN(l1,2));
				--  Extend the line in each direction the new computed distance to insure they will intersect
				l1 = ST_AddPoint(l1,ST_Makepoint(X(ST_PointN(l1,2))+sin(a1)*dist,Y(ST_PointN(l1,2))+cos(a1)*dist),-1);
				l1 = ST_AddPoint(l1,ST_Makepoint(X(ST_PointN(l1,1))-sin(a1)*dist,Y(ST_PointN(l1,1))-cos(a1)*dist),0);

				-- Repeat for the line from the point to the other diameter point
				l2 = ST_Makeline(ST_PointN(ring,idx2),ST_PointN(ring,k));
				p2 = ST_Line_interpolate_point(l2,0.5);
				l2 = ST_Translate(ST_Rotate(ST_Translate(l2,-X(p2),-Y(p2)),pi()/2),X(p2),Y(p2));
				a2 = ST_Azimuth(ST_PointN(l2,1),ST_PointN(l2,2));
				l2 = ST_AddPoint(l2,ST_Makepoint(X(ST_PointN(l2,2))+sin(a2)*dist,Y(ST_PointN(l2,2))+cos(a2)*dist),-1);
				l2 = ST_AddPoint(l2,ST_Makepoint(X(ST_PointN(l2,1))-sin(a2)*dist,Y(ST_PointN(l2,1))-cos(a2)*dist),0);

				-- The new center is the intersection of the two bisectors
				center = ST_Intersection(l1,l2);
				-- The new radius is the distance to any of the three points
				radius = ST_Distance(center,ST_PointN(ring,idx1));
			END IF;
		END IF;
		END LOOP;
	--DONE!!  Return the MBC via the buffer command
	RETURN ST_Buffer(center,radius,segs_per_quarter);

	END;
$$;


--
-- Name: st_mlinefromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_mlinefromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromText($1)) = 'MULTILINESTRING'
	THEN ST_GeomFromText($1)
	ELSE NULL END
	$_$;


--
-- Name: st_mlinefromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_mlinefromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE
	WHEN geometrytype(GeomFromText($1, $2)) = 'MULTILINESTRING'
	THEN GeomFromText($1,$2)
	ELSE NULL END
	$_$;


--
-- Name: st_mlinefromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_mlinefromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1)) = 'MULTILINESTRING'
	THEN ST_GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: st_mlinefromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_mlinefromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1, $2)) = 'MULTILINESTRING'
	THEN ST_GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: st_mpointfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_mpointfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromText($1)) = 'MULTIPOINT'
	THEN ST_GeomFromText($1)
	ELSE NULL END
	$_$;


--
-- Name: st_mpointfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_mpointfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromText($1, $2)) = 'MULTIPOINT'
	THEN GeomFromText($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: st_mpointfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_mpointfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1)) = 'MULTIPOINT'
	THEN ST_GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: st_mpointfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_mpointfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1, $2)) = 'MULTIPOINT'
	THEN GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: st_mpolyfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_mpolyfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromText($1)) = 'MULTIPOLYGON'
	THEN ST_GeomFromText($1)
	ELSE NULL END
	$_$;


--
-- Name: st_mpolyfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_mpolyfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromText($1, $2)) = 'MULTIPOLYGON'
	THEN ST_GeomFromText($1,$2)
	ELSE NULL END
	$_$;


--
-- Name: st_mpolyfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_mpolyfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1)) = 'MULTIPOLYGON'
	THEN ST_GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: st_mpolyfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_mpolyfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1, $2)) = 'MULTIPOLYGON'
	THEN ST_GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: st_multi(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_multi(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_force_multi';


--
-- Name: st_multilinefromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_multilinefromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1)) = 'MULTILINESTRING'
	THEN ST_GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: st_multilinestringfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_multilinestringfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT ST_MLineFromText($1)$_$;


--
-- Name: st_multilinestringfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_multilinestringfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT MLineFromText($1, $2)$_$;


--
-- Name: st_multipointfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_multipointfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT MPointFromText($1)$_$;


--
-- Name: st_multipointfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_multipointfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1)) = 'MULTIPOINT'
	THEN ST_GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: st_multipointfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_multipointfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1,$2)) = 'MULTIPOINT'
	THEN ST_GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: st_multipolyfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_multipolyfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1)) = 'MULTIPOLYGON'
	THEN ST_GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: st_multipolyfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_multipolyfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1, $2)) = 'MULTIPOLYGON'
	THEN ST_GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: st_multipolygonfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_multipolygonfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT MPolyFromText($1)$_$;


--
-- Name: st_multipolygonfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_multipolygonfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT MPolyFromText($1, $2)$_$;


--
-- Name: st_ndims(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_ndims(geometry) RETURNS smallint
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_ndims';


--
-- Name: st_npoints(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_npoints(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_npoints';


--
-- Name: st_nrings(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_nrings(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_nrings';


--
-- Name: st_numgeometries(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_numgeometries(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_numgeometries_collection';


--
-- Name: st_numinteriorring(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_numinteriorring(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_numinteriorrings_polygon';


--
-- Name: st_numinteriorrings(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_numinteriorrings(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_numinteriorrings_polygon';


--
-- Name: st_numpoints(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_numpoints(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_numpoints_linestring';


--
-- Name: st_orderingequals(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_orderingequals(geometry, geometry) RETURNS boolean
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ 
	SELECT $1 ~= $2 AND _ST_OrderingEquals($1, $2)
	$_$;


--
-- Name: st_overlaps(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_overlaps(geometry, geometry) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && $2 AND _ST_Overlaps($1,$2)$_$;


--
-- Name: st_perimeter(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_perimeter(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_perimeter2d_poly';


--
-- Name: st_perimeter2d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_perimeter2d(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_perimeter2d_poly';


--
-- Name: st_perimeter3d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_perimeter3d(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_perimeter_poly';


--
-- Name: st_point(double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_point(double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makepoint';


--
-- Name: st_point_inside_circle(geometry, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_point_inside_circle(geometry, double precision, double precision, double precision) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_inside_circle_point';


--
-- Name: st_pointfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_pointfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromText($1)) = 'POINT'
	THEN ST_GeomFromText($1)
	ELSE NULL END
	$_$;


--
-- Name: st_pointfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_pointfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromText($1, $2)) = 'POINT'
	THEN ST_GeomFromText($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: st_pointfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_pointfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1)) = 'POINT'
	THEN ST_GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: st_pointfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_pointfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1, $2)) = 'POINT'
	THEN ST_GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: st_pointn(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_pointn(geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_pointn_linestring';


--
-- Name: st_pointonsurface(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_pointonsurface(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'pointonsurface';


--
-- Name: st_polyfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_polyfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromText($1)) = 'POLYGON'
	THEN ST_GeomFromText($1)
	ELSE NULL END
	$_$;


--
-- Name: st_polyfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_polyfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromText($1, $2)) = 'POLYGON'
	THEN ST_GeomFromText($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: st_polyfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_polyfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1)) = 'POLYGON'
	THEN ST_GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: st_polyfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_polyfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1, $2)) = 'POLYGON'
	THEN ST_GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: st_polygon(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_polygon(geometry, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ 
	SELECT setSRID(makepolygon($1), $2)
	$_$;


--
-- Name: st_polygonfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_polygonfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT ST_PolyFromText($1)$_$;


--
-- Name: st_polygonfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_polygonfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT PolyFromText($1, $2)$_$;


--
-- Name: st_polygonfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_polygonfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1)) = 'POLYGON'
	THEN GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: st_polygonfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_polygonfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1,$2)) = 'POLYGON'
	THEN ST_GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: st_polygonize(geometry[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_polygonize(geometry[]) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'polygonize_garray';


--
-- Name: st_polygonize_garray(geometry[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_polygonize_garray(geometry[]) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'polygonize_garray';


--
-- Name: st_postgis_gist_joinsel(internal, oid, internal, smallint); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_postgis_gist_joinsel(internal, oid, internal, smallint) RETURNS double precision
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'LWGEOM_gist_joinsel';


--
-- Name: st_postgis_gist_sel(internal, oid, internal, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_postgis_gist_sel(internal, oid, internal, integer) RETURNS double precision
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'LWGEOM_gist_sel';


--
-- Name: st_relate(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_relate(geometry, geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'relate_full';


--
-- Name: st_relate(geometry, geometry, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_relate(geometry, geometry, text) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'relate_pattern';


--
-- Name: st_removepoint(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_removepoint(geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_removepoint';


--
-- Name: st_reverse(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_reverse(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_reverse';


--
-- Name: st_rotate(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_rotate(geometry, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT rotateZ($1, $2)$_$;


--
-- Name: st_rotatex(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_rotatex(geometry, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT affine($1, 1, 0, 0, 0, cos($2), -sin($2), 0, sin($2), cos($2), 0, 0, 0)$_$;


--
-- Name: st_rotatey(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_rotatey(geometry, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT affine($1,  cos($2), 0, sin($2),  0, 1, 0,  -sin($2), 0, cos($2), 0,  0, 0)$_$;


--
-- Name: st_rotatez(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_rotatez(geometry, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT affine($1,  cos($2), -sin($2), 0,  sin($2), cos($2), 0,  0, 0, 1,  0, 0, 0)$_$;


--
-- Name: st_scale(geometry, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_scale(geometry, double precision, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT scale($1, $2, $3, 1)$_$;


--
-- Name: st_scale(geometry, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_scale(geometry, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT affine($1,  $2, 0, 0,  0, $3, 0,  0, 0, $4,  0, 0, 0)$_$;


--
-- Name: st_segmentize(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_segmentize(geometry, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_segmentize2d';


--
-- Name: st_setfactor(chip, real); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_setfactor(chip, real) RETURNS chip
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_setFactor';


--
-- Name: st_setpoint(geometry, integer, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_setpoint(geometry, integer, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_setpoint_linestring';


--
-- Name: st_setsrid(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_setsrid(geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_setSRID';


--
-- Name: st_shift_longitude(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_shift_longitude(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_longitude_shift';


--
-- Name: st_shortestline(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_shortestline(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_shortestline2d';


--
-- Name: st_simplify(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_simplify(geometry, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_simplify2d';


--
-- Name: st_simplifypreservetopology(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_simplifypreservetopology(geometry, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'topologypreservesimplify';


--
-- Name: st_snaptogrid(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_snaptogrid(geometry, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT ST_SnapToGrid($1, 0, 0, $2, $2)$_$;


--
-- Name: st_snaptogrid(geometry, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_snaptogrid(geometry, double precision, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT ST_SnapToGrid($1, 0, 0, $2, $3)$_$;


--
-- Name: st_snaptogrid(geometry, double precision, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_snaptogrid(geometry, double precision, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_snaptogrid';


--
-- Name: st_snaptogrid(geometry, geometry, double precision, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_snaptogrid(geometry, geometry, double precision, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_snaptogrid_pointoff';


--
-- Name: st_spheroid_in(cstring); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_spheroid_in(cstring) RETURNS spheroid
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'ellipsoid_in';


--
-- Name: st_spheroid_out(spheroid); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_spheroid_out(spheroid) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'ellipsoid_out';


--
-- Name: st_srid(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_srid(chip) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_getSRID';


--
-- Name: st_srid(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_srid(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_getSRID';


--
-- Name: st_startpoint(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_startpoint(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_startpoint_linestring';


--
-- Name: st_summary(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_summary(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_summary';


--
-- Name: st_symdifference(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_symdifference(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'symdifference';


--
-- Name: st_symmetricdifference(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_symmetricdifference(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'symdifference';


--
-- Name: st_text(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_text(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_to_text';


--
-- Name: st_touches(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_touches(geometry, geometry) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && $2 AND _ST_Touches($1,$2)$_$;


--
-- Name: st_transform(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_transform(geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'transform';


--
-- Name: st_translate(geometry, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_translate(geometry, double precision, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT translate($1, $2, $3, 0)$_$;


--
-- Name: st_translate(geometry, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_translate(geometry, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT affine($1, 1, 0, 0, 0, 1, 0, 0, 0, 1, $2, $3, $4)$_$;


--
-- Name: st_transscale(geometry, double precision, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_transscale(geometry, double precision, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT affine($1,  $4, 0, 0,  0, $5, 0,
		0, 0, 1,  $2 * $4, $3 * $5, 0)$_$;


--
-- Name: st_union(geometry[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_union(geometry[]) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'pgis_union_geometry_array';


--
-- Name: st_union(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_union(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geomunion';


--
-- Name: st_unite_garray(geometry[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_unite_garray(geometry[]) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'pgis_union_geometry_array';


--
-- Name: st_width(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_width(chip) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_getWidth';


--
-- Name: st_within(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_within(geometry, geometry) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && $2 AND _ST_Within($1,$2)$_$;


--
-- Name: st_wkbtosql(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_wkbtosql(bytea) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_from_WKB';


--
-- Name: st_wkttosql(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_wkttosql(text) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_from_text';


--
-- Name: st_x(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_x(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_x_point';


--
-- Name: st_xmax(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_xmax(box3d) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_xmax';


--
-- Name: st_xmin(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_xmin(box3d) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_xmin';


--
-- Name: st_y(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_y(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_y_point';


--
-- Name: st_ymax(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_ymax(box3d) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_ymax';


--
-- Name: st_ymin(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_ymin(box3d) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_ymin';


--
-- Name: st_z(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_z(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_z_point';


--
-- Name: st_zmax(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_zmax(box3d) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_zmax';


--
-- Name: st_zmflag(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_zmflag(geometry) RETURNS smallint
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_zmflag';


--
-- Name: st_zmin(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_zmin(box3d) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_zmin';


--
-- Name: startpoint(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION startpoint(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_startpoint_linestring';


--
-- Name: summary(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION summary(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_summary';


--
-- Name: symdifference(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION symdifference(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'symdifference';


--
-- Name: symmetricdifference(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION symmetricdifference(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'symdifference';


--
-- Name: text(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION text(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_to_text';


--
-- Name: touches(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION touches(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'touches';


--
-- Name: transform(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION transform(geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'transform';


--
-- Name: translate(geometry, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION translate(geometry, double precision, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT translate($1, $2, $3, 0)$_$;


--
-- Name: translate(geometry, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION translate(geometry, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT affine($1, 1, 0, 0, 0, 1, 0, 0, 0, 1, $2, $3, $4)$_$;


--
-- Name: transscale(geometry, double precision, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION transscale(geometry, double precision, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT affine($1,  $4, 0, 0,  0, $5, 0,
		0, 0, 1,  $2 * $4, $3 * $5, 0)$_$;


--
-- Name: unite_garray(geometry[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION unite_garray(geometry[]) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'pgis_union_geometry_array';


--
-- Name: unlockrows(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION unlockrows(text) RETURNS integer
    LANGUAGE plpgsql STRICT
    AS $_$ 
DECLARE
	ret int;
BEGIN

	IF NOT LongTransactionsEnabled() THEN
		RAISE EXCEPTION 'Long transaction support disabled, use EnableLongTransaction() to enable.';
	END IF;

	EXECUTE 'DELETE FROM authorization_table where authid = ' ||
		quote_literal($1);

	GET DIAGNOSTICS ret = ROW_COUNT;

	RETURN ret;
END;
$_$;


--
-- Name: updategeometrysrid(character varying, character varying, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION updategeometrysrid(character varying, character varying, integer) RETURNS text
    LANGUAGE plpgsql STRICT
    AS $_$
DECLARE
	ret  text;
BEGIN
	SELECT UpdateGeometrySRID('','',$1,$2,$3) into ret;
	RETURN ret;
END;
$_$;


--
-- Name: updategeometrysrid(character varying, character varying, character varying, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION updategeometrysrid(character varying, character varying, character varying, integer) RETURNS text
    LANGUAGE plpgsql STRICT
    AS $_$
DECLARE
	ret  text;
BEGIN
	SELECT UpdateGeometrySRID('',$1,$2,$3,$4) into ret;
	RETURN ret;
END;
$_$;


--
-- Name: updategeometrysrid(character varying, character varying, character varying, character varying, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION updategeometrysrid(character varying, character varying, character varying, character varying, integer) RETURNS text
    LANGUAGE plpgsql STRICT
    AS $_$
DECLARE
	catalog_name alias for $1;
	schema_name alias for $2;
	table_name alias for $3;
	column_name alias for $4;
	new_srid alias for $5;
	myrec RECORD;
	okay boolean;
	cname varchar;
	real_schema name;

BEGIN


	-- Find, check or fix schema_name
	IF ( schema_name != '' ) THEN
		okay = 'f';

		FOR myrec IN SELECT nspname FROM pg_namespace WHERE text(nspname) = schema_name LOOP
			okay := 't';
		END LOOP;

		IF ( okay <> 't' ) THEN
			RAISE EXCEPTION 'Invalid schema name';
		ELSE
			real_schema = schema_name;
		END IF;
	ELSE
		SELECT INTO real_schema current_schema()::text;
	END IF;

	-- Find out if the column is in the geometry_columns table
	okay = 'f';
	FOR myrec IN SELECT * from geometry_columns where f_table_schema = text(real_schema) and f_table_name = table_name and f_geometry_column = column_name LOOP
		okay := 't';
	END LOOP;
	IF (okay <> 't') THEN
		RAISE EXCEPTION 'column not found in geometry_columns table';
		RETURN 'f';
	END IF;

	-- Update ref from geometry_columns table
	EXECUTE 'UPDATE geometry_columns SET SRID = ' || new_srid::text ||
		' where f_table_schema = ' ||
		quote_literal(real_schema) || ' and f_table_name = ' ||
		quote_literal(table_name)  || ' and f_geometry_column = ' ||
		quote_literal(column_name);

	-- Make up constraint name
	cname = 'enforce_srid_'  || column_name;

	-- Drop enforce_srid constraint
	EXECUTE 'ALTER TABLE ' || quote_ident(real_schema) ||
		'.' || quote_ident(table_name) ||
		' DROP constraint ' || quote_ident(cname);

	-- Update geometries SRID
	EXECUTE 'UPDATE ' || quote_ident(real_schema) ||
		'.' || quote_ident(table_name) ||
		' SET ' || quote_ident(column_name) ||
		' = setSRID(' || quote_ident(column_name) ||
		', ' || new_srid::text || ')';

	-- Reset enforce_srid constraint
	EXECUTE 'ALTER TABLE ' || quote_ident(real_schema) ||
		'.' || quote_ident(table_name) ||
		' ADD constraint ' || quote_ident(cname) ||
		' CHECK (srid(' || quote_ident(column_name) ||
		') = ' || new_srid::text || ')';

	RETURN real_schema || '.' || table_name || '.' || column_name ||' SRID changed to ' || new_srid::text;

END;
$_$;


--
-- Name: width(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION width(chip) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_getWidth';


--
-- Name: within(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION within(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'within';


--
-- Name: x(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION x(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_x_point';


--
-- Name: xmax(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION xmax(box3d) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_xmax';


--
-- Name: xmin(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION xmin(box3d) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_xmin';


--
-- Name: y(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION y(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_y_point';


--
-- Name: ymax(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION ymax(box3d) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_ymax';


--
-- Name: ymin(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION ymin(box3d) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_ymin';


--
-- Name: z(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION z(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_z_point';


--
-- Name: zmax(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION zmax(box3d) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_zmax';


--
-- Name: zmflag(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION zmflag(geometry) RETURNS smallint
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_zmflag';


--
-- Name: zmin(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION zmin(box3d) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_zmin';


--
-- Name: accum(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE accum(geometry) (
    SFUNC = pgis_geometry_accum_transfn,
    STYPE = pgis_abs,
    FINALFUNC = pgis_geometry_accum_finalfn
);


--
-- Name: collect(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE collect(geometry) (
    SFUNC = pgis_geometry_accum_transfn,
    STYPE = pgis_abs,
    FINALFUNC = pgis_geometry_collect_finalfn
);


--
-- Name: extent(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE extent(geometry) (
    SFUNC = public.st_combine_bbox,
    STYPE = box3d_extent
);


--
-- Name: extent3d(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE extent3d(geometry) (
    SFUNC = public.combine_bbox,
    STYPE = box3d
);


--
-- Name: makeline(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE makeline(geometry) (
    SFUNC = pgis_geometry_accum_transfn,
    STYPE = pgis_abs,
    FINALFUNC = pgis_geometry_makeline_finalfn
);


--
-- Name: memcollect(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE memcollect(geometry) (
    SFUNC = public.st_collect,
    STYPE = geometry
);


--
-- Name: memgeomunion(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE memgeomunion(geometry) (
    SFUNC = geomunion,
    STYPE = geometry
);


--
-- Name: polygonize(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE polygonize(geometry) (
    SFUNC = pgis_geometry_accum_transfn,
    STYPE = pgis_abs,
    FINALFUNC = pgis_geometry_polygonize_finalfn
);


--
-- Name: st_accum(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE st_accum(geometry) (
    SFUNC = pgis_geometry_accum_transfn,
    STYPE = pgis_abs,
    FINALFUNC = pgis_geometry_accum_finalfn
);


--
-- Name: st_collect(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE st_collect(geometry) (
    SFUNC = pgis_geometry_accum_transfn,
    STYPE = pgis_abs,
    FINALFUNC = pgis_geometry_collect_finalfn
);


--
-- Name: st_extent(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE st_extent(geometry) (
    SFUNC = public.st_combine_bbox,
    STYPE = box3d_extent
);


--
-- Name: st_extent3d(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE st_extent3d(geometry) (
    SFUNC = public.st_combine_bbox,
    STYPE = box3d
);


--
-- Name: st_makeline(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE st_makeline(geometry) (
    SFUNC = pgis_geometry_accum_transfn,
    STYPE = pgis_abs,
    FINALFUNC = pgis_geometry_makeline_finalfn
);


--
-- Name: st_memcollect(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE st_memcollect(geometry) (
    SFUNC = public.st_collect,
    STYPE = geometry
);


--
-- Name: st_memunion(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE st_memunion(geometry) (
    SFUNC = public.st_union,
    STYPE = geometry
);


--
-- Name: st_polygonize(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE st_polygonize(geometry) (
    SFUNC = pgis_geometry_accum_transfn,
    STYPE = pgis_abs,
    FINALFUNC = pgis_geometry_polygonize_finalfn
);


--
-- Name: st_union(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE st_union(geometry) (
    SFUNC = pgis_geometry_accum_transfn,
    STYPE = pgis_abs,
    FINALFUNC = pgis_geometry_union_finalfn
);


--
-- Name: &&; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR && (
    PROCEDURE = geometry_overlap,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = &&,
    RESTRICT = geometry_gist_sel,
    JOIN = geometry_gist_joinsel
);


--
-- Name: &&; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR && (
    PROCEDURE = geography_overlaps,
    LEFTARG = geography,
    RIGHTARG = geography,
    COMMUTATOR = &&,
    RESTRICT = geography_gist_selectivity,
    JOIN = geography_gist_join_selectivity
);


--
-- Name: &<; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR &< (
    PROCEDURE = geometry_overleft,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = &>,
    RESTRICT = positionsel,
    JOIN = positionjoinsel
);


--
-- Name: &<|; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR &<| (
    PROCEDURE = geometry_overbelow,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = |&>,
    RESTRICT = positionsel,
    JOIN = positionjoinsel
);


--
-- Name: &>; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR &> (
    PROCEDURE = geometry_overright,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = &<,
    RESTRICT = positionsel,
    JOIN = positionjoinsel
);


--
-- Name: <; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR < (
    PROCEDURE = geometry_lt,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = >,
    NEGATOR = >=,
    RESTRICT = contsel,
    JOIN = contjoinsel
);


--
-- Name: <; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR < (
    PROCEDURE = geography_lt,
    LEFTARG = geography,
    RIGHTARG = geography,
    COMMUTATOR = >,
    NEGATOR = >=,
    RESTRICT = contsel,
    JOIN = contjoinsel
);


--
-- Name: <<; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR << (
    PROCEDURE = geometry_left,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = >>,
    RESTRICT = positionsel,
    JOIN = positionjoinsel
);


--
-- Name: <<|; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR <<| (
    PROCEDURE = geometry_below,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = |>>,
    RESTRICT = positionsel,
    JOIN = positionjoinsel
);


--
-- Name: <=; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR <= (
    PROCEDURE = geometry_le,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = >=,
    NEGATOR = >,
    RESTRICT = contsel,
    JOIN = contjoinsel
);


--
-- Name: <=; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR <= (
    PROCEDURE = geography_le,
    LEFTARG = geography,
    RIGHTARG = geography,
    COMMUTATOR = >=,
    NEGATOR = >,
    RESTRICT = contsel,
    JOIN = contjoinsel
);


--
-- Name: =; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR = (
    PROCEDURE = geometry_eq,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = =,
    RESTRICT = contsel,
    JOIN = contjoinsel
);


--
-- Name: =; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR = (
    PROCEDURE = geography_eq,
    LEFTARG = geography,
    RIGHTARG = geography,
    COMMUTATOR = =,
    RESTRICT = contsel,
    JOIN = contjoinsel
);


--
-- Name: >; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR > (
    PROCEDURE = geometry_gt,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = <,
    NEGATOR = <=,
    RESTRICT = contsel,
    JOIN = contjoinsel
);


--
-- Name: >; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR > (
    PROCEDURE = geography_gt,
    LEFTARG = geography,
    RIGHTARG = geography,
    COMMUTATOR = <,
    NEGATOR = <=,
    RESTRICT = contsel,
    JOIN = contjoinsel
);


--
-- Name: >=; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR >= (
    PROCEDURE = geometry_ge,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = <=,
    NEGATOR = <,
    RESTRICT = contsel,
    JOIN = contjoinsel
);


--
-- Name: >=; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR >= (
    PROCEDURE = geography_ge,
    LEFTARG = geography,
    RIGHTARG = geography,
    COMMUTATOR = <=,
    NEGATOR = <,
    RESTRICT = contsel,
    JOIN = contjoinsel
);


--
-- Name: >>; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR >> (
    PROCEDURE = geometry_right,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = <<,
    RESTRICT = positionsel,
    JOIN = positionjoinsel
);


--
-- Name: @; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR @ (
    PROCEDURE = geometry_contained,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = ~,
    RESTRICT = contsel,
    JOIN = contjoinsel
);


--
-- Name: |&>; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR |&> (
    PROCEDURE = geometry_overabove,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = &<|,
    RESTRICT = positionsel,
    JOIN = positionjoinsel
);


--
-- Name: |>>; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR |>> (
    PROCEDURE = geometry_above,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = <<|,
    RESTRICT = positionsel,
    JOIN = positionjoinsel
);


--
-- Name: ~; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR ~ (
    PROCEDURE = geometry_contain,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = @,
    RESTRICT = contsel,
    JOIN = contjoinsel
);


--
-- Name: ~=; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR ~= (
    PROCEDURE = geometry_samebox,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = ~=,
    RESTRICT = eqsel,
    JOIN = eqjoinsel
);


--
-- Name: btree_geography_ops; Type: OPERATOR CLASS; Schema: public; Owner: -
--

CREATE OPERATOR CLASS btree_geography_ops
    DEFAULT FOR TYPE geography USING btree AS
    OPERATOR 1 <(geography,geography) ,
    OPERATOR 2 <=(geography,geography) ,
    OPERATOR 3 =(geography,geography) ,
    OPERATOR 4 >=(geography,geography) ,
    OPERATOR 5 >(geography,geography) ,
    FUNCTION 1 geography_cmp(geography,geography);


--
-- Name: btree_geometry_ops; Type: OPERATOR CLASS; Schema: public; Owner: -
--

CREATE OPERATOR CLASS btree_geometry_ops
    DEFAULT FOR TYPE geometry USING btree AS
    OPERATOR 1 <(geometry,geometry) ,
    OPERATOR 2 <=(geometry,geometry) ,
    OPERATOR 3 =(geometry,geometry) ,
    OPERATOR 4 >=(geometry,geometry) ,
    OPERATOR 5 >(geometry,geometry) ,
    FUNCTION 1 geometry_cmp(geometry,geometry);


--
-- Name: gist_geography_ops; Type: OPERATOR CLASS; Schema: public; Owner: -
--

CREATE OPERATOR CLASS gist_geography_ops
    DEFAULT FOR TYPE geography USING gist AS
    STORAGE gidx ,
    OPERATOR 3 &&(geography,geography) ,
    FUNCTION 1 geography_gist_consistent(internal,geometry,integer) ,
    FUNCTION 2 geography_gist_union(bytea,internal) ,
    FUNCTION 3 geography_gist_compress(internal) ,
    FUNCTION 4 geography_gist_decompress(internal) ,
    FUNCTION 5 geography_gist_penalty(internal,internal,internal) ,
    FUNCTION 6 geography_gist_picksplit(internal,internal) ,
    FUNCTION 7 geography_gist_same(box2d,box2d,internal);


--
-- Name: gist_geometry_ops; Type: OPERATOR CLASS; Schema: public; Owner: -
--

CREATE OPERATOR CLASS gist_geometry_ops
    DEFAULT FOR TYPE geometry USING gist AS
    STORAGE box2d ,
    OPERATOR 1 <<(geometry,geometry) ,
    OPERATOR 2 &<(geometry,geometry) ,
    OPERATOR 3 &&(geometry,geometry) ,
    OPERATOR 4 &>(geometry,geometry) ,
    OPERATOR 5 >>(geometry,geometry) ,
    OPERATOR 6 ~=(geometry,geometry) ,
    OPERATOR 7 ~(geometry,geometry) ,
    OPERATOR 8 @(geometry,geometry) ,
    OPERATOR 9 &<|(geometry,geometry) ,
    OPERATOR 10 <<|(geometry,geometry) ,
    OPERATOR 11 |>>(geometry,geometry) ,
    OPERATOR 12 |&>(geometry,geometry) ,
    FUNCTION 1 lwgeom_gist_consistent(internal,geometry,integer) ,
    FUNCTION 2 lwgeom_gist_union(bytea,internal) ,
    FUNCTION 3 lwgeom_gist_compress(internal) ,
    FUNCTION 4 lwgeom_gist_decompress(internal) ,
    FUNCTION 5 lwgeom_gist_penalty(internal,internal,internal) ,
    FUNCTION 6 lwgeom_gist_picksplit(internal,internal) ,
    FUNCTION 7 lwgeom_gist_same(box2d,box2d,internal);


SET search_path = pg_catalog;

--
-- Name: CAST (public.box2d AS public.box3d); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.box2d AS public.box3d) WITH FUNCTION public.box3d(public.box2d) AS IMPLICIT;


--
-- Name: CAST (public.box2d AS public.geometry); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.box2d AS public.geometry) WITH FUNCTION public.geometry(public.box2d) AS IMPLICIT;


--
-- Name: CAST (public.box3d AS box); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.box3d AS box) WITH FUNCTION public.box(public.box3d) AS IMPLICIT;


--
-- Name: CAST (public.box3d AS public.box2d); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.box3d AS public.box2d) WITH FUNCTION public.box2d(public.box3d) AS IMPLICIT;


--
-- Name: CAST (public.box3d AS public.geometry); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.box3d AS public.geometry) WITH FUNCTION public.geometry(public.box3d) AS IMPLICIT;


--
-- Name: CAST (public.box3d_extent AS public.box2d); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.box3d_extent AS public.box2d) WITH FUNCTION public.box2d(public.box3d_extent) AS IMPLICIT;


--
-- Name: CAST (public.box3d_extent AS public.box3d); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.box3d_extent AS public.box3d) WITH FUNCTION public.box3d_extent(public.box3d_extent) AS IMPLICIT;


--
-- Name: CAST (public.box3d_extent AS public.geometry); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.box3d_extent AS public.geometry) WITH FUNCTION public.geometry(public.box3d_extent) AS IMPLICIT;


--
-- Name: CAST (bytea AS public.geometry); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (bytea AS public.geometry) WITH FUNCTION public.geometry(bytea) AS IMPLICIT;


--
-- Name: CAST (public.chip AS public.geometry); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.chip AS public.geometry) WITH FUNCTION public.geometry(public.chip) AS IMPLICIT;


--
-- Name: CAST (public.geography AS public.geography); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.geography AS public.geography) WITH FUNCTION public.geography(public.geography, integer, boolean) AS IMPLICIT;


--
-- Name: CAST (public.geography AS public.geometry); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.geography AS public.geometry) WITH FUNCTION public.geometry(public.geography);


--
-- Name: CAST (public.geometry AS box); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.geometry AS box) WITH FUNCTION public.box(public.geometry) AS IMPLICIT;


--
-- Name: CAST (public.geometry AS public.box2d); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.geometry AS public.box2d) WITH FUNCTION public.box2d(public.geometry) AS IMPLICIT;


--
-- Name: CAST (public.geometry AS public.box3d); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.geometry AS public.box3d) WITH FUNCTION public.box3d(public.geometry) AS IMPLICIT;


--
-- Name: CAST (public.geometry AS bytea); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.geometry AS bytea) WITH FUNCTION public.bytea(public.geometry) AS IMPLICIT;


--
-- Name: CAST (public.geometry AS public.geography); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.geometry AS public.geography) WITH FUNCTION public.geography(public.geometry) AS IMPLICIT;


--
-- Name: CAST (public.geometry AS text); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.geometry AS text) WITH FUNCTION public.text(public.geometry) AS IMPLICIT;


--
-- Name: CAST (text AS public.geometry); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (text AS public.geometry) WITH FUNCTION public.geometry(text) AS IMPLICIT;


SET search_path = public, pg_catalog;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: dh_collars; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE dh_collars (
    id character varying(20) NOT NULL,
    shid character varying(10),
    location character varying,
    profile character varying(10),
    srid integer,
    x numeric(12,3),
    y numeric(12,3),
    z numeric(12,3),
    azim_ng numeric(10,2),
    azim_nm numeric(10,2),
    dip_hz numeric(10,2),
    dh_type character varying(10),
    date_start date,
    contractor character varying(20),
    geologist character varying,
    length numeric(10,2),
    nb_samples integer,
    comments character varying,
    completed boolean DEFAULT false,
    numauto integer NOT NULL,
    date_completed date,
    opid integer NOT NULL,
    purpose character varying DEFAULT 'EXPLO'::character varying,
    x_local numeric(12,3),
    y_local numeric(12,3),
    z_local numeric(12,3),
    accusum numeric(10,2),
    id_pject character varying,
    x_pject numeric(10,3),
    y_pject numeric(10,3),
    z_pject numeric(10,3),
    topo_survey_type character varying,
    db_update_timestamp timestamp without time zone DEFAULT now(),
    username character varying DEFAULT "current_user"(),
    datasource integer
);


--
-- Name: TABLE dh_collars; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE dh_collars IS 'Drill holes collars or trenches starting points';


--
-- Name: COLUMN dh_collars.id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_collars.id IS 'Full identifier for borehole or trench, may include zone code, type and sequential number';


--
-- Name: COLUMN dh_collars.shid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_collars.shid IS 'Short identifier: type _ sequential number';


--
-- Name: COLUMN dh_collars.location; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_collars.location IS 'Investigated area code, refers to occurrences table';


--
-- Name: COLUMN dh_collars.profile; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_collars.profile IS 'Profile number';


--
-- Name: COLUMN dh_collars.srid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_collars.srid IS 'Spatial Reference Identifier, or coordinate reference system: see spatial_ref_sys from postgis extension';


--
-- Name: COLUMN dh_collars.x; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_collars.x IS 'X coordinate (Easting),  in coordinate system srid';


--
-- Name: COLUMN dh_collars.y; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_collars.y IS 'Y coordinate (Northing), in coordinate system srid';


--
-- Name: COLUMN dh_collars.z; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_collars.z IS 'Z coordinate';


--
-- Name: COLUMN dh_collars.azim_ng; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_collars.azim_ng IS 'Hole or trench azimuth (°) relative to geographic North';


--
-- Name: COLUMN dh_collars.azim_nm; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_collars.azim_nm IS 'Hole or trench azimuth (°) relative to Magnetic North';


--
-- Name: COLUMN dh_collars.dip_hz; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_collars.dip_hz IS 'Drill hole or trench dip relative to horizontal (°)';


--
-- Name: COLUMN dh_collars.dh_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_collars.dh_type IS 'Type: D for Diamond drill hole, R for RC drill hole, T for Trench, A for Auger drill hole';


--
-- Name: COLUMN dh_collars.date_start; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_collars.date_start IS 'Work start date';


--
-- Name: COLUMN dh_collars.contractor; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_collars.contractor IS 'Drilling contractor';


--
-- Name: COLUMN dh_collars.geologist; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_collars.geologist IS 'Geologist name';


--
-- Name: COLUMN dh_collars.length; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_collars.length IS 'Total length (m)';


--
-- Name: COLUMN dh_collars.nb_samples; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_collars.nb_samples IS 'Number of samples';


--
-- Name: COLUMN dh_collars.comments; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_collars.comments IS 'Comments';


--
-- Name: COLUMN dh_collars.completed; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_collars.completed IS 'True: completed; False: planned';


--
-- Name: COLUMN dh_collars.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_collars.numauto IS 'Automatic integer primary key';


--
-- Name: COLUMN dh_collars.date_completed; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_collars.date_completed IS 'Work finish date';


--
-- Name: COLUMN dh_collars.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_collars.opid IS 'Operation identifier';


--
-- Name: COLUMN dh_collars.purpose; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_collars.purpose IS 'Purpose of hole: exploration, delineation, estimation, grade control, etc.';


--
-- Name: COLUMN dh_collars.x_local; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_collars.x_local IS 'Local x coordinate';


--
-- Name: COLUMN dh_collars.y_local; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_collars.y_local IS 'Local y coordinate';


--
-- Name: COLUMN dh_collars.z_local; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_collars.z_local IS 'Local z coordinate';


--
-- Name: COLUMN dh_collars.accusum; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_collars.accusum IS 'Accumulation sum over various mineralised intervals intersected by drill hole or trench (purpose: quick visualisation on maps (at wide scale ONLY), quick ranking of interesting holes)';


--
-- Name: COLUMN dh_collars.id_pject; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_collars.id_pject IS 'PJ for ProJect identifier: provisional identifier; aka peg number';


--
-- Name: COLUMN dh_collars.x_pject; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_collars.x_pject IS 'Planned x coordinate';


--
-- Name: COLUMN dh_collars.y_pject; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_collars.y_pject IS 'Planned y coordinate';


--
-- Name: COLUMN dh_collars.z_pject; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_collars.z_pject IS 'Planned z coordinate';


--
-- Name: COLUMN dh_collars.topo_survey_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_collars.topo_survey_type IS 'Topographic collar survey type: GPS, GPSD, geometry, theodolite, relative, computed from local coordinate system, etc.';


--
-- Name: COLUMN dh_collars.db_update_timestamp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_collars.db_update_timestamp IS 'Current date and time stamp when data is loaded in table';


--
-- Name: COLUMN dh_collars.username; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_collars.username IS 'User (role) which created data record';


--
-- Name: COLUMN dh_collars.datasource; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_collars.datasource IS 'Datasource identifier, refers to lex_datasource';


--
-- Name: operation_active; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--
__________________________________________________JEANSUILA_____________________________________________


CREATE TABLE operation_active (
    opid integer,
    db_update_timestamp timestamp without time zone DEFAULT now(),
    username character varying DEFAULT "current_user"(),
    numauto integer NOT NULL
);


--
-- Name: COLUMN operation_active.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN operation_active.opid IS 'Operation identifier';


--
-- Name: COLUMN operation_active.db_update_timestamp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN operation_active.db_update_timestamp IS 'Current date and time stamp when data is loaded in table';


--
-- Name: COLUMN operation_active.username; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN operation_active.username IS 'User (role) which created data record';


--
-- Name: COLUMN operation_active.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN operation_active.numauto IS 'Automatic integer';


SET search_path = pierre, pg_catalog;

--
-- Name: dh_collars; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW dh_collars AS
    SELECT dh_collars.id, dh_collars.shid, dh_collars.location, dh_collars.profile, dh_collars.srid, dh_collars.x, dh_collars.y, dh_collars.z, dh_collars.azim_ng, dh_collars.azim_nm, dh_collars.dip_hz, dh_collars.dh_type, dh_collars.date_start, dh_collars.contractor, dh_collars.geologist, dh_collars.length, dh_collars.nb_samples, dh_collars.comments, dh_collars.completed, dh_collars.numauto, dh_collars.date_completed, dh_collars.opid, dh_collars.purpose, dh_collars.x_local, dh_collars.y_local, dh_collars.z_local, dh_collars.accusum, dh_collars.id_pject, dh_collars.x_pject, dh_collars.y_pject, dh_collars.z_pject, dh_collars.topo_survey_type, dh_collars.db_update_timestamp, dh_collars.username, dh_collars.datasource FROM (public.dh_collars JOIN public.operation_active ON ((dh_collars.opid = operation_active.opid)));


SET search_path = public, pg_catalog;

--
-- Name: dh_litho; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE dh_litho (
    id character varying(20),
    depfrom numeric(10,2),
    depto numeric(10,2),
    description character varying,
    code1 character varying(4),
    code2 character varying(4),
    code3 character varying(4),
    code4 character varying(4),
    value1 integer,
    value2 integer,
    value3 integer,
    value4 integer,
    opid integer,
    colour character varying,
    numauto integer NOT NULL,
    datasource integer,
    description1 character varying,
    description2 character varying,
    value5 integer,
    value6 integer,
    db_update_timestamp timestamp without time zone DEFAULT now(),
    username character varying DEFAULT "current_user"()
);


--
-- Name: TABLE dh_litho; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE dh_litho IS 'Drill holes or trenches geological descriptions';


--
-- Name: COLUMN dh_litho.id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_litho.id IS 'Identifier, refers to dh_collars';


--
-- Name: COLUMN dh_litho.depfrom; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_litho.depfrom IS 'Interval beginning depth';


--
-- Name: COLUMN dh_litho.depto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_litho.depto IS 'Interval ending depth';


--
-- Name: COLUMN dh_litho.description; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_litho.description IS 'Geological description, naturalist style';


--
-- Name: COLUMN dh_litho.code1; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_litho.code1 IS 'Conventional use is lithology code, 4 characters, uppercase. Refer to lex_codes table';


--
-- Name: COLUMN dh_litho.code2; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_litho.code2 IS 'Conventional use is supergene oxidation, 1 character, uppercase. Refer to lex_codes table';


--
-- Name: COLUMN dh_litho.code3; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_litho.code3 IS 'Conventional use is stratigraphy code, 4 characters, uppercase. Refer to lex_codes table';


--
-- Name: COLUMN dh_litho.code4; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_litho.code4 IS '4 characters code. Refer to lex_codes table';


--
-- Name: COLUMN dh_litho.value1; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_litho.value1 IS 'Integer value. Refer to lex_codes table';


--
-- Name: COLUMN dh_litho.value2; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_litho.value2 IS 'Integer value. Refer to lex_codes table';


--
-- Name: COLUMN dh_litho.value3; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_litho.value3 IS 'Integer value. Refer to lex_codes table';


--
-- Name: COLUMN dh_litho.value4; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_litho.value4 IS 'Integer value. Refer to lex_codes table';


--
-- Name: COLUMN dh_litho.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_litho.opid IS 'Operation identifier';


--
-- Name: COLUMN dh_litho.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_litho.numauto IS 'Automatic integer primary key';


--
-- Name: COLUMN dh_litho.datasource; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_litho.datasource IS 'Datasource identifier, refers to lex_datasource';


--
-- Name: COLUMN dh_litho.description1; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_litho.description1 IS 'Complement to main geological description: metallic minerals';


--
-- Name: COLUMN dh_litho.description2; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_litho.description2 IS 'Complement to main geological description: alterations';


--
-- Name: COLUMN dh_litho.value5; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_litho.value5 IS 'Integer value. Refer to lex_codes table';


--
-- Name: COLUMN dh_litho.value6; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_litho.value6 IS 'Integer value. Refer to lex_codes table';


--
-- Name: COLUMN dh_litho.db_update_timestamp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_litho.db_update_timestamp IS 'Current date and time stamp when data is loaded in table';


--
-- Name: COLUMN dh_litho.username; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_litho.username IS 'User (role) which created data record';


SET search_path = pierre, pg_catalog;

--
-- Name: dh_litho; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW dh_litho AS
    SELECT dh_litho.id, dh_litho.depfrom, dh_litho.depto, dh_litho.description, dh_litho.code1, dh_litho.code2, dh_litho.code3, dh_litho.code4, dh_litho.value1, dh_litho.value2, dh_litho.value3, dh_litho.value4, dh_litho.opid, dh_litho.colour, dh_litho.numauto, dh_litho.datasource, dh_litho.description1, dh_litho.description2, dh_litho.value5, dh_litho.value6, dh_litho.db_update_timestamp, dh_litho.username FROM (public.dh_litho JOIN public.operation_active ON ((dh_litho.opid = operation_active.opid)));


SET search_path = checks, pg_catalog;

--
-- Name: collars_lengths_vs_dh_litho_depths; Type: VIEW; Schema: checks; Owner: -
--

CREATE VIEW collars_lengths_vs_dh_litho_depths AS
    SELECT dh_collars.id, dh_collars.length, max_depto.max_depto_litho, (dh_collars.length - max_depto.max_depto_litho) AS diff_should_be_zero FROM (pierre.dh_collars JOIN (SELECT dh_litho.id, max(dh_litho.depto) AS max_depto_litho FROM pierre.dh_litho GROUP BY dh_litho.id) max_depto ON (((dh_collars.id)::text = (max_depto.id)::text))) WHERE ((dh_collars.length - max_depto.max_depto_litho) <> (0)::numeric) ORDER BY dh_collars.id;


SET search_path = public, pg_catalog;

--
-- Name: dh_sampling_grades; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE dh_sampling_grades (
    id character varying(20),
    depfrom numeric(10,2),
    depto numeric(10,2),
    core_loss_cm numeric(5,1),
    weight_kg numeric(6,2),
    sample_type character varying(8),
    sample_id character varying(20),
    comments character varying,
    opid integer,
    batch_id integer,
    datasource integer,
    au1_ppm numeric(8,3),
    au2_ppm numeric(8,3),
    au3_ppm numeric(8,3),
    au4_ppm numeric(8,3),
    au5_ppm numeric(8,3),
    au6_ppm numeric(8,3),
    ph numeric(4,2),
    moisture numeric(8,4),
    numauto integer NOT NULL,
    au_specks integer,
    quartering integer,
    db_update_timestamp timestamp without time zone DEFAULT now(),
    username character varying DEFAULT "current_user"()
);


--
-- Name: TABLE dh_sampling_grades; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE dh_sampling_grades IS 'Samples along drill holes and trenches, with grades';


--
-- Name: COLUMN dh_sampling_grades.id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_sampling_grades.id IS 'Identifier, refers to dh_collars';


--
-- Name: COLUMN dh_sampling_grades.depfrom; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_sampling_grades.depfrom IS 'Sample beginning depth';


--
-- Name: COLUMN dh_sampling_grades.depto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_sampling_grades.depto IS 'Sample ending depth';


--
-- Name: COLUMN dh_sampling_grades.core_loss_cm; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_sampling_grades.core_loss_cm IS 'Cumulated core loss over sampled interval, in cm';


--
-- Name: COLUMN dh_sampling_grades.weight_kg; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_sampling_grades.weight_kg IS 'Sample weight kg';


--
-- Name: COLUMN dh_sampling_grades.sample_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_sampling_grades.sample_type IS 'Sample type: DD: core sample (diamond drill), RC: percussion drilling Reverse Circulation sample, NS: not sampled, CS: channel sample';


--
-- Name: COLUMN dh_sampling_grades.sample_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_sampling_grades.sample_id IS 'Sample identifier: refers to assay results and quality check tables';


--
-- Name: COLUMN dh_sampling_grades.comments; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_sampling_grades.comments IS 'Free comments, if any';


--
-- Name: COLUMN dh_sampling_grades.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_sampling_grades.opid IS 'Operation identifier';


--
-- Name: COLUMN dh_sampling_grades.batch_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_sampling_grades.batch_id IS 'Batch identifier: refers to batch submission table: lab_ana_batches_expedition';


--
-- Name: COLUMN dh_sampling_grades.datasource; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_sampling_grades.datasource IS 'Datasource identifier, refers to lex_datasource';


--
-- Name: COLUMN dh_sampling_grades.au1_ppm; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_sampling_grades.au1_ppm IS 'Au grade 1; cf. usage definition in lex_codes for opid';


--
-- Name: COLUMN dh_sampling_grades.au2_ppm; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_sampling_grades.au2_ppm IS 'Au grade 2; cf. usage definition in lex_codes for opid';


--
-- Name: COLUMN dh_sampling_grades.au3_ppm; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_sampling_grades.au3_ppm IS 'Au grade 3; cf. usage definition in lex_codes for opid';


--
-- Name: COLUMN dh_sampling_grades.au4_ppm; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_sampling_grades.au4_ppm IS 'Au grade 4; cf. usage definition in lex_codes for opid';


--
-- Name: COLUMN dh_sampling_grades.au5_ppm; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_sampling_grades.au5_ppm IS 'Au grade 5; cf. usage definition in lex_codes for opid';


--
-- Name: COLUMN dh_sampling_grades.au6_ppm; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_sampling_grades.au6_ppm IS 'Au grade 6; cf. usage definition in lex_codes for opid';


--
-- Name: COLUMN dh_sampling_grades.ph; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_sampling_grades.ph IS 'pH measurement (for acidic ores)';


--
-- Name: COLUMN dh_sampling_grades.moisture; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_sampling_grades.moisture IS 'Moisture content (for percussion drilling samples mainly)';


--
-- Name: COLUMN dh_sampling_grades.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_sampling_grades.numauto IS 'Automatic integer primary key';


--
-- Name: COLUMN dh_sampling_grades.au_specks; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_sampling_grades.au_specks IS 'Number of gold specks seen in drill hole or trench; typically, after panning destructive drilling chips, also gold specks seen in core drilling';


--
-- Name: COLUMN dh_sampling_grades.quartering; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_sampling_grades.quartering IS 'Sample quartering, if any (for percussion drilling samples split on site, mainly)';


--
-- Name: COLUMN dh_sampling_grades.db_update_timestamp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_sampling_grades.db_update_timestamp IS 'Current date and time stamp when data is loaded in table';


--
-- Name: COLUMN dh_sampling_grades.username; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_sampling_grades.username IS 'User (role) which created data record';


SET search_path = pierre, pg_catalog;

--
-- Name: dh_sampling_grades; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW dh_sampling_grades AS
    SELECT dh_sampling_grades.id, dh_sampling_grades.depfrom, dh_sampling_grades.depto, dh_sampling_grades.core_loss_cm, dh_sampling_grades.weight_kg, dh_sampling_grades.sample_type, dh_sampling_grades.sample_id, dh_sampling_grades.comments, dh_sampling_grades.opid, dh_sampling_grades.batch_id, dh_sampling_grades.datasource, dh_sampling_grades.au1_ppm, dh_sampling_grades.au2_ppm, dh_sampling_grades.au3_ppm, dh_sampling_grades.au4_ppm, dh_sampling_grades.au5_ppm, dh_sampling_grades.au6_ppm, dh_sampling_grades.ph, dh_sampling_grades.moisture, dh_sampling_grades.numauto, dh_sampling_grades.au_specks, dh_sampling_grades.quartering, dh_sampling_grades.db_update_timestamp, dh_sampling_grades.username FROM (public.dh_sampling_grades JOIN public.operation_active ON ((dh_sampling_grades.opid = operation_active.opid)));


--
-- Name: dh_sampling; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW dh_sampling AS
    SELECT dh_sampling_grades.id, dh_sampling_grades.depfrom, dh_sampling_grades.depto, dh_sampling_grades.core_loss_cm, dh_sampling_grades.weight_kg, dh_sampling_grades.sample_type, dh_sampling_grades.sample_id, dh_sampling_grades.comments, dh_sampling_grades.opid, dh_sampling_grades.batch_id, dh_sampling_grades.datasource FROM dh_sampling_grades;


SET search_path = checks, pg_catalog;

--
-- Name: collars_lengths_vs_dh_sampling_depths; Type: VIEW; Schema: checks; Owner: -
--

CREATE VIEW collars_lengths_vs_dh_sampling_depths AS
    SELECT dh_collars.id, dh_collars.length, max_depto.max_depto_sampl, (dh_collars.length - max_depto.max_depto_sampl) AS diff_should_be_zero FROM (pierre.dh_collars JOIN (SELECT dh_sampling.id, max(dh_sampling.depto) AS max_depto_sampl FROM pierre.dh_sampling GROUP BY dh_sampling.id) max_depto ON (((dh_collars.id)::text = (max_depto.id)::text))) WHERE ((dh_collars.length - max_depto.max_depto_sampl) <> (0)::numeric) ORDER BY dh_collars.id;


SET search_path = public, pg_catalog;

--
-- Name: topo_points; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE topo_points (
    location character varying(20),
    num numeric(10,0),
    x numeric(10,3),
    y numeric(10,3),
    z numeric(10,3),
    numauto integer NOT NULL,
    id character varying(20),
    datasource integer,
    opid integer,
    survey_date date,
    topo_survey_type character varying,
    coordsys character varying,
    surveyor character varying,
    db_update_timestamp timestamp without time zone DEFAULT now(),
    username character varying DEFAULT "current_user"()
);


--
-- Name: TABLE topo_points; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE topo_points IS 'topographical data';


--
-- Name: COLUMN topo_points.location; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN topo_points.location IS 'Topographical zone';


--
-- Name: COLUMN topo_points.num; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN topo_points.num IS 'Topographical point number';


--
-- Name: COLUMN topo_points.x; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN topo_points.x IS 'X coordinate, projected in UTM (m)';


--
-- Name: COLUMN topo_points.y; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN topo_points.y IS 'Y coordinate, projected in UTM (m)';


--
-- Name: COLUMN topo_points.z; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN topo_points.z IS 'Z coordinate, projected in UTM (m)';


--
-- Name: COLUMN topo_points.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN topo_points.numauto IS 'Automatic integer primary key';


--
-- Name: COLUMN topo_points.id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN topo_points.id IS 'Full identifier for borehole or trench, including zone code with type and sequential number';


--
-- Name: COLUMN topo_points.datasource; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN topo_points.datasource IS 'Datasource identifier, refers to lex_datasource';


--
-- Name: COLUMN topo_points.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN topo_points.opid IS 'Operation identifier';


--
-- Name: COLUMN topo_points.username; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN topo_points.username IS 'User (role) which created data record';


SET search_path = pierre, pg_catalog;

--
-- Name: topo_points; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW topo_points AS
    SELECT topo_points.location, topo_points.num, topo_points.x, topo_points.y, topo_points.z, topo_points.numauto, topo_points.id, topo_points.datasource, topo_points.opid, topo_points.survey_date, topo_points.topo_survey_type, topo_points.coordsys, topo_points.surveyor, topo_points.db_update_timestamp, topo_points.username FROM (public.topo_points JOIN public.operation_active ON ((topo_points.opid = operation_active.opid)));


SET search_path = checks, pg_catalog;

--
-- Name: collars_vs_temp_topo_id_topo_sans_collars; Type: VIEW; Schema: checks; Owner: -
--

CREATE VIEW collars_vs_temp_topo_id_topo_sans_collars AS
    SELECT topo_points.id AS id_topo, dh_collars.id AS id_collars FROM (pierre.topo_points LEFT JOIN pierre.dh_collars ON (((topo_points.id)::text = (dh_collars.id)::text))) WHERE (dh_collars.id IS NULL);


--
-- Name: collars_vs_topo_xyz_en_face_et_differences_importantes; Type: VIEW; Schema: checks; Owner: -
--

CREATE VIEW collars_vs_topo_xyz_en_face_et_differences_importantes AS
    SELECT tmp.id_topo, tmp.id_collars, tmp.topo_x, tmp.collars_x, tmp.diffx, tmp.topo_y, tmp.collars_y, tmp.diffy, tmp.topo_z, tmp.collars_z, tmp.diffz FROM (SELECT topo_points.id AS id_topo, dh_collars.id AS id_collars, topo_points.x AS topo_x, dh_collars.x AS collars_x, topo_points.y AS topo_y, dh_collars.y AS collars_y, topo_points.z AS topo_z, dh_collars.z AS collars_z, (topo_points.x - dh_collars.x) AS diffx, (topo_points.y - dh_collars.y) AS diffy, (topo_points.z - dh_collars.z) AS diffz FROM (pierre.topo_points JOIN pierre.dh_collars ON (((topo_points.id)::text = (dh_collars.id)::text)))) tmp WHERE (((abs(tmp.diffx) >= 0.05) OR (abs(tmp.diffy) >= 0.05)) OR (abs(tmp.diffz) >= 0.05));


--
-- Name: dh_collars_to_topo_points_lines; Type: VIEW; Schema: checks; Owner: -
--

CREATE VIEW dh_collars_to_topo_points_lines AS
    SELECT dh_collars.id, topo_points.numauto, dh_collars.x AS dh_collars_x, topo_points.x AS topo_points_x, dh_collars.y AS dh_collars_y, topo_points.y AS topo_points_y, dh_collars.z AS dh_collars_z, topo_points.z AS topo_points_z, public.geomfromewkt((((((((((((('LINESTRING ('::text || (dh_collars.x)::text) || ' '::text) || (dh_collars.y)::text) || ' '::text) || (dh_collars.z)::text) || ', '::text) || topo_points.x) || ' '::text) || (topo_points.y)::text) || ' '::text) || topo_points.z) || ')'::text)) AS geometry FROM (pierre.topo_points JOIN pierre.dh_collars ON (((topo_points.opid = dh_collars.opid) AND ((topo_points.id)::text = (dh_collars.id)::text))));


--
-- Name: doublons_collars_id; Type: VIEW; Schema: checks; Owner: -
--

CREATE VIEW doublons_collars_id AS
    SELECT dh_collars.id AS collars_id_non_uniq, count(dh_collars.id) AS count FROM pierre.dh_collars GROUP BY dh_collars.id HAVING (count(dh_collars.id) > 1);


--
-- Name: doublons_collars_xyz; Type: VIEW; Schema: checks; Owner: -
--

CREATE VIEW doublons_collars_xyz AS
    SELECT count(*) AS count, dh_collars.x, dh_collars.y, dh_collars.z, min((dh_collars.id)::text) AS min, max((dh_collars.id)::text) AS max FROM pierre.dh_collars GROUP BY dh_collars.x, dh_collars.y, dh_collars.z HAVING (count(*) > 1);


--
-- Name: doublons_collars_xyz_ouvrages_concernes; Type: VIEW; Schema: checks; Owner: -
--

CREATE VIEW doublons_collars_xyz_ouvrages_concernes AS
    SELECT dh_collars.id, dh_collars.x, dh_collars.y, dh_collars.z, dh_collars.azim_ng, dh_collars.dip_hz FROM (pierre.dh_collars JOIN (SELECT count(*) AS count, dh_collars.x, dh_collars.y FROM pierre.dh_collars GROUP BY dh_collars.x, dh_collars.y HAVING (count(*) > 1)) tmp ON (((dh_collars.x = tmp.x) AND (dh_collars.y = tmp.y))));


--
-- Name: doublons_dh_litho_id_depto; Type: VIEW; Schema: checks; Owner: -
--

CREATE VIEW doublons_dh_litho_id_depto AS
    SELECT dh_litho.id, dh_litho.depto, count(*) AS count FROM pierre.dh_litho GROUP BY dh_litho.id, dh_litho.depto HAVING (count(*) > 1);


--
-- Name: doublons_dh_sampling_id_depto; Type: VIEW; Schema: checks; Owner: -
--

CREATE VIEW doublons_dh_sampling_id_depto AS
    SELECT dh_sampling.id, dh_sampling.depto, count(*) AS count FROM pierre.dh_sampling GROUP BY dh_sampling.id, dh_sampling.depto HAVING (count(*) > 1);


SET search_path = public, pg_catalog;

--
-- Name: shift_reports; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE shift_reports (
    opid integer NOT NULL,
    date date,
    shift character varying(1),
    no_fichette integer NOT NULL,
    rig character varying(50),
    geologist character varying(50),
    time_start time without time zone,
    time_end time without time zone,
    id character varying(20),
    peg_number character varying(5),
    planned_length numeric(10,2),
    tool character varying(20),
    drilled_length_during_shift numeric(10,2),
    drilled_length numeric(10,2),
    completed boolean,
    profile character varying(10),
    comments character varying(254),
    invoice_nr integer,
    drilled_shift_destr numeric,
    drilled_shift_pq numeric,
    drilled_shift_hq numeric,
    drilled_shift_nq numeric,
    recovered_length_shift numeric,
    stdby_time1_h numeric,
    stdby_time2_h numeric,
    stdby_time3_h numeric,
    moving_time_h numeric,
    driller_name character varying,
    geologist_supervisor character varying,
    db_update_timestamp timestamp without time zone DEFAULT now(),
    username character varying DEFAULT "current_user"(),
    numauto integer NOT NULL,
    datasource integer
);


--
-- Name: TABLE shift_reports; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE shift_reports IS 'Daily reports from rigsites: one report per shift/machine/tool';


--
-- Name: COLUMN shift_reports.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN shift_reports.opid IS 'Operation identifier';


--
-- Name: COLUMN shift_reports.date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN shift_reports.date IS 'Date of drilling';


--
-- Name: COLUMN shift_reports.shift; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN shift_reports.shift IS 'Day or night shift';


--
-- Name: COLUMN shift_reports.no_fichette; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN shift_reports.no_fichette IS 'Number of fichette = field form filled on a shift and borehole basis';


--
-- Name: COLUMN shift_reports.rig; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN shift_reports.rig IS 'Name/id of drilling (or digging) machine';


--
-- Name: COLUMN shift_reports.geologist; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN shift_reports.geologist IS 'Geologist(s) following the drill hole on the rig site, doing the logging.';


--
-- Name: COLUMN shift_reports.time_start; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN shift_reports.time_start IS 'Drilling starting time';


--
-- Name: COLUMN shift_reports.time_end; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN shift_reports.time_end IS 'Drilling ending time';


--
-- Name: COLUMN shift_reports.id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN shift_reports.id IS 'Drill hole identifier, must match collars.id field, e.g. UMA_R086';


--
-- Name: COLUMN shift_reports.peg_number; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN shift_reports.peg_number IS 'Peg number: provisional identifier/number; aka PJ for ProJect identifier';


--
-- Name: COLUMN shift_reports.planned_length; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN shift_reports.planned_length IS 'Length of the borehole, as initially planned';


--
-- Name: COLUMN shift_reports.tool; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN shift_reports.tool IS 'Drilling (digging) tool/size, diameter: RC, RAB, percussion, core, SQ, PQ, HQ, NQ, BQ, AQ, mechanical shovel, hand shovel, banka, etc.';


--
-- Name: COLUMN shift_reports.drilled_length_during_shift; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN shift_reports.drilled_length_during_shift IS 'Length of borehole drilled during the shift';


--
-- Name: COLUMN shift_reports.drilled_length; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN shift_reports.drilled_length IS 'Total length of the borehole drilled at the end of the shift';


--
-- Name: COLUMN shift_reports.completed; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN shift_reports.completed IS 'Borehole finished or not';


--
-- Name: COLUMN shift_reports.profile; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN shift_reports.profile IS 'Section identifier';


--
-- Name: COLUMN shift_reports.comments; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN shift_reports.comments IS 'Comments on drilling (events, presence of water, difficulties, major facies, etc.)';


--
-- Name: COLUMN shift_reports.invoice_nr; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN shift_reports.invoice_nr IS 'Subcontractor invoice number';


--
-- Name: COLUMN shift_reports.drilled_shift_destr; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN shift_reports.drilled_shift_destr IS 'Drilled length during shift in destructive';


--
-- Name: COLUMN shift_reports.drilled_shift_pq; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN shift_reports.drilled_shift_pq IS 'Drilled length during shift in PQ core';


--
-- Name: COLUMN shift_reports.drilled_shift_hq; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN shift_reports.drilled_shift_hq IS 'Drilled length during shift in HQ core';


--
-- Name: COLUMN shift_reports.drilled_shift_nq; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN shift_reports.drilled_shift_nq IS 'Drilled length during shift in NQ core';


--
-- Name: COLUMN shift_reports.recovered_length_shift; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN shift_reports.recovered_length_shift IS 'Recovered length during shift';


--
-- Name: COLUMN shift_reports.stdby_time1_h; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN shift_reports.stdby_time1_h IS 'Standby time hours, with machine powered on';


--
-- Name: COLUMN shift_reports.stdby_time2_h; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN shift_reports.stdby_time2_h IS 'Standby time hours, with machine powered off';


--
-- Name: COLUMN shift_reports.stdby_time3_h; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN shift_reports.stdby_time3_h IS 'Standby time hours, due to weather conditions';


--
-- Name: COLUMN shift_reports.moving_time_h; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN shift_reports.moving_time_h IS 'Moving time hours';


--
-- Name: COLUMN shift_reports.driller_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN shift_reports.driller_name IS 'Driller supervisor name';


--
-- Name: COLUMN shift_reports.geologist_supervisor; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN shift_reports.geologist_supervisor IS 'Geologist supervisor name';


--
-- Name: COLUMN shift_reports.db_update_timestamp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN shift_reports.db_update_timestamp IS 'Current date and time stamp when data is loaded in table';


--
-- Name: COLUMN shift_reports.username; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN shift_reports.username IS 'User (role) which created data record';


--
-- Name: COLUMN shift_reports.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN shift_reports.numauto IS 'Automatic integer';


--
-- Name: COLUMN shift_reports.datasource; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN shift_reports.datasource IS 'Datasource identifier, refers to lex_datasource';


SET search_path = pierre, pg_catalog;

--
-- Name: shift_reports; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW shift_reports AS
    SELECT shift_reports.opid, shift_reports.date, shift_reports.shift, shift_reports.no_fichette, shift_reports.rig, shift_reports.geologist, shift_reports.time_start, shift_reports.time_end, shift_reports.id, shift_reports.peg_number, shift_reports.planned_length, shift_reports.tool, shift_reports.drilled_length_during_shift, shift_reports.drilled_length, shift_reports.completed, shift_reports.profile, shift_reports.comments, shift_reports.invoice_nr, shift_reports.drilled_shift_destr, shift_reports.drilled_shift_pq, shift_reports.drilled_shift_hq, shift_reports.drilled_shift_nq, shift_reports.recovered_length_shift, shift_reports.stdby_time1_h, shift_reports.stdby_time2_h, shift_reports.stdby_time3_h, shift_reports.moving_time_h, shift_reports.driller_name, shift_reports.geologist_supervisor, shift_reports.db_update_timestamp, shift_reports.username, shift_reports.numauto, shift_reports.datasource FROM (public.shift_reports JOIN public.operation_active ON ((shift_reports.opid = operation_active.opid)));


SET search_path = checks, pg_catalog;

--
-- Name: fichettes_infos_incoherentes_drilled_lengths; Type: VIEW; Schema: checks; Owner: -
--

CREATE VIEW fichettes_infos_incoherentes_drilled_lengths AS
    SELECT min(shift_reports.no_fichette) AS first_fichette, max(shift_reports.no_fichette) AS last_fichette, shift_reports.id, sum(shift_reports.drilled_length_during_shift) AS sum_drilled_length_during_shift, max(shift_reports.drilled_length) AS max_drilled_length FROM pierre.shift_reports GROUP BY shift_reports.id HAVING (sum(shift_reports.drilled_length_during_shift) <> max(shift_reports.drilled_length)) ORDER BY shift_reports.id;


--
-- Name: fichettes_infos_incoherentes_heures; Type: VIEW; Schema: checks; Owner: -
--

CREATE VIEW fichettes_infos_incoherentes_heures AS
    SELECT shift_reports.date, shift_reports.id, shift_reports.time_start, shift_reports.time_end FROM pierre.shift_reports WHERE (shift_reports.time_start > shift_reports.time_end);


--
-- Name: fichettes_infos_redondantes_incoherentes; Type: VIEW; Schema: checks; Owner: -
--

CREATE VIEW fichettes_infos_redondantes_incoherentes AS
    SELECT tmp1.nb_sondages_et_attributs, tmp2.nb_sondages, (tmp1.nb_sondages_et_attributs - tmp2.nb_sondages) AS diff_should_be_zero FROM (SELECT count(*) AS nb_sondages_et_attributs FROM (SELECT shift_reports.id, shift_reports.planned_length FROM pierre.shift_reports GROUP BY shift_reports.id, shift_reports.planned_length) tmp) tmp1, (SELECT count(DISTINCT shift_reports.id) AS nb_sondages FROM pierre.shift_reports) tmp2 WHERE ((tmp1.nb_sondages_et_attributs - tmp2.nb_sondages) <> 0);


--
-- Name: fichettes_infos_redondantes_incoherentes_quels_ouvrages; Type: VIEW; Schema: checks; Owner: -
--

CREATE VIEW fichettes_infos_redondantes_incoherentes_quels_ouvrages AS
    SELECT shift_reports.id, min(shift_reports.planned_length) AS min_planned_length, max(shift_reports.planned_length) AS max_planned_length FROM pierre.shift_reports GROUP BY shift_reports.id HAVING (count(DISTINCT shift_reports.planned_length) > 1);


--
-- Name: fichettes_longueurs_incoherentes; Type: VIEW; Schema: checks; Owner: -
--

CREATE VIEW fichettes_longueurs_incoherentes AS
    SELECT tmp.id, tmp.max_drilled_length, tmp.sum_drilled_length_during_shift FROM (SELECT shift_reports.id, max(shift_reports.drilled_length) AS max_drilled_length, sum(shift_reports.drilled_length_during_shift) AS sum_drilled_length_during_shift FROM pierre.shift_reports GROUP BY shift_reports.id ORDER BY shift_reports.id) tmp WHERE (tmp.max_drilled_length <> tmp.sum_drilled_length_during_shift);


--
-- Name: fichettes_ouvrages_non_completed; Type: VIEW; Schema: checks; Owner: -
--

CREATE VIEW fichettes_ouvrages_non_completed AS
    SELECT shift_reports.id, max((shift_reports.completed)::integer) AS max FROM pierre.shift_reports GROUP BY shift_reports.id HAVING (max((shift_reports.completed)::integer) <> 1);


--
-- Name: fichettes_vs_collars_completed_incoherents; Type: VIEW; Schema: checks; Owner: -
--

CREATE VIEW fichettes_vs_collars_completed_incoherents AS
    SELECT tmp.id, dh_collars.completed, tmp.max_completed_fichettes FROM ((SELECT shift_reports.id, max((shift_reports.completed)::integer) AS max_completed_fichettes FROM pierre.shift_reports GROUP BY shift_reports.id) tmp JOIN pierre.dh_collars ON (((tmp.id)::text = (dh_collars.id)::text))) WHERE ((dh_collars.completed)::integer <> tmp.max_completed_fichettes);


--
-- Name: fichettes_vs_collars_longueurs_incoherentes; Type: VIEW; Schema: checks; Owner: -
--

CREATE VIEW fichettes_vs_collars_longueurs_incoherentes AS
    SELECT tmp.id, tmp.max_drilled_length, dh_collars.length FROM ((SELECT shift_reports.id, max(shift_reports.drilled_length) AS max_drilled_length, sum(shift_reports.drilled_length_during_shift) AS sum_drilled_length_during_shift FROM pierre.shift_reports GROUP BY shift_reports.id ORDER BY shift_reports.id) tmp JOIN pierre.dh_collars ON (((tmp.id)::text = (dh_collars.id)::text))) WHERE (tmp.max_drilled_length <> dh_collars.length);


--
-- Name: fichettes_vs_collars_ouvrages_dans_fichettes_pas_collars; Type: VIEW; Schema: checks; Owner: -
--

CREATE VIEW fichettes_vs_collars_ouvrages_dans_fichettes_pas_collars AS
    SELECT shift_reports.id AS shift_reports_id, dh_collars.id AS dh_collars_id FROM (pierre.shift_reports LEFT JOIN pierre.dh_collars ON (((shift_reports.id)::text = (dh_collars.id)::text))) WHERE (dh_collars.id IS NULL) ORDER BY shift_reports.id, dh_collars.id;


--
-- Name: tetes_passes_ouvrages_dans_passes_pas_dans_tetes_dh_litho; Type: VIEW; Schema: checks; Owner: -
--

CREATE VIEW tetes_passes_ouvrages_dans_passes_pas_dans_tetes_dh_litho AS
    SELECT dh_collars.id, dh_litho.id AS litho_id FROM (pierre.dh_collars RIGHT JOIN pierre.dh_litho ON (((dh_collars.id)::text = (dh_litho.id)::text))) WHERE (dh_collars.id IS NULL) ORDER BY dh_litho.id;


--
-- Name: tetes_passes_ouvrages_dans_passes_pas_dans_tetes_dh_sampling; Type: VIEW; Schema: checks; Owner: -
--

CREATE VIEW tetes_passes_ouvrages_dans_passes_pas_dans_tetes_dh_sampling AS
    SELECT DISTINCT tmp.dh_sampling_id FROM (SELECT dh_collars.id, dh_sampling.id AS dh_sampling_id FROM (pierre.dh_collars RIGHT JOIN pierre.dh_sampling ON (((dh_collars.id)::text = (dh_sampling.id)::text))) WHERE (dh_collars.id IS NULL) ORDER BY dh_sampling.id) tmp;


--
-- Name: tetes_passes_ouvrages_dans_tetes_pas_dans_passes_dh_litho; Type: VIEW; Schema: checks; Owner: -
--

CREATE VIEW tetes_passes_ouvrages_dans_tetes_pas_dans_passes_dh_litho AS
    SELECT dh_collars.id AS collars_id_without_litho, dh_litho.id AS litho_id_nulls FROM (pierre.dh_collars LEFT JOIN pierre.dh_litho ON (((dh_collars.id)::text = (dh_litho.id)::text))) WHERE (dh_litho.id IS NULL) ORDER BY dh_collars.id;


--
-- Name: tetes_passes_ouvrages_dans_tetes_pas_dans_passes_dh_sampling; Type: VIEW; Schema: checks; Owner: -
--

CREATE VIEW tetes_passes_ouvrages_dans_tetes_pas_dans_passes_dh_sampling AS
    SELECT dh_collars.id AS collars_id_without_samples, dh_sampling.id AS samples_id_nulls FROM (pierre.dh_collars LEFT JOIN pierre.dh_sampling ON (((dh_collars.id)::text = (dh_sampling.id)::text))) WHERE (dh_sampling.id IS NULL) ORDER BY dh_collars.id;


SET search_path = pierre, pg_catalog;

--
-- Name: ana_det_limit; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE ana_det_limit (
    batch_id character varying,
    elem_code character varying,
    elem_name character varying,
    unit character varying,
    detlim_inf integer,
    detlim_sup integer,
    opid integer
);


SET search_path = public, pg_catalog;

--
-- Name: ancient_workings; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ancient_workings (
    gid integer NOT NULL,
    description character varying(254),
    the_geom geometry,
    opid integer,
    numauto integer NOT NULL,
    datasource integer,
    CONSTRAINT enforce_dims_the_geom CHECK ((ndims(the_geom) = 2)),
    CONSTRAINT enforce_geotype_the_geom CHECK (((geometrytype(the_geom) = 'POINT'::text) OR (the_geom IS NULL))),
    CONSTRAINT enforce_srid_the_geom CHECK ((srid(the_geom) = 4326))
);


--
-- Name: TABLE ancient_workings; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE ancient_workings IS 'Ancient workings, either historic or recent';


--
-- Name: COLUMN ancient_workings.gid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ancient_workings.gid IS 'Identifier';


--
-- Name: COLUMN ancient_workings.description; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ancient_workings.description IS 'Full description';


--
-- Name: COLUMN ancient_workings.the_geom; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ancient_workings.the_geom IS 'Geometry, usded in GIS';


--
-- Name: COLUMN ancient_workings.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ancient_workings.opid IS 'Operation identifier';


--
-- Name: COLUMN ancient_workings.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ancient_workings.numauto IS 'Automatic integer';


--
-- Name: COLUMN ancient_workings.datasource; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ancient_workings.datasource IS 'Datasource identifier, refers to lex_datasource';


SET search_path = pierre, pg_catalog;

--
-- Name: ancient_workings; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW ancient_workings AS
    SELECT ancient_workings.gid, ancient_workings.description, ancient_workings.the_geom, ancient_workings.opid, ancient_workings.numauto, ancient_workings.datasource FROM (public.ancient_workings JOIN public.operation_active ON ((ancient_workings.opid = operation_active.opid)));


SET search_path = public, pg_catalog;

--
-- Name: baselines; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE baselines (
    opid integer,
    id integer,
    location character varying,
    x1 numeric(10,3),
    y1 numeric(10,3),
    z1 numeric(10,3),
    x2 numeric(10,3),
    y2 numeric(10,3),
    z2 numeric(10,3),
    numauto integer NOT NULL,
    db_update_timestamp timestamp without time zone DEFAULT now(),
    username character varying DEFAULT "current_user"(),
    datasource integer
);


--
-- Name: TABLE baselines; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE baselines IS 'Baselines, for each prospect, defined as a theoritical line between two points';


--
-- Name: COLUMN baselines.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN baselines.opid IS 'Operation identifier';


--
-- Name: COLUMN baselines.id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN baselines.id IS 'Baseline identifier';


--
-- Name: COLUMN baselines.x1; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN baselines.x1 IS 'Baseline starting point x coordinate';


--
-- Name: COLUMN baselines.y1; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN baselines.y1 IS 'Baseline starting point y coordinate';


--
-- Name: COLUMN baselines.z1; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN baselines.z1 IS 'Baseline starting point z coordinate';


--
-- Name: COLUMN baselines.x2; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN baselines.x2 IS 'Baseline ending point x coordinate';


--
-- Name: COLUMN baselines.y2; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN baselines.y2 IS 'Baseline ending point y coordinate';


--
-- Name: COLUMN baselines.z2; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN baselines.z2 IS 'Baseline ending point z coordinate';


--
-- Name: COLUMN baselines.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN baselines.numauto IS 'Automatic integer primary key';


--
-- Name: COLUMN baselines.db_update_timestamp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN baselines.db_update_timestamp IS 'Current date and time stamp when data is loaded in table';


--
-- Name: COLUMN baselines.username; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN baselines.username IS 'User (role) which created data record';


--
-- Name: COLUMN baselines.datasource; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN baselines.datasource IS 'Datasource identifier, refers to lex_datasource';


SET search_path = pierre, pg_catalog;

--
-- Name: baselines; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW baselines AS
    SELECT baselines.opid, baselines.id, baselines.location, baselines.x1, baselines.y1, baselines.z1, baselines.x2, baselines.y2, baselines.z2, baselines.numauto, baselines.db_update_timestamp, baselines.username, baselines.datasource FROM (public.baselines JOIN public.operation_active ON ((baselines.opid = operation_active.opid)));


--
-- Name: dh_collars_points; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW dh_collars_points AS
    SELECT dh_collars.id, dh_collars.shid, dh_collars.location, dh_collars.profile, dh_collars.srid, dh_collars.x, dh_collars.y, dh_collars.z, dh_collars.azim_ng, dh_collars.azim_nm, dh_collars.dip_hz, dh_collars.dh_type, dh_collars.date_start, dh_collars.contractor, dh_collars.geologist, dh_collars.length, dh_collars.nb_samples, dh_collars.comments, dh_collars.completed, dh_collars.numauto, dh_collars.date_completed, dh_collars.opid, dh_collars.purpose, dh_collars.x_local, dh_collars.y_local, dh_collars.z_local, dh_collars.accusum, dh_collars.id_pject, dh_collars.x_pject, dh_collars.y_pject, dh_collars.z_pject, dh_collars.topo_survey_type, dh_collars.db_update_timestamp, dh_collars.username, dh_collars.datasource, public.geomfromewkt((((((((('SRID='::text || dh_collars.srid) || ';POINT('::text) || dh_collars.x) || ' '::text) || dh_collars.y) || ' '::text) || dh_collars.z) || ')'::text)) AS geomfromewkt FROM dh_collars;


--
-- Name: collars_selection; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW collars_selection AS
    SELECT dh_collars_points.id, dh_collars_points.shid, dh_collars_points.location, dh_collars_points.profile, dh_collars_points.srid, dh_collars_points.x, dh_collars_points.y, dh_collars_points.z, dh_collars_points.azim_ng, dh_collars_points.azim_nm, dh_collars_points.dip_hz, dh_collars_points.dh_type, dh_collars_points.date_start, dh_collars_points.contractor, dh_collars_points.geologist, dh_collars_points.length, dh_collars_points.nb_samples, dh_collars_points.comments, dh_collars_points.completed, dh_collars_points.numauto, dh_collars_points.date_completed, dh_collars_points.opid, dh_collars_points.purpose, dh_collars_points.x_local, dh_collars_points.y_local, dh_collars_points.z_local, dh_collars_points.accusum, dh_collars_points.id_pject, dh_collars_points.x_pject, dh_collars_points.y_pject, dh_collars_points.z_pject, dh_collars_points.topo_survey_type, dh_collars_points.db_update_timestamp, dh_collars_points.username, dh_collars_points.datasource, dh_collars_points.geomfromewkt FROM dh_collars_points WHERE ((dh_collars_points.id)::text = ANY ((ARRAY['DA08-650'::character varying, 'DA08-656'::character varying])::text[]));


--
-- Name: dh_collars_; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW dh_collars_ AS
    SELECT dh_collars.id, dh_collars.shid, dh_collars.location, dh_collars.profile, dh_collars.srid, dh_collars.x, dh_collars.y, dh_collars.z, dh_collars.azim_ng, dh_collars.azim_nm, dh_collars.dip_hz, dh_collars.dh_type, dh_collars.date_start, dh_collars.contractor, dh_collars.geologist, dh_collars.length, 0 AS len_destr, 0 AS len_pq, 0 AS len_hq, 0 AS len_nq, 0 AS len_bq, dh_collars.nb_samples, dh_collars.comments, dh_collars.completed, dh_collars.datasource, dh_collars.numauto, dh_collars.date_completed, dh_collars.opid, dh_collars.purpose, dh_collars.x_local, dh_collars.y_local, dh_collars.z_local FROM (dh_collars JOIN public.operation_active ON ((dh_collars.opid = operation_active.opid)));


--
-- Name: dh_collars_for_gpx; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW dh_collars_for_gpx AS
    SELECT dh_collars_points.id AS name FROM dh_collars_points WHERE (NOT dh_collars_points.completed);


--
-- Name: dh_collars_lengths; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE dh_collars_lengths (
    opid integer,
    id character varying(20),
    len_destr numeric(10,2),
    len_pq numeric(10,2),
    len_hq numeric(10,2),
    len_nq numeric(10,2),
    len_bq numeric(10,2),
    numauto integer NOT NULL
);


--
-- Name: COLUMN dh_collars_lengths.len_destr; Type: COMMENT; Schema: pierre; Owner: -
--

COMMENT ON COLUMN dh_collars_lengths.len_destr IS 'Destructive (percussion or rotary drilling) length (m)';


--
-- Name: COLUMN dh_collars_lengths.len_pq; Type: COMMENT; Schema: pierre; Owner: -
--

COMMENT ON COLUMN dh_collars_lengths.len_pq IS 'Core PQ length (m)';


--
-- Name: COLUMN dh_collars_lengths.len_hq; Type: COMMENT; Schema: pierre; Owner: -
--

COMMENT ON COLUMN dh_collars_lengths.len_hq IS 'Core HQ length (m)';


--
-- Name: COLUMN dh_collars_lengths.len_nq; Type: COMMENT; Schema: pierre; Owner: -
--

COMMENT ON COLUMN dh_collars_lengths.len_nq IS 'Core NQ length (m)';


--
-- Name: COLUMN dh_collars_lengths.len_bq; Type: COMMENT; Schema: pierre; Owner: -
--

COMMENT ON COLUMN dh_collars_lengths.len_bq IS 'Core BQ length (m)';


--
-- Name: dh_collars_lengths_numauto_seq; Type: SEQUENCE; Schema: pierre; Owner: -
--

CREATE SEQUENCE dh_collars_lengths_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: dh_collars_lengths_numauto_seq; Type: SEQUENCE OWNED BY; Schema: pierre; Owner: -
--

ALTER SEQUENCE dh_collars_lengths_numauto_seq OWNED BY dh_collars_lengths.numauto;


--
-- Name: dh_collars_okz; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE dh_collars_okz (
    id character varying(20),
    shid character varying(10),
    location character varying,
    profile character varying(10),
    srid integer,
    x numeric(12,3),
    y numeric(12,3),
    z numeric(12,3),
    azim_ng numeric(10,2),
    azim_nm numeric(10,2),
    dip_hz numeric(10,2),
    dh_type character varying(10),
    date_start date,
    contractor character varying(20),
    geologist character varying,
    length numeric(10,2),
    len_destr numeric(10,2),
    len_pq numeric(10,2),
    len_hq numeric(10,2),
    len_nq numeric(10,2),
    len_bq numeric(10,2),
    nb_samples integer,
    comments character varying,
    completed boolean,
    datasource character varying,
    numauto integer,
    date_completed date,
    opid integer,
    purpose character varying,
    x_local numeric(12,3),
    y_local numeric(12,3),
    z_local numeric(12,3),
    accusum numeric(10,2),
    id_pject character varying,
    x_pject numeric(10,3),
    y_pject numeric(10,3),
    z_pject numeric(10,3)
);


SET search_path = public, pg_catalog;

--
-- Name: lab_ana_results; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE lab_ana_results (
    labname character varying(10),
    jobno character varying(20),
    orderno character varying(40),
    sample_id character varying(40),
    scheme character varying(20),
    analyte character varying(20),
    value character varying(20),
    db_update_timestamp timestamp without time zone DEFAULT now(),
    value_num numeric,
    opid integer,
    batch_id integer,
    sampletype character varying,
    unit character varying,
    datasource integer,
    numauto integer NOT NULL,
    sample_id_lab character varying,
    valid boolean DEFAULT true,
    detlim numeric,
    uplim numeric,
    username character varying DEFAULT "current_user"()
);


--
-- Name: TABLE lab_ana_results; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE lab_ana_results IS 'Laboratory results table, after laboratory instructions, related to LIMS system';


--
-- Name: COLUMN lab_ana_results.labname; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_results.labname IS 'Analytical laboratory';


--
-- Name: COLUMN lab_ana_results.jobno; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_results.jobno IS 'jcsa.pro_job,           --> Intertek JobNo (VarChar(20))';


--
-- Name: COLUMN lab_ana_results.orderno; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_results.orderno IS 'pj.orderno,              --> Client Order No (VarChar(40))';


--
-- Name: COLUMN lab_ana_results.sample_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_results.sample_id IS 'Sample Identifier';


--
-- Name: COLUMN lab_ana_results.scheme; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_results.scheme IS 'pjcsa.sch_code,          --> Scheme Code (Intertek Internal Code - which probably reported to Client as well) (VarChar(20))';


--
-- Name: COLUMN lab_ana_results.analyte; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_results.analyte IS 'pjcsa.analytecode,       --> Analyte Code (Intertek Internal Code - which probably reported to Client as well) (VarChar(20))';


--
-- Name: COLUMN lab_ana_results.value; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_results.value IS 'pjcsa.formattedvalue     --> Reported Value (VarChar(20))';


--
-- Name: COLUMN lab_ana_results.db_update_timestamp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_results.db_update_timestamp IS 'Current date and time stamp when data is loaded in table';


--
-- Name: COLUMN lab_ana_results.value_num; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_results.value_num IS 'Reported value, converted to numeric. IS becomes -999, LNR -9999, < -, > nothing';


--
-- Name: COLUMN lab_ana_results.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_results.opid IS 'Operation identifier';


--
-- Name: COLUMN lab_ana_results.batch_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_results.batch_id IS 'Batch identifier';


--
-- Name: COLUMN lab_ana_results.sampletype; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_results.sampletype IS 'Sample type: DUP: duplicate, STD: standard, REP: repeat, etc.';


--
-- Name: COLUMN lab_ana_results.unit; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_results.unit IS 'Unit: PPM, PPB, KG, G, %, etc.';


--
-- Name: COLUMN lab_ana_results.datasource; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_results.datasource IS 'Datasource identifier, refers to lex_datasource';


--
-- Name: COLUMN lab_ana_results.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_results.numauto IS 'Automatic integer primary key';


--
-- Name: COLUMN lab_ana_results.sample_id_lab; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_results.sample_id_lab IS 'pjc.sampleident,         --> Client SampleID (VarChar(40)) => sometimes different from REAL sample_id';


--
-- Name: COLUMN lab_ana_results.valid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_results.valid IS 'Analysis is considered as valid or ignored (if QAQC failed, for instance)';


--
-- Name: COLUMN lab_ana_results.detlim; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_results.detlim IS 'Lower detection limit';


--
-- Name: COLUMN lab_ana_results.uplim; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_results.uplim IS 'Upper limit';


--
-- Name: COLUMN lab_ana_results.username; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_results.username IS 'User (role) which created data record';


SET search_path = pierre, pg_catalog;

--
-- Name: lab_ana_results; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW lab_ana_results AS
    SELECT lab_ana_results.labname, lab_ana_results.jobno, lab_ana_results.orderno, lab_ana_results.sample_id, lab_ana_results.scheme, lab_ana_results.analyte, lab_ana_results.value, lab_ana_results.db_update_timestamp, lab_ana_results.value_num, lab_ana_results.opid, lab_ana_results.batch_id, lab_ana_results.sampletype, lab_ana_results.unit, lab_ana_results.datasource, lab_ana_results.numauto, lab_ana_results.sample_id_lab, lab_ana_results.valid, lab_ana_results.detlim, lab_ana_results.uplim, lab_ana_results.username FROM (public.lab_ana_results JOIN public.operation_active ON ((lab_ana_results.opid = operation_active.opid)));


--
-- Name: dh_collars_points_last_ana_results; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW dh_collars_points_last_ana_results AS
    SELECT dh_collars_points.id, dh_collars_points.shid, dh_collars_points.location, dh_collars_points.profile, dh_collars_points.srid, dh_collars_points.x, dh_collars_points.y, dh_collars_points.z, dh_collars_points.azim_ng, dh_collars_points.azim_nm, dh_collars_points.dip_hz, dh_collars_points.dh_type, dh_collars_points.date_start, dh_collars_points.contractor, dh_collars_points.geologist, dh_collars_points.length, dh_collars_points.nb_samples, dh_collars_points.comments, dh_collars_points.completed, dh_collars_points.numauto, dh_collars_points.date_completed, dh_collars_points.opid, dh_collars_points.purpose, dh_collars_points.x_local, dh_collars_points.y_local, dh_collars_points.z_local, dh_collars_points.accusum, dh_collars_points.id_pject, dh_collars_points.x_pject, dh_collars_points.y_pject, dh_collars_points.z_pject, dh_collars_points.topo_survey_type, dh_collars_points.db_update_timestamp, dh_collars_points.username, dh_collars_points.datasource, dh_collars_points.geomfromewkt FROM dh_collars_points WHERE ((dh_collars_points.id)::text IN (SELECT DISTINCT dh_sampling_grades.id FROM dh_sampling_grades WHERE ((dh_sampling_grades.sample_id)::text IN (SELECT lab_ana_results.sample_id FROM lab_ana_results WHERE (lab_ana_results.datasource = (SELECT max(lab_ana_results.datasource) AS last_datasource FROM lab_ana_results)))))) ORDER BY dh_collars_points.id;


--
-- Name: dh_collars_points_marrec; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW dh_collars_points_marrec AS
    SELECT dh_collars.id, dh_collars.shid, dh_collars.location, dh_collars.profile, dh_collars.srid, dh_collars.x, dh_collars.y, dh_collars.z, dh_collars.azim_ng, dh_collars.azim_nm, dh_collars.dip_hz, dh_collars.dh_type, dh_collars.date_start, dh_collars.contractor, dh_collars.geologist, dh_collars.length, dh_collars.nb_samples, dh_collars.comments, dh_collars.completed, dh_collars.numauto, dh_collars.date_completed, dh_collars.opid, dh_collars.purpose, dh_collars.x_local, dh_collars.y_local, dh_collars.z_local, dh_collars.accusum, dh_collars.id_pject, dh_collars.x_pject, dh_collars.y_pject, dh_collars.z_pject, dh_collars.topo_survey_type, dh_collars.db_update_timestamp, dh_collars.username, dh_collars.datasource, public.geomfromewkt((((('POINT('::text || dh_collars.x_local) || ' '::text) || dh_collars.y_local) || ' )'::text)) AS geomfromewkt FROM dh_collars WHERE ((dh_collars.x_local IS NOT NULL) AND (dh_collars.y_local IS NOT NULL));


SET search_path = public, pg_catalog;

--
-- Name: dh_core_boxes; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE dh_core_boxes (
    id character varying(20),
    depfrom numeric(10,2),
    depto numeric(10,2),
    box_number integer,
    datasource integer,
    opid integer,
    numauto integer NOT NULL,
    db_update_timestamp timestamp without time zone DEFAULT now(),
    username character varying DEFAULT "current_user"()
);


--
-- Name: TABLE dh_core_boxes; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE dh_core_boxes IS 'Core drill holes boxes';


--
-- Name: COLUMN dh_core_boxes.id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_core_boxes.id IS 'Identifier, refers to dh_collars';


--
-- Name: COLUMN dh_core_boxes.depfrom; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_core_boxes.depfrom IS 'Core box contents beginning depth';


--
-- Name: COLUMN dh_core_boxes.depto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_core_boxes.depto IS 'Core box contents ending depth';


--
-- Name: COLUMN dh_core_boxes.box_number; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_core_boxes.box_number IS 'Core box number';


--
-- Name: COLUMN dh_core_boxes.datasource; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_core_boxes.datasource IS 'Datasource identifier, refers to lex_datasource';


--
-- Name: COLUMN dh_core_boxes.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_core_boxes.opid IS 'Operation identifier';


--
-- Name: COLUMN dh_core_boxes.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_core_boxes.numauto IS 'Automatic integer primary key';


--
-- Name: COLUMN dh_core_boxes.db_update_timestamp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_core_boxes.db_update_timestamp IS 'Current date and time stamp when data is loaded in table';


--
-- Name: COLUMN dh_core_boxes.username; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_core_boxes.username IS 'User (role) which created data record';


SET search_path = pierre, pg_catalog;

--
-- Name: dh_core_boxes; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW dh_core_boxes AS
    SELECT dh_core_boxes.id, dh_core_boxes.depfrom, dh_core_boxes.depto, dh_core_boxes.box_number, dh_core_boxes.datasource, dh_core_boxes.opid, dh_core_boxes.numauto, dh_core_boxes.db_update_timestamp, dh_core_boxes.username FROM (public.dh_core_boxes JOIN public.operation_active ON ((dh_core_boxes.opid = operation_active.opid)));


SET search_path = public, pg_catalog;

--
-- Name: dh_density; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE dh_density (
    id character varying(20),
    depfrom numeric(10,2),
    depto numeric(10,2),
    density numeric(10,2),
    opid integer,
    density_humid numeric,
    moisture numeric,
    method character varying,
    numauto integer NOT NULL,
    db_update_timestamp timestamp without time zone DEFAULT now(),
    username character varying DEFAULT "current_user"(),
    datasource integer
);


--
-- Name: TABLE dh_density; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE dh_density IS 'Density measurements along drill holes or trenches';


--
-- Name: COLUMN dh_density.id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_density.id IS 'Identifier, refers to dh_collars';


--
-- Name: COLUMN dh_density.depfrom; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_density.depfrom IS 'Interval beginning depth: if not empty, density measured along an interval; otherwise, density measured on a point';


--
-- Name: COLUMN dh_density.depto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_density.depto IS 'Interval ending depth: if depfrom is empty, depth of ponctual density measurement';


--
-- Name: COLUMN dh_density.density; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_density.density IS 'Density, unitless, or considered as kg/l, or t/m3';


--
-- Name: COLUMN dh_density.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_density.opid IS 'Operation identifier';


--
-- Name: COLUMN dh_density.density_humid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_density.density_humid IS 'Density, unitless, or considered as kg/l, or t/m3, determined on humid sample';


--
-- Name: COLUMN dh_density.moisture; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_density.moisture IS 'Moisture contents';


--
-- Name: COLUMN dh_density.method; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_density.method IS 'Procedure used to determine specific gravity';


--
-- Name: COLUMN dh_density.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_density.numauto IS 'Automatic integer primary key';


--
-- Name: COLUMN dh_density.db_update_timestamp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_density.db_update_timestamp IS 'Current date and time stamp when data is loaded in table';


--
-- Name: COLUMN dh_density.username; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_density.username IS 'User (role) which created data record';


--
-- Name: COLUMN dh_density.datasource; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_density.datasource IS 'Datasource identifier, refers to lex_datasource';


SET search_path = pierre, pg_catalog;

--
-- Name: dh_density; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW dh_density AS
    SELECT dh_density.id, dh_density.depfrom, dh_density.depto, dh_density.density, dh_density.opid, dh_density.density_humid, dh_density.moisture, dh_density.method, dh_density.numauto, dh_density.db_update_timestamp, dh_density.username, dh_density.datasource FROM (public.dh_density JOIN public.operation_active ON ((dh_density.opid = operation_active.opid)));


SET search_path = public, pg_catalog;

--
-- Name: dh_devia; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE dh_devia (
    id character varying(20),
    depto numeric(10,2),
    azim_nm numeric(10,2),
    dip_hz numeric(10,2),
    temperature numeric(10,2),
    magnetic numeric(10,2),
    date date,
    roll numeric(10,2),
    "time" integer,
    comments character varying,
    opid integer,
    numauto integer NOT NULL,
    valid boolean DEFAULT true,
    azim_ng numeric(10,2),
    datasource integer,
    device character varying,
    db_update_timestamp timestamp without time zone DEFAULT now(),
    username character varying DEFAULT "current_user"()
);


--
-- Name: TABLE dh_devia; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE dh_devia IS 'Drill holes or trenches deviations measurements';


--
-- Name: COLUMN dh_devia.id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_devia.id IS 'Drill hole identification related to the collars table';


--
-- Name: COLUMN dh_devia.depto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_devia.depto IS 'Depth of deviation measurement';


--
-- Name: COLUMN dh_devia.azim_nm; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_devia.azim_nm IS 'Hole azimuth (°) relative to magnetic North (?)';


--
-- Name: COLUMN dh_devia.dip_hz; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_devia.dip_hz IS 'Drill hole dip relative to horizontal (°), positive down';


--
-- Name: COLUMN dh_devia.temperature; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_devia.temperature IS 'temperature';


--
-- Name: COLUMN dh_devia.magnetic; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_devia.magnetic IS 'Magnetic field intensity measurement';


--
-- Name: COLUMN dh_devia.date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_devia.date IS 'Date of deviation measurement';


--
-- Name: COLUMN dh_devia.roll; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_devia.roll IS 'Roll angle';


--
-- Name: COLUMN dh_devia."time"; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_devia."time" IS 'Time of deviation measurement';


--
-- Name: COLUMN dh_devia.comments; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_devia.comments IS 'Various comments; concerning measurements done with Reflex Gyro, all parameters are concatened as a json-like structure';


--
-- Name: COLUMN dh_devia.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_devia.opid IS 'Operation identifier';


--
-- Name: COLUMN dh_devia.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_devia.numauto IS 'Automatic integer primary key';


--
-- Name: COLUMN dh_devia.valid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_devia.valid IS 'True when a deviation measurement is usable; queries should take into account only valid records';


--
-- Name: COLUMN dh_devia.azim_ng; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_devia.azim_ng IS 'Hole azimuth (°) relative to geographic North';


--
-- Name: COLUMN dh_devia.datasource; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_devia.datasource IS 'Datasource identifier, refers to lex_datasource';


--
-- Name: COLUMN dh_devia.device; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_devia.device IS 'Device used for deviation measurement';


--
-- Name: COLUMN dh_devia.db_update_timestamp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_devia.db_update_timestamp IS 'Current date and time stamp when data is loaded in table';


--
-- Name: COLUMN dh_devia.username; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_devia.username IS 'User (role) which created data record';


SET search_path = pierre, pg_catalog;

--
-- Name: dh_devia; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW dh_devia AS
    SELECT dh_devia.id, dh_devia.depto, dh_devia.azim_nm, dh_devia.dip_hz, dh_devia.temperature, dh_devia.magnetic, dh_devia.date, dh_devia.roll, dh_devia."time", dh_devia.comments, dh_devia.opid, dh_devia.numauto, dh_devia.valid, dh_devia.azim_ng, dh_devia.datasource, dh_devia.device, dh_devia.db_update_timestamp, dh_devia.username FROM (public.dh_devia JOIN public.operation_active ON ((dh_devia.opid = operation_active.opid)));


--
-- Name: dh_devia_okz; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE dh_devia_okz (
    id character varying(20),
    depto numeric(10,2),
    azim_nm numeric(10,2),
    dip_hz numeric(10,2),
    temperature numeric(10,2),
    magnetic numeric(10,2),
    date date,
    roll numeric(10,2),
    "time" integer,
    comments character varying(254),
    opid integer,
    numauto integer,
    valid boolean,
    azim_ng numeric(10,2),
    datasource integer,
    device character varying,
    survey_name character varying,
    ghs_deg numeric,
    gtf_deg numeric,
    dls_m numeric,
    easting_m numeric,
    northing_m numeric,
    elevation_m numeric,
    updown_m numeric,
    leftright_m numeric,
    shortfall_m numeric,
    gravfield_g numeric,
    drift_check character varying,
    accumulated_roll_deg numeric,
    accumulated_roll_revolutions numeric,
    roll_to_station_deg numeric,
    roll_to_station_revolutions numeric,
    time_to_station_s numeric,
    battery_v numeric,
    station_acc_g numeric,
    station_rate_deg_s numeric,
    station_quality_pc numeric,
    max_rate_deg_s numeric,
    motion_quality_pc numeric
);


SET search_path = public, pg_catalog;

--
-- Name: dh_followup; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE dh_followup (
    opid integer,
    id character varying,
    devia character varying(3),
    quick_log character varying(3),
    log_tech character varying(3),
    log_lith character varying(3),
    sampling character varying(3),
    results character varying(3),
    relogging character varying(3),
    beacon character varying(3),
    in_gdm character varying(1),
    db_update_timestamp timestamp without time zone DEFAULT now(),
    username character varying DEFAULT "current_user"(),
    numauto integer NOT NULL
);


--
-- Name: TABLE dh_followup; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE dh_followup IS 'Simple table for daily drill holes followup';


--
-- Name: COLUMN dh_followup.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_followup.opid IS 'Operation identifier';


--
-- Name: COLUMN dh_followup.id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_followup.id IS 'Identifier, refers to dh_collars';


--
-- Name: COLUMN dh_followup.devia; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_followup.devia IS 'Deviation survey (x: done; xx: done, data entered; xxx: data verified)';


--
-- Name: COLUMN dh_followup.quick_log; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_followup.quick_log IS 'Quick geological log, typically done on hole finish, for an A4 log plot (x: done; xx: done, data entered; xxx: data verified)';


--
-- Name: COLUMN dh_followup.log_tech; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_followup.log_tech IS 'Core fitting, core measurement, meters marking, RQD, fracture counts, etc. (x: done; xx: done, data entered; xxx: data verified)';


--
-- Name: COLUMN dh_followup.log_lith; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_followup.log_lith IS 'Full geological log (x: done; xx: done, data entered; xxx: data verified)';


--
-- Name: COLUMN dh_followup.sampling; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_followup.sampling IS 'Hole sampling (x: done; xx: done, data entered; xxx: data verified)';


--
-- Name: COLUMN dh_followup.results; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_followup.results IS 'Assay results back from laboratory (x: received; xx: entered; xxx: verified)';


--
-- Name: COLUMN dh_followup.relogging; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_followup.relogging IS 'Geological log done afterwards on mineralised intervals (x: done; xx: done, data entered; xxx: data verified)';


--
-- Name: COLUMN dh_followup.beacon; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_followup.beacon IS 'Beacon or any other permanent hole marker on field (PVC pipe, concrete beacon, cement, etc.) (x: done)';


--
-- Name: COLUMN dh_followup.in_gdm; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_followup.in_gdm IS 'Data exported to GDM; implicitely: data clean, checked by GDM procedures (x: done)';


--
-- Name: COLUMN dh_followup.db_update_timestamp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_followup.db_update_timestamp IS 'Current date and time stamp when data is loaded in table';


--
-- Name: COLUMN dh_followup.username; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_followup.username IS 'User (role) which created data record';


--
-- Name: COLUMN dh_followup.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_followup.numauto IS 'Automatic integer primary key';


SET search_path = pierre, pg_catalog;

--
-- Name: dh_followup; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW dh_followup AS
    SELECT dh_followup.opid, dh_followup.id, dh_followup.devia, dh_followup.quick_log, dh_followup.log_tech, dh_followup.log_lith, dh_followup.sampling, dh_followup.results, dh_followup.relogging, dh_followup.beacon, dh_followup.in_gdm, dh_followup.db_update_timestamp, dh_followup.username, dh_followup.numauto FROM (public.dh_followup JOIN public.operation_active ON ((dh_followup.opid = operation_active.opid)));


--
-- Name: dh_litho_hao_okzou; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE dh_litho_hao_okzou (
    id character varying(20),
    depfrom numeric(10,2),
    depto numeric(10,2),
    description character varying,
    code1 character varying(4),
    code2 character varying(4),
    code3 character varying(4),
    code4 character varying(4),
    value1 integer,
    value2 integer,
    value3 integer,
    value4 integer,
    opid integer,
    colour character varying,
    numauto integer,
    datasource integer,
    description1 character varying,
    description2 character varying,
    value5 integer,
    value6 integer,
    db_update_timestamp timestamp without time zone,
    username character varying
);


--
-- Name: dh_litho_okz; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE dh_litho_okz (
    id character varying(20),
    depfrom numeric(10,2),
    depto numeric(10,2),
    description character varying,
    code1 character varying(4),
    code2 character varying(4),
    code3 character varying(4),
    code4 character varying(4),
    value1 integer,
    value2 integer,
    value3 integer,
    value4 integer,
    opid integer,
    litho_simple character varying,
    colour character varying,
    numauto integer,
    datasource integer,
    description1 character varying,
    description2 character varying,
    value5 integer,
    value6 integer
);


--
-- Name: dh_litho_sorti_ft45_; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE dh_litho_sorti_ft45_ (
    id character varying(20),
    depfrom numeric(10,2),
    depto numeric(10,2),
    description character varying,
    code1 character varying(4),
    code2 character varying(4),
    code3 character varying(4),
    code4 character varying(4),
    value1 integer,
    value2 integer,
    value3 integer,
    value4 integer,
    opid integer,
    colour character varying,
    numauto integer,
    datasource integer,
    description1 character varying,
    description2 character varying,
    value5 integer,
    value6 integer,
    db_update_timestamp timestamp without time zone,
    username character varying
);


SET search_path = public, pg_catalog;

--
-- Name: dh_mineralised_intervals; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE dh_mineralised_intervals (
    id character varying(20),
    depfrom numeric(10,2),
    depto numeric(10,2),
    mine integer DEFAULT 1,
    avau numeric(10,2),
    stva character varying(150),
    accu numeric(10,2),
    recu numeric(10,2),
    dens numeric(10,2),
    numauto integer NOT NULL,
    comments character varying(100),
    opid integer,
    db_update_timestamp timestamp without time zone DEFAULT now(),
    username character varying DEFAULT "current_user"(),
    datasource integer
);


--
-- Name: TABLE dh_mineralised_intervals; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE dh_mineralised_intervals IS 'Drill holes mineralised intercepts: stretch values over mineralised intervals, along drill holes or trenches';


--
-- Name: COLUMN dh_mineralised_intervals.id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_mineralised_intervals.id IS 'Full identifier for borehole or trench';


--
-- Name: COLUMN dh_mineralised_intervals.depfrom; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_mineralised_intervals.depfrom IS 'Mineralised interval starting depth';


--
-- Name: COLUMN dh_mineralised_intervals.depto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_mineralised_intervals.depto IS 'Mineralised interval ending depth';


--
-- Name: COLUMN dh_mineralised_intervals.mine; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_mineralised_intervals.mine IS 'Take-out interval class: 1=normal interval, 2=high-grade interval ';


--
-- Name: COLUMN dh_mineralised_intervals.avau; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_mineralised_intervals.avau IS 'Average grade (g/t)';


--
-- Name: COLUMN dh_mineralised_intervals.stva; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_mineralised_intervals.stva IS 'Stretch value, X m at Y g/t';


--
-- Name: COLUMN dh_mineralised_intervals.accu; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_mineralised_intervals.accu IS 'Accumulation in m.g/t over mineralised interval';


--
-- Name: COLUMN dh_mineralised_intervals.recu; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_mineralised_intervals.recu IS 'recovery';


--
-- Name: COLUMN dh_mineralised_intervals.dens; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_mineralised_intervals.dens IS 'density';


--
-- Name: COLUMN dh_mineralised_intervals.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_mineralised_intervals.numauto IS 'Automatic integer primary key';


--
-- Name: COLUMN dh_mineralised_intervals.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_mineralised_intervals.opid IS 'Operation identifier';


--
-- Name: COLUMN dh_mineralised_intervals.db_update_timestamp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_mineralised_intervals.db_update_timestamp IS 'Current date and time stamp when data is loaded in table';


--
-- Name: COLUMN dh_mineralised_intervals.username; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_mineralised_intervals.username IS 'User (role) which created data record';


--
-- Name: COLUMN dh_mineralised_intervals.datasource; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_mineralised_intervals.datasource IS 'Datasource identifier, refers to lex_datasource';


SET search_path = pierre, pg_catalog;

--
-- Name: dh_mineralised_intervals; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW dh_mineralised_intervals AS
    SELECT dh_mineralised_intervals.id, dh_mineralised_intervals.depfrom, dh_mineralised_intervals.depto, dh_mineralised_intervals.mine, dh_mineralised_intervals.avau, dh_mineralised_intervals.stva, dh_mineralised_intervals.accu, dh_mineralised_intervals.recu, dh_mineralised_intervals.dens, dh_mineralised_intervals.numauto, dh_mineralised_intervals.comments, dh_mineralised_intervals.opid, dh_mineralised_intervals.db_update_timestamp, dh_mineralised_intervals.username, dh_mineralised_intervals.datasource FROM (public.dh_mineralised_intervals JOIN public.operation_active ON ((dh_mineralised_intervals.opid = operation_active.opid)));


--
-- Name: dh_mineralised_intervals0_traces_3d; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW dh_mineralised_intervals0_traces_3d AS
    SELECT tmp.opid, tmp.id, tmp.srid, tmp.x, tmp.y, tmp.z, tmp.azim_ng, tmp.dip_hz, tmp.depfrom, tmp.depto, tmp.mine, tmp.avau, tmp.stva, tmp.accu, tmp.mineralisation_stretch_value_label, tmp.numauto, tmp.x1, tmp.y1, tmp.z1, tmp.x2, tmp.y2, tmp.z2, public.geomfromewkt((((((((((((((('SRID='::text || tmp.srid) || ';LINESTRING ('::text) || tmp.x1) || ' '::text) || tmp.y1) || ' '::text) || tmp.z1) || ', '::text) || tmp.x2) || ' '::text) || tmp.y2) || ' '::text) || tmp.z2) || ')'::text)) AS geomfromewkt FROM (SELECT dh_mineralised_intervals.opid, dh_mineralised_intervals.id, dh_collars.srid, dh_collars.x, dh_collars.y, dh_collars.z, dh_collars.azim_ng, dh_collars.dip_hz, dh_mineralised_intervals.depfrom, dh_mineralised_intervals.depto, dh_mineralised_intervals.mine, dh_mineralised_intervals.avau, dh_mineralised_intervals.stva, dh_mineralised_intervals.accu, (((((((dh_collars.id)::text || ': '::text) || replace(to_char(dh_mineralised_intervals.depfrom, 'FM99990.99'::text), '.'::text, ''::text)) || '-'::text) || replace(to_char(dh_mineralised_intervals.depto, 'FM99990.99'::text), '.'::text, ''::text)) || 'm => '::text) || (dh_mineralised_intervals.stva)::text) AS mineralisation_stretch_value_label, dh_mineralised_intervals.numauto, ((dh_collars.x)::double precision + (((dh_mineralised_intervals.depfrom)::double precision * cos((((dh_collars.dip_hz / (180)::numeric))::double precision * pi()))) * sin((((dh_collars.azim_ng / (180)::numeric))::double precision * pi())))) AS x1, ((dh_collars.y)::double precision + (((dh_mineralised_intervals.depfrom)::double precision * cos((((dh_collars.dip_hz / (180)::numeric))::double precision * pi()))) * cos((((dh_collars.azim_ng / (180)::numeric))::double precision * pi())))) AS y1, ((dh_collars.z)::double precision - ((dh_mineralised_intervals.depfrom)::double precision * sin((((dh_collars.dip_hz / (180)::numeric))::double precision * pi())))) AS z1, ((dh_collars.x)::double precision + (((dh_mineralised_intervals.depto)::double precision * cos((((dh_collars.dip_hz / (180)::numeric))::double precision * pi()))) * sin((((dh_collars.azim_ng / (180)::numeric))::double precision * pi())))) AS x2, ((dh_collars.y)::double precision + (((dh_mineralised_intervals.depto)::double precision * cos((((dh_collars.dip_hz / (180)::numeric))::double precision * pi()))) * cos((((dh_collars.azim_ng / (180)::numeric))::double precision * pi())))) AS y2, ((dh_collars.z)::double precision - ((dh_mineralised_intervals.depto)::double precision * sin((((dh_collars.dip_hz / (180)::numeric))::double precision * pi())))) AS z2 FROM (dh_mineralised_intervals JOIN dh_collars ON (((dh_mineralised_intervals.opid = dh_collars.opid) AND ((dh_mineralised_intervals.id)::text = (dh_collars.id)::text)))) WHERE (dh_mineralised_intervals.mine = 0)) tmp ORDER BY tmp.id, tmp.depfrom, tmp.depto, tmp.mine;


--
-- Name: dh_nb_samples; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE dh_nb_samples (
    opid integer,
    id character varying(20),
    nb_samples integer
);


--
-- Name: COLUMN dh_nb_samples.nb_samples; Type: COMMENT; Schema: pierre; Owner: -
--

COMMENT ON COLUMN dh_nb_samples.nb_samples IS 'Number of samples';


--
-- Name: dh_photos; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE dh_photos (
    opid integer,
    pho_id character varying,
    file character varying,
    author character varying,
    datasource integer
);


SET search_path = public, pg_catalog;

--
-- Name: dh_quicklog; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE dh_quicklog (
    opid integer,
    id text,
    depfrom numeric(10,2),
    depto numeric(10,2),
    description character varying,
    oxid character varying(4),
    alt smallint,
    def smallint,
    numauto integer NOT NULL,
    db_update_timestamp timestamp without time zone DEFAULT now(),
    username character varying DEFAULT "current_user"(),
    datasource integer
);


--
-- Name: TABLE dh_quicklog; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE dh_quicklog IS 'Quick geological log, typically done on hole finish, for an A4 log plot';


--
-- Name: COLUMN dh_quicklog.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_quicklog.opid IS 'Operation identifier';


--
-- Name: COLUMN dh_quicklog.id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_quicklog.id IS 'Full identifier for borehole or trench';


--
-- Name: COLUMN dh_quicklog.depfrom; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_quicklog.depfrom IS 'Interval beginning depth';


--
-- Name: COLUMN dh_quicklog.depto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_quicklog.depto IS 'Interval ending depth';


--
-- Name: COLUMN dh_quicklog.description; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_quicklog.description IS 'Quick geological description, logging wide intervals and/or only representative portions';


--
-- Name: COLUMN dh_quicklog.oxid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_quicklog.oxid IS 'Oxidation state: O, PO, U';


--
-- Name: COLUMN dh_quicklog.alt; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_quicklog.alt IS 'Alteration intensity: 0: none, 1: weak, 2: moderate, 3: strong';


--
-- Name: COLUMN dh_quicklog.def; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_quicklog.def IS 'Deformation intensity: 0: none, 1: weak, 2: moderate, 3: strong';


--
-- Name: COLUMN dh_quicklog.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_quicklog.numauto IS 'Automatic integer primary key';


--
-- Name: COLUMN dh_quicklog.db_update_timestamp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_quicklog.db_update_timestamp IS 'Current date and time stamp when data is loaded in table';


--
-- Name: COLUMN dh_quicklog.username; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_quicklog.username IS 'User (role) which created data record';


--
-- Name: COLUMN dh_quicklog.datasource; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_quicklog.datasource IS 'Datasource identifier, refers to lex_datasource';


SET search_path = pierre, pg_catalog;

--
-- Name: dh_quicklog; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW dh_quicklog AS
    SELECT dh_quicklog.opid, dh_quicklog.id, dh_quicklog.depfrom, dh_quicklog.depto, dh_quicklog.description, dh_quicklog.oxid, dh_quicklog.alt, dh_quicklog.def, dh_quicklog.numauto, dh_quicklog.db_update_timestamp, dh_quicklog.username, dh_quicklog.datasource FROM (public.dh_quicklog JOIN public.operation_active ON ((dh_quicklog.opid = operation_active.opid)));


--
-- Name: dh_samples_submission; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE dh_samples_submission (
    opid integer,
    id character varying(4),
    sampfrom smallint,
    sampto smallint,
    nb smallint,
    mspu_sub date,
    sgs_subm date,
    final_interm character varying(1),
    results character varying(15)
);


SET search_path = public, pg_catalog;

--
-- Name: lab_ana_columns_definition; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE lab_ana_columns_definition (
    analyte character varying(20),
    unit character varying,
    scheme character varying(20),
    colid text,
    opid integer,
    db_update_timestamp timestamp without time zone DEFAULT now(),
    username character varying DEFAULT "current_user"(),
    numauto integer NOT NULL
);


--
-- Name: TABLE lab_ana_columns_definition; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE lab_ana_columns_definition IS 'Definition of columns; obsolete';


--
-- Name: COLUMN lab_ana_columns_definition.analyte; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_columns_definition.analyte IS 'Analyte';


--
-- Name: COLUMN lab_ana_columns_definition.unit; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_columns_definition.unit IS 'Unit (PPM, PPB, etc.)';


--
-- Name: COLUMN lab_ana_columns_definition.colid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_columns_definition.colid IS 'Column identifier, used for groupings in cross-tab queries';


--
-- Name: COLUMN lab_ana_columns_definition.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_columns_definition.opid IS 'Operation identifier';


--
-- Name: COLUMN lab_ana_columns_definition.db_update_timestamp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_columns_definition.db_update_timestamp IS 'Current date and time stamp when data is loaded in table';


--
-- Name: COLUMN lab_ana_columns_definition.username; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_columns_definition.username IS 'User (role) which created data record';


--
-- Name: COLUMN lab_ana_columns_definition.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_columns_definition.numauto IS 'Automatic integer primary key';


SET search_path = pierre, pg_catalog;

--
-- Name: lab_ana_columns_definition; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW lab_ana_columns_definition AS
    SELECT lab_ana_columns_definition.analyte, lab_ana_columns_definition.unit, lab_ana_columns_definition.scheme, lab_ana_columns_definition.colid, lab_ana_columns_definition.opid, lab_ana_columns_definition.db_update_timestamp, lab_ana_columns_definition.username, lab_ana_columns_definition.numauto FROM (public.lab_ana_columns_definition JOIN public.operation_active ON ((lab_ana_columns_definition.opid = operation_active.opid)));


--
-- Name: tmp_lab_ana_results; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW tmp_lab_ana_results AS
    SELECT lab_ana_results.opid, lab_ana_results.sample_id, lab_ana_columns_definition.colid, CASE WHEN (lab_ana_results.value_num < (0)::numeric) THEN (0)::numeric ELSE lab_ana_results.value_num END AS value_num FROM (lab_ana_results JOIN lab_ana_columns_definition ON (((((lab_ana_results.opid = lab_ana_columns_definition.opid) AND ((lab_ana_results.analyte)::text = (lab_ana_columns_definition.analyte)::text)) AND ((lab_ana_results.scheme)::text = (lab_ana_columns_definition.scheme)::text)) AND ((lab_ana_results.unit)::text = (lab_ana_columns_definition.unit)::text))));


--
-- Name: lab_ana_results_columns_avg; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW lab_ana_results_columns_avg AS
    SELECT eav.sample_id FROM (SELECT tmp_lab_ana_results.opid, tmp_lab_ana_results.sample_id, tmp_lab_ana_results.colid, tmp_lab_ana_results.value_num FROM tmp_lab_ana_results) eav GROUP BY eav.sample_id;


--
-- Name: dh_sampling_ana; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW dh_sampling_ana AS
    SELECT dh_sampling_grades.opid, dh_sampling_grades.id, dh_sampling_grades.depfrom, dh_sampling_grades.depto, lab_ana_results_columns_avg.sample_id FROM (dh_sampling_grades JOIN lab_ana_results_columns_avg ON (((dh_sampling_grades.sample_id)::text = (lab_ana_results_columns_avg.sample_id)::text)));


--
-- Name: dh_sampling_avg_grades_3dpoints; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW dh_sampling_avg_grades_3dpoints AS
    SELECT tmp.srid, tmp.id, tmp.depfrom, tmp.depto, tmp.core_loss_cm, tmp.weight_kg, tmp.sample_type, tmp.sample_id, tmp.comments, tmp.opid, tmp.batch_id, tmp.datasource, tmp.au1_ppm, tmp.au2_ppm, tmp.au3_ppm, tmp.au4_ppm, tmp.au5_ppm, tmp.au6_ppm, tmp.ph, tmp.moisture, tmp.numauto, tmp.au_specks, tmp.quartering, tmp.db_update_timestamp, tmp.username, tmp.x1, tmp.y1, tmp.z1, tmp.x2, tmp.y2, tmp.z2, public.geomfromewkt((((((((('SRID='::text || tmp.srid) || ';POINT ('::text) || tmp.x2) || ' '::text) || tmp.y2) || ' '::text) || tmp.z2) || ')'::text)) AS geometry FROM (SELECT c.srid, s.id, s.depfrom, s.depto, s.core_loss_cm, s.weight_kg, s.sample_type, s.sample_id, s.comments, s.opid, s.batch_id, s.datasource, s.au1_ppm, s.au2_ppm, s.au3_ppm, s.au4_ppm, s.au5_ppm, s.au6_ppm, s.ph, s.moisture, s.numauto, s.au_specks, s.quartering, s.db_update_timestamp, s.username, ((c.x)::double precision + (((s.depfrom)::double precision * cos((((c.dip_hz / (180)::numeric))::double precision * pi()))) * sin((((c.azim_ng / (180)::numeric))::double precision * pi())))) AS x1, ((c.y)::double precision + (((s.depfrom)::double precision * cos((((c.dip_hz / (180)::numeric))::double precision * pi()))) * cos((((c.azim_ng / (180)::numeric))::double precision * pi())))) AS y1, ((c.z)::double precision - ((s.depfrom)::double precision * sin((((c.dip_hz / (180)::numeric))::double precision * pi())))) AS z1, ((c.x)::double precision + (((s.depto)::double precision * cos((((c.dip_hz / (180)::numeric))::double precision * pi()))) * sin((((c.azim_ng / (180)::numeric))::double precision * pi())))) AS x2, ((c.y)::double precision + (((s.depto)::double precision * cos((((c.dip_hz / (180)::numeric))::double precision * pi()))) * cos((((c.azim_ng / (180)::numeric))::double precision * pi())))) AS y2, ((c.z)::double precision - ((s.depto)::double precision * sin((((c.dip_hz / (180)::numeric))::double precision * pi())))) AS z2 FROM ((SELECT dh_collars.id, dh_collars.srid, dh_collars.x, dh_collars.y, dh_collars.z, dh_collars.azim_ng, dh_collars.dip_hz FROM dh_collars) c JOIN dh_sampling_grades s ON (((c.id)::text = (s.id)::text)))) tmp;


SET search_path = public, pg_catalog;

--
-- Name: dh_sampling_bottle_roll; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE dh_sampling_bottle_roll (
    opid integer,
    id text,
    depfrom numeric(10,2),
    depto numeric(10,2),
    sample_id character varying,
    au_total numeric(10,2),
    au_24h numeric(10,2),
    au_48h numeric(10,2),
    au_72h numeric(10,2),
    au_residu numeric(10,2),
    rec_24h_pc numeric(10,2),
    rec_48h_pc numeric(10,2),
    rec_72h_pc numeric(10,2),
    datasource integer,
    numauto integer NOT NULL,
    db_update_timestamp timestamp without time zone DEFAULT now(),
    username character varying DEFAULT "current_user"()
);


--
-- Name: TABLE dh_sampling_bottle_roll; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE dh_sampling_bottle_roll IS 'Mineralurgical samples, bottle-roll tests results';


--
-- Name: COLUMN dh_sampling_bottle_roll.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_sampling_bottle_roll.opid IS 'Operation identifier';


--
-- Name: COLUMN dh_sampling_bottle_roll.id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_sampling_bottle_roll.id IS 'Identifier, refers to dh_collars';


--
-- Name: COLUMN dh_sampling_bottle_roll.depfrom; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_sampling_bottle_roll.depfrom IS 'Sample beginning depth';


--
-- Name: COLUMN dh_sampling_bottle_roll.depto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_sampling_bottle_roll.depto IS 'Sample ending depth';


--
-- Name: COLUMN dh_sampling_bottle_roll.sample_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_sampling_bottle_roll.sample_id IS 'Sample identifier: refers to assay results and quality check tables';


--
-- Name: COLUMN dh_sampling_bottle_roll.au_total; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_sampling_bottle_roll.au_total IS 'Total gold recovered';


--
-- Name: COLUMN dh_sampling_bottle_roll.au_24h; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_sampling_bottle_roll.au_24h IS 'Gold recovered after 24 hours';


--
-- Name: COLUMN dh_sampling_bottle_roll.au_48h; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_sampling_bottle_roll.au_48h IS 'Gold recovered after 48 hours';


--
-- Name: COLUMN dh_sampling_bottle_roll.au_72h; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_sampling_bottle_roll.au_72h IS 'Gold recovered after 72 hours';


--
-- Name: COLUMN dh_sampling_bottle_roll.au_residu; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_sampling_bottle_roll.au_residu IS 'Residual gold';


--
-- Name: COLUMN dh_sampling_bottle_roll.rec_24h_pc; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_sampling_bottle_roll.rec_24h_pc IS 'Recovery after 24 hours, percent';


--
-- Name: COLUMN dh_sampling_bottle_roll.rec_48h_pc; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_sampling_bottle_roll.rec_48h_pc IS 'Recovery after 48 hours, percent';


--
-- Name: COLUMN dh_sampling_bottle_roll.rec_72h_pc; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_sampling_bottle_roll.rec_72h_pc IS 'Recovery after 72 hours, percent';


--
-- Name: COLUMN dh_sampling_bottle_roll.datasource; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_sampling_bottle_roll.datasource IS 'Datasource identifier, refers to lex_datasource';


--
-- Name: COLUMN dh_sampling_bottle_roll.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_sampling_bottle_roll.numauto IS 'Automatic integer primary key';


--
-- Name: COLUMN dh_sampling_bottle_roll.db_update_timestamp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_sampling_bottle_roll.db_update_timestamp IS 'Current date and time stamp when data is loaded in table';


--
-- Name: COLUMN dh_sampling_bottle_roll.username; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_sampling_bottle_roll.username IS 'User (role) which created data record';


SET search_path = pierre, pg_catalog;

--
-- Name: dh_sampling_bottle_roll; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW dh_sampling_bottle_roll AS
    SELECT dh_sampling_bottle_roll.opid, dh_sampling_bottle_roll.id, dh_sampling_bottle_roll.depfrom, dh_sampling_bottle_roll.depto, dh_sampling_bottle_roll.sample_id, dh_sampling_bottle_roll.au_total, dh_sampling_bottle_roll.au_24h, dh_sampling_bottle_roll.au_48h, dh_sampling_bottle_roll.au_72h, dh_sampling_bottle_roll.au_residu, dh_sampling_bottle_roll.rec_24h_pc, dh_sampling_bottle_roll.rec_48h_pc, dh_sampling_bottle_roll.rec_72h_pc, dh_sampling_bottle_roll.datasource, dh_sampling_bottle_roll.numauto, dh_sampling_bottle_roll.db_update_timestamp, dh_sampling_bottle_roll.username FROM (public.dh_sampling_bottle_roll JOIN public.operation_active ON ((dh_sampling_bottle_roll.opid = operation_active.opid)));


--
-- Name: dh_sampling_grades_graph_au_6; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW dh_sampling_grades_graph_au_6 AS
    SELECT dh_sampling_grades.opid, dh_sampling_grades.id, dh_sampling_grades.depfrom, dh_sampling_grades.depto, dh_sampling_grades.sample_id, dh_sampling_grades.au1_ppm, dh_sampling_grades.au2_ppm, dh_sampling_grades.au6_ppm, dh_sampling_grades.weight_kg, dh_sampling_grades.core_loss_cm, repeat('#'::text, ((dh_sampling_grades.au6_ppm * (5)::numeric))::integer) AS graph_au_6 FROM dh_sampling_grades ORDER BY dh_sampling_grades.opid, dh_sampling_grades.id, dh_sampling_grades.depto;


--
-- Name: dh_sampling_grades_multi_elt_okz; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE dh_sampling_grades_multi_elt_okz (
    id character varying(20),
    depfrom numeric(10,2),
    depto numeric(10,2),
    core_loss_cm numeric(5,1),
    weight_kg numeric(6,2),
    sample_type character varying(8),
    sample_id character varying(20),
    comments character varying,
    opid integer,
    batch_id integer,
    datasource integer,
    au1_ppm numeric(8,3),
    au2_ppm numeric(8,3),
    au3_ppm numeric(8,3),
    au4_ppm numeric(8,3),
    au5_ppm numeric(8,3),
    au6_ppm numeric(8,3),
    ph numeric(4,2),
    ag_ppm numeric(8,3),
    al_perc numeric(8,3),
    as_ppm numeric(8,3),
    ba_ppm numeric(8,3),
    bi_ppm numeric(8,3),
    ca_perc numeric(8,3),
    cd_ppm numeric(8,3),
    co_ppm numeric(8,3),
    cr_ppm numeric(8,3),
    cu_perc numeric(8,3),
    fe_perc numeric(8,3),
    ga_ppm numeric(8,3),
    k_perc numeric(8,3),
    la_ppm numeric(8,3),
    li_ppm numeric(8,3),
    mg_perc numeric(8,3),
    mn_ppm numeric(8,3),
    moisture numeric(8,4),
    mo_ppm numeric(8,3),
    na_perc numeric(8,3),
    nb_ppm numeric(8,3),
    ni_ppm numeric(8,3),
    pb_perc numeric(8,3),
    sb_ppm numeric(8,3),
    sc_ppm numeric(8,3),
    se_ppm numeric(8,3),
    sn_ppm numeric(8,3),
    sr_ppm numeric(8,3),
    ta_ppm numeric(8,3),
    te_ppm numeric(8,3),
    ti_perc numeric(8,3),
    v_ppm numeric(8,3),
    w_ppm numeric(8,3),
    y_ppm numeric(8,3),
    zn_perc numeric(8,3),
    th_ppm numeric(8,3),
    tl_ppm numeric(8,3),
    u_ppm numeric(8,3),
    numauto integer,
    au_specks integer,
    p_perc numeric(8,3),
    b_ppm numeric(8,3),
    s_perc numeric(8,3),
    hg_ppm numeric(8,3)
);


--
-- Name: dh_sampling_grades_open_ended_au_tail; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW dh_sampling_grades_open_ended_au_tail AS
    SELECT tmp.id, max(tmp.length) AS length, max(tmp.depto) AS depto FROM (SELECT dh_sampling_grades.id, dh_sampling_grades.depfrom, dh_sampling_grades.depto, dh_sampling_grades.core_loss_cm, dh_sampling_grades.weight_kg, dh_sampling_grades.sample_type, dh_sampling_grades.sample_id, dh_sampling_grades.comments, dh_sampling_grades.opid, dh_sampling_grades.batch_id, dh_sampling_grades.datasource, dh_sampling_grades.au1_ppm, dh_sampling_grades.au2_ppm, dh_sampling_grades.au3_ppm, dh_sampling_grades.au4_ppm, dh_sampling_grades.au5_ppm, dh_sampling_grades.au6_ppm, dh_sampling_grades.ph, dh_sampling_grades.moisture, dh_sampling_grades.numauto, dh_sampling_grades.au_specks, dh_sampling_grades.quartering, dh_sampling_grades.db_update_timestamp, dh_sampling_grades.username, dh_collars.length FROM (dh_sampling_grades JOIN dh_collars ON (((dh_sampling_grades.opid = dh_collars.opid) AND ((dh_sampling_grades.id)::text = (dh_collars.id)::text)))), (SELECT 0.5 AS teneur_coupure) tmp_tc, (SELECT 5 AS sortir_d_au_moins) tmp_sortir WHERE ((((dh_collars.dh_type)::text <> ALL ((ARRAY['PIT'::character varying, 'TR'::character varying, 'CS'::character varying])::text[])) AND (GREATEST(dh_sampling_grades.au1_ppm, dh_sampling_grades.au2_ppm, dh_sampling_grades.au3_ppm, dh_sampling_grades.au4_ppm, dh_sampling_grades.au5_ppm, dh_sampling_grades.au6_ppm) >= tmp_tc.teneur_coupure)) AND ((dh_collars.length > (tmp_sortir.sortir_d_au_moins)::numeric) AND ((dh_collars.length - dh_sampling_grades.depto) < (tmp_sortir.sortir_d_au_moins)::numeric)))) tmp GROUP BY tmp.id ORDER BY tmp.id, max(tmp.depto);


--
-- Name: dh_sampling_grades_open_ended_au_top; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW dh_sampling_grades_open_ended_au_top AS
    SELECT tmp.id, tmp.length, min(tmp.depto) AS depto FROM (SELECT dh_sampling_grades.id, dh_sampling_grades.depfrom, dh_sampling_grades.depto, dh_sampling_grades.core_loss_cm, dh_sampling_grades.weight_kg, dh_sampling_grades.sample_type, dh_sampling_grades.sample_id, dh_sampling_grades.comments, dh_sampling_grades.opid, dh_sampling_grades.batch_id, dh_sampling_grades.datasource, dh_sampling_grades.au1_ppm, dh_sampling_grades.au2_ppm, dh_sampling_grades.au3_ppm, dh_sampling_grades.au4_ppm, dh_sampling_grades.au5_ppm, dh_sampling_grades.au6_ppm, dh_sampling_grades.ph, dh_sampling_grades.moisture, dh_sampling_grades.numauto, dh_sampling_grades.au_specks, dh_sampling_grades.quartering, dh_sampling_grades.db_update_timestamp, dh_sampling_grades.username, dh_collars.length FROM (dh_sampling_grades JOIN dh_collars ON (((dh_sampling_grades.opid = dh_collars.opid) AND ((dh_sampling_grades.id)::text = (dh_collars.id)::text)))), (SELECT 0.5 AS teneur_coupure) tmp_tc, (SELECT 5 AS sortir_d_au_moins) tmp_sortir WHERE ((((dh_collars.dh_type)::text <> ALL ((ARRAY['PIT'::character varying, 'TR'::character varying, 'CS'::character varying])::text[])) AND (GREATEST(dh_sampling_grades.au1_ppm, dh_sampling_grades.au2_ppm, dh_sampling_grades.au3_ppm, dh_sampling_grades.au4_ppm, dh_sampling_grades.au5_ppm, dh_sampling_grades.au6_ppm) >= tmp_tc.teneur_coupure)) AND ((dh_collars.length > (tmp_sortir.sortir_d_au_moins)::numeric) AND (dh_sampling_grades.depfrom < (tmp_sortir.sortir_d_au_moins)::numeric)))) tmp GROUP BY tmp.id, tmp.length, tmp.depto ORDER BY tmp.id, min(tmp.depto);


--
-- Name: dh_sampling_mineralised_intervals_graph_au6; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW dh_sampling_mineralised_intervals_graph_au6 AS
    SELECT tmp.opid, tmp.id, tmp.depfrom, tmp.depto, tmp.mineralised_interval, tmp.sample_id, tmp.weight_kg, tmp.core_loss_cm, tmp.au6_ppm AS aumaxi_ppm, tmp.graph_au_6 AS graph_aumaxi FROM ((SELECT dh_sampling_grades_graph_au_6.opid, dh_sampling_grades_graph_au_6.id, dh_sampling_grades_graph_au_6.depfrom, dh_sampling_grades_graph_au_6.depto, dh_sampling_grades_graph_au_6.sample_id, dh_sampling_grades_graph_au_6.au1_ppm, dh_sampling_grades_graph_au_6.au2_ppm, dh_sampling_grades_graph_au_6.au6_ppm, dh_sampling_grades_graph_au_6.weight_kg, dh_sampling_grades_graph_au_6.core_loss_cm, dh_sampling_grades_graph_au_6.graph_au_6, CASE WHEN (dh_mineralised_intervals.depfrom = dh_sampling_grades_graph_au_6.depfrom) THEN rpad((((('>=== '::text || (dh_mineralised_intervals.stva)::text) || ' (accu: '::text) || ((dh_mineralised_intervals.accu)::character varying)::text) || ') '::text), 50, '='::text) WHEN (dh_mineralised_intervals.depto = dh_sampling_grades_graph_au_6.depto) THEN '>================================================='::text WHEN (dh_mineralised_intervals.mine IS NOT NULL) THEN ' |'::text ELSE ''::text END AS mineralised_interval, dh_sampling_grades_graph_au_6.depto AS pied_passe_min FROM (dh_sampling_grades_graph_au_6 LEFT JOIN (SELECT dh_mineralised_intervals.id, dh_mineralised_intervals.depfrom, dh_mineralised_intervals.depto, dh_mineralised_intervals.mine, dh_mineralised_intervals.avau, dh_mineralised_intervals.stva, dh_mineralised_intervals.accu, dh_mineralised_intervals.recu, dh_mineralised_intervals.dens, dh_mineralised_intervals.numauto, dh_mineralised_intervals.comments, dh_mineralised_intervals.opid, dh_mineralised_intervals.db_update_timestamp, dh_mineralised_intervals.username, dh_mineralised_intervals.datasource FROM dh_mineralised_intervals WHERE (dh_mineralised_intervals.mine = 0)) dh_mineralised_intervals ON ((((((dh_sampling_grades_graph_au_6.opid = dh_mineralised_intervals.opid) AND ((dh_sampling_grades_graph_au_6.id)::text = (dh_mineralised_intervals.id)::text)) AND (dh_sampling_grades_graph_au_6.depto <= dh_mineralised_intervals.depto)) AND (dh_sampling_grades_graph_au_6.depfrom >= dh_mineralised_intervals.depfrom)) AND (dh_mineralised_intervals.mine = 0))))) tmp LEFT JOIN (SELECT dh_mineralised_intervals.opid, dh_mineralised_intervals.id, dh_mineralised_intervals.depfrom, dh_mineralised_intervals.depto, dh_mineralised_intervals.avau, dh_mineralised_intervals.stva, dh_mineralised_intervals.accu FROM (SELECT dh_mineralised_intervals.id, dh_mineralised_intervals.depfrom, dh_mineralised_intervals.depto, dh_mineralised_intervals.mine, dh_mineralised_intervals.avau, dh_mineralised_intervals.stva, dh_mineralised_intervals.accu, dh_mineralised_intervals.recu, dh_mineralised_intervals.dens, dh_mineralised_intervals.numauto, dh_mineralised_intervals.comments, dh_mineralised_intervals.opid, dh_mineralised_intervals.db_update_timestamp, dh_mineralised_intervals.username, dh_mineralised_intervals.datasource FROM dh_mineralised_intervals WHERE (dh_mineralised_intervals.mine = 0)) dh_mineralised_intervals) tmpmine ON ((((tmp.opid = tmpmine.opid) AND ((tmp.id)::text = (tmpmine.id)::text)) AND (tmp.pied_passe_min = tmpmine.depto)))) ORDER BY tmp.opid, tmp.id, tmp.depto;


SET search_path = public, pg_catalog;

--
-- Name: dh_struct_measures; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE dh_struct_measures (
    opid integer,
    id character varying(20),
    depto numeric(10,2),
    measure_type character varying,
    structure_type character varying,
    alpha_tca numeric,
    beta numeric,
    gamma numeric,
    north_ref character varying,
    direction integer,
    dip integer,
    dip_quadrant character varying,
    pitch integer,
    pitch_quadrant character varying,
    movement character varying,
    valid boolean,
    struct_description character varying,
    sortgroup character(1),
    datasource integer,
    numauto integer NOT NULL,
    db_update_timestamp timestamp without time zone DEFAULT now(),
    username character varying DEFAULT "current_user"()
);


--
-- Name: TABLE dh_struct_measures; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE dh_struct_measures IS 'Structural measurements done on core, or in trenches';


--
-- Name: COLUMN dh_struct_measures.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_struct_measures.opid IS 'Operation identifier';


--
-- Name: COLUMN dh_struct_measures.id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_struct_measures.id IS 'Full identifier for borehole or trench';


--
-- Name: COLUMN dh_struct_measures.depto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_struct_measures.depto IS 'Measurement depth';


--
-- Name: COLUMN dh_struct_measures.measure_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_struct_measures.measure_type IS 'Type of measurement: [P: plane L: line PL: plane line PLM: plane line movement PLMS: plane line movement sure]';


--
-- Name: COLUMN dh_struct_measures.structure_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_struct_measures.structure_type IS 'Measured structure type: [VEIN , FRACTURE , C , SCHISTOSITY , FOLIATION , MYLONITE , CONTACT , VEIN_FAULT , FOLD_PAX_AX , FOLIATION_LINE , FAULT , CATACLASE , MINERALISED_STRUCTURE]';


--
-- Name: COLUMN dh_struct_measures.alpha_tca; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_struct_measures.alpha_tca IS 'Alpha angle = To Core Axis (TCA) angle, measured on core';


--
-- Name: COLUMN dh_struct_measures.beta; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_struct_measures.beta IS 'Beta angle';


--
-- Name: COLUMN dh_struct_measures.gamma; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_struct_measures.gamma IS 'Gamma angle';


--
-- Name: COLUMN dh_struct_measures.north_ref; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_struct_measures.north_ref IS 'North reference for azimuths and directions measurements: [Nm: magnetic North, Ng: geographic North, Nu: UTM north, Nl: local grid Y axis]';


--
-- Name: COLUMN dh_struct_measures.direction; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_struct_measures.direction IS 'Plane direction, 0-180°';


--
-- Name: COLUMN dh_struct_measures.dip; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_struct_measures.dip IS 'Plane dip, 0-90°';


--
-- Name: COLUMN dh_struct_measures.dip_quadrant; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_struct_measures.dip_quadrant IS 'Plane dip quadrant, NESW';


--
-- Name: COLUMN dh_struct_measures.pitch; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_struct_measures.pitch IS 'Pitch of line on plane, 0-90°';


--
-- Name: COLUMN dh_struct_measures.pitch_quadrant; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_struct_measures.pitch_quadrant IS 'Quadrant of pitch, NESW';


--
-- Name: COLUMN dh_struct_measures.movement; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_struct_measures.movement IS 'Relative movement of fault/C: [N: normal, I: inverse = R = reverse, D: dextral, S: sinistral]';


--
-- Name: COLUMN dh_struct_measures.valid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_struct_measures.valid IS 'Measure is valid or not (impossible cases = not valid)';


--
-- Name: COLUMN dh_struct_measures.struct_description; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_struct_measures.struct_description IS 'Naturalist description of measured structure';


--
-- Name: COLUMN dh_struct_measures.sortgroup; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_struct_measures.sortgroup IS 'Sorting group, for discriminated of various phases: a, b, c, ...';


--
-- Name: COLUMN dh_struct_measures.datasource; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_struct_measures.datasource IS 'Datasource identifier, refers to lex_datasource';


--
-- Name: COLUMN dh_struct_measures.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_struct_measures.numauto IS 'Automatic integer primary key';


--
-- Name: COLUMN dh_struct_measures.db_update_timestamp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_struct_measures.db_update_timestamp IS 'Current date and time stamp when data is loaded in table';


--
-- Name: COLUMN dh_struct_measures.username; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_struct_measures.username IS 'User (role) which created data record';


SET search_path = pierre, pg_catalog;

--
-- Name: dh_struct_measures; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW dh_struct_measures AS
    SELECT dh_struct_measures.opid, dh_struct_measures.id, dh_struct_measures.depto, dh_struct_measures.measure_type, dh_struct_measures.structure_type, dh_struct_measures.alpha_tca, dh_struct_measures.beta, dh_struct_measures.gamma, dh_struct_measures.north_ref, dh_struct_measures.direction, dh_struct_measures.dip, dh_struct_measures.dip_quadrant, dh_struct_measures.pitch, dh_struct_measures.pitch_quadrant, dh_struct_measures.movement, dh_struct_measures.valid, dh_struct_measures.struct_description, dh_struct_measures.sortgroup, dh_struct_measures.datasource, dh_struct_measures.numauto, dh_struct_measures.db_update_timestamp, dh_struct_measures.username FROM (public.dh_struct_measures JOIN public.operation_active ON ((dh_struct_measures.opid = operation_active.opid)));


SET search_path = public, pg_catalog;

--
-- Name: dh_tech; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE dh_tech (
    id character varying(20),
    depfrom numeric(10,2),
    depto numeric(10,2),
    drilled_len numeric(10,2),
    reco_len numeric(10,2),
    rqd_len numeric(10,2),
    diam character varying(10),
    numauto integer NOT NULL,
    datasource integer,
    opid integer,
    comments character varying,
    drillers_depto numeric(10,2),
    core_loss_cm integer,
    joints_description character varying,
    nb_joints integer,
    db_update_timestamp timestamp without time zone DEFAULT now(),
    username character varying DEFAULT "current_user"()
);


--
-- Name: TABLE dh_tech; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE dh_tech IS 'Technical drilling data, and geotechnical parameters';


--
-- Name: COLUMN dh_tech.id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_tech.id IS 'Drill hole identification';


--
-- Name: COLUMN dh_tech.depfrom; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_tech.depfrom IS 'Interval begining depth';


--
-- Name: COLUMN dh_tech.depto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_tech.depto IS 'Interval ending depth';


--
-- Name: COLUMN dh_tech.drilled_len; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_tech.drilled_len IS 'Interval length';


--
-- Name: COLUMN dh_tech.reco_len; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_tech.reco_len IS 'Recovery length';


--
-- Name: COLUMN dh_tech.rqd_len; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_tech.rqd_len IS 'Rock Quality Designation "length"';


--
-- Name: COLUMN dh_tech.diam; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_tech.diam IS 'core diameter';


--
-- Name: COLUMN dh_tech.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_tech.numauto IS 'Automatic integer primary key';


--
-- Name: COLUMN dh_tech.datasource; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_tech.datasource IS 'Datasource identifier, refers to lex_datasource';


--
-- Name: COLUMN dh_tech.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_tech.opid IS 'Operation identifier';


--
-- Name: COLUMN dh_tech.drillers_depto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_tech.drillers_depto IS 'Driller end-of-run depth, as mentioned on core block';


--
-- Name: COLUMN dh_tech.core_loss_cm; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_tech.core_loss_cm IS 'Core loss along drilled run';


--
-- Name: COLUMN dh_tech.joints_description; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_tech.joints_description IS 'Joints description: rugosity, fillings, etc.';


--
-- Name: COLUMN dh_tech.nb_joints; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_tech.nb_joints IS 'Count of natural joints along drilled run';


--
-- Name: COLUMN dh_tech.db_update_timestamp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_tech.db_update_timestamp IS 'Current date and time stamp when data is loaded in table';


--
-- Name: COLUMN dh_tech.username; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_tech.username IS 'User (role) which created data record';


SET search_path = pierre, pg_catalog;

--
-- Name: dh_tech; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW dh_tech AS
    SELECT dh_tech.id, dh_tech.depfrom, dh_tech.depto, dh_tech.drilled_len, dh_tech.reco_len, dh_tech.rqd_len, dh_tech.diam, dh_tech.numauto, dh_tech.datasource, dh_tech.opid, dh_tech.comments, dh_tech.drillers_depto, dh_tech.core_loss_cm, dh_tech.joints_description, dh_tech.nb_joints, dh_tech.db_update_timestamp, dh_tech.username FROM (public.dh_tech JOIN public.operation_active ON ((dh_tech.opid = operation_active.opid)));


SET search_path = public, pg_catalog;

--
-- Name: dh_thinsections; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE dh_thinsections (
    opid integer,
    id character varying,
    depto numeric(10,2),
    core_quarter character varying,
    questions character varying,
    name character varying,
    texture character varying,
    mineralogy character varying,
    metamorphism_deformations character varying,
    mineralisations character varying,
    origin character varying,
    numauto integer NOT NULL,
    db_update_timestamp timestamp without time zone DEFAULT now(),
    username character varying DEFAULT "current_user"(),
    datasource integer
);


--
-- Name: TABLE dh_thinsections; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE dh_thinsections IS 'Thin sections for petrological studies';


--
-- Name: COLUMN dh_thinsections.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_thinsections.opid IS 'Operation identifier';


--
-- Name: COLUMN dh_thinsections.id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_thinsections.id IS 'Identifier, refers to dh_collars';


--
-- Name: COLUMN dh_thinsections.depto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_thinsections.depto IS 'Sample taken for thin section: bottom depth';


--
-- Name: COLUMN dh_thinsections.core_quarter; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_thinsections.core_quarter IS 'Optional code to identify which core quarter was taken to make thin section; useful for oriented core';


--
-- Name: COLUMN dh_thinsections.questions; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_thinsections.questions IS 'Interrogations concerning sample; desired diagnose';


--
-- Name: COLUMN dh_thinsections.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_thinsections.name IS 'Result of diagnose: rock name';


--
-- Name: COLUMN dh_thinsections.texture; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_thinsections.texture IS 'Result of diagnose: texture';


--
-- Name: COLUMN dh_thinsections.mineralogy; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_thinsections.mineralogy IS 'Result of diagnose: mineralogy';


--
-- Name: COLUMN dh_thinsections.metamorphism_deformations; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_thinsections.metamorphism_deformations IS 'Result of diagnose: metamorphism and/or deformations';


--
-- Name: COLUMN dh_thinsections.mineralisations; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_thinsections.mineralisations IS 'Result of diagnose: mineralisations';


--
-- Name: COLUMN dh_thinsections.origin; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_thinsections.origin IS 'Result of diagnose: origin: in case of highly transformed rock, protore';


--
-- Name: COLUMN dh_thinsections.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_thinsections.numauto IS 'Automatic integer primary key';


--
-- Name: COLUMN dh_thinsections.db_update_timestamp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_thinsections.db_update_timestamp IS 'Current date and time stamp when data is loaded in table';


--
-- Name: COLUMN dh_thinsections.username; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_thinsections.username IS 'User (role) which created data record';


--
-- Name: COLUMN dh_thinsections.datasource; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN dh_thinsections.datasource IS 'Datasource identifier, refers to lex_datasource';


SET search_path = pierre, pg_catalog;

--
-- Name: dh_thinsections; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW dh_thinsections AS
    SELECT dh_thinsections.opid, dh_thinsections.id, dh_thinsections.depto, dh_thinsections.core_quarter, dh_thinsections.questions, dh_thinsections.name, dh_thinsections.texture, dh_thinsections.mineralogy, dh_thinsections.metamorphism_deformations, dh_thinsections.mineralisations, dh_thinsections.origin, dh_thinsections.numauto, dh_thinsections.db_update_timestamp, dh_thinsections.username, dh_thinsections.datasource FROM (public.dh_thinsections JOIN public.operation_active ON ((dh_thinsections.opid = operation_active.opid)));


--
-- Name: dh_traces_3d; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW dh_traces_3d AS
    SELECT tmp.id, tmp.shid, tmp.location, tmp.profile, tmp.srid, tmp.x, tmp.y, tmp.z, tmp.azim_ng, tmp.azim_nm, tmp.dip_hz, tmp.dh_type, tmp.date_start, tmp.contractor, tmp.geologist, tmp.length, tmp.nb_samples, tmp.comments, tmp.completed, tmp.numauto, tmp.date_completed, tmp.opid, tmp.purpose, tmp.x_local, tmp.y_local, tmp.z_local, tmp.accusum, tmp.id_pject, tmp.x_pject, tmp.y_pject, tmp.z_pject, tmp.topo_survey_type, tmp.db_update_timestamp, tmp.username, tmp.datasource, tmp.x1, tmp.y1, tmp.z1, public.geomfromewkt((((((((((((((('SRID='::text || tmp.srid) || ';LINESTRING ('::text) || tmp.x) || ' '::text) || tmp.y) || ' '::text) || tmp.z) || ', '::text) || tmp.x1) || ' '::text) || tmp.y1) || ' '::text) || tmp.z1) || ')'::text)) AS geomfromewkt FROM (SELECT dh_collars.id, dh_collars.shid, dh_collars.location, dh_collars.profile, dh_collars.srid, dh_collars.x, dh_collars.y, dh_collars.z, dh_collars.azim_ng, dh_collars.azim_nm, dh_collars.dip_hz, dh_collars.dh_type, dh_collars.date_start, dh_collars.contractor, dh_collars.geologist, dh_collars.length, dh_collars.nb_samples, dh_collars.comments, dh_collars.completed, dh_collars.numauto, dh_collars.date_completed, dh_collars.opid, dh_collars.purpose, dh_collars.x_local, dh_collars.y_local, dh_collars.z_local, dh_collars.accusum, dh_collars.id_pject, dh_collars.x_pject, dh_collars.y_pject, dh_collars.z_pject, dh_collars.topo_survey_type, dh_collars.db_update_timestamp, dh_collars.username, dh_collars.datasource, ((dh_collars.x)::double precision + (((dh_collars.length)::double precision * cos((((dh_collars.dip_hz / (180)::numeric))::double precision * pi()))) * sin((((dh_collars.azim_ng / (180)::numeric))::double precision * pi())))) AS x1, ((dh_collars.y)::double precision + (((dh_collars.length)::double precision * cos((((dh_collars.dip_hz / (180)::numeric))::double precision * pi()))) * cos((((dh_collars.azim_ng / (180)::numeric))::double precision * pi())))) AS y1, ((dh_collars.z)::double precision - ((dh_collars.length)::double precision * sin((((dh_collars.dip_hz / (180)::numeric))::double precision * pi())))) AS z1 FROM dh_collars) tmp ORDER BY tmp.id;


--
-- Name: european_federation_geologists_members; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE european_federation_geologists_members (
    year integer,
    no integer,
    award_date date,
    surname text,
    first_name text,
    licensed_body text,
    country text
);


SET search_path = public, pg_catalog;

--
-- Name: field_observations; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE field_observations (
    opid integer,
    year integer,
    obs_id character varying,
    date date,
    waypoint_name character varying,
    x numeric(20,10),
    y numeric(20,10),
    z numeric(20,2),
    description text,
    code_litho character varying(4),
    code_unit character varying(4),
    srid integer,
    geologist character varying,
    icon_descr character varying,
    comments character varying,
    sample_id character varying,
    datasource integer,
    numauto integer NOT NULL,
    photos character varying,
    audio character varying,
    timestamp_epoch_ms bigint,
    db_update_timestamp timestamp without time zone DEFAULT now(),
    username character varying DEFAULT "current_user"(),
    device character varying,
    "time" character varying
);


--
-- Name: TABLE field_observations; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE field_observations IS 'Field observations: geological observations, on outcrops, floats, or any other observations; coherent with GeolPDA';


--
-- Name: COLUMN field_observations.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations.opid IS 'Operation identifier';


--
-- Name: COLUMN field_observations.year; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations.year IS 'Year when observation is done (TODO DROP COLUMN redundant with date field)';


--
-- Name: COLUMN field_observations.obs_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations.obs_id IS 'Observation identifier: usually composed of: (acronym of person)_(year)_(incremental integer)';


--
-- Name: COLUMN field_observations.date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations.date IS 'Observation date';


--
-- Name: COLUMN field_observations.waypoint_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations.waypoint_name IS 'If relevant, waypoint name from GPS device';


--
-- Name: COLUMN field_observations.x; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations.x IS 'X coordinate (Easting),  in coordinate system srid';


--
-- Name: COLUMN field_observations.y; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations.y IS 'Y coordinate (Northing), in coordinate system srid';


--
-- Name: COLUMN field_observations.z; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations.z IS 'Z coordinate';


--
-- Name: COLUMN field_observations.description; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations.description IS 'Naturalist description';


--
-- Name: COLUMN field_observations.code_litho; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations.code_litho IS 'Lithological code';


--
-- Name: COLUMN field_observations.code_unit; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations.code_unit IS 'Unit code: lithostratigraphic, and/or cartographic';


--
-- Name: COLUMN field_observations.srid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations.srid IS 'Spatial Reference Identifier, or coordinate reference system: see spatial_ref_sys from postgis extension';


--
-- Name: COLUMN field_observations.geologist; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations.geologist IS 'Geologist or prospector name';


--
-- Name: COLUMN field_observations.icon_descr; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations.icon_descr IS 'If relevant, icon description from some GPS devices/programs';


--
-- Name: COLUMN field_observations.comments; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations.comments IS 'Comments';


--
-- Name: COLUMN field_observations.sample_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations.sample_id IS 'If relevant, sample identifier';


--
-- Name: COLUMN field_observations.datasource; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations.datasource IS 'Datasource identifier, refers to lex_datasource';


--
-- Name: COLUMN field_observations.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations.numauto IS 'Automatic integer primary key';


--
-- Name: COLUMN field_observations.photos; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations.photos IS 'List of photographs pictures files, if relevant';


--
-- Name: COLUMN field_observations.audio; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations.audio IS 'Audio recording files, if relevant';


--
-- Name: COLUMN field_observations.timestamp_epoch_ms; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations.timestamp_epoch_ms IS 'Timestamp of observation: as defined in GeolPDA devices, as epoch in ms';


--
-- Name: COLUMN field_observations.db_update_timestamp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations.db_update_timestamp IS 'Current date and time stamp when data is loaded in table';


--
-- Name: COLUMN field_observations.username; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations.username IS 'User (role) which created data record';


SET search_path = pierre, pg_catalog;

--
-- Name: field_observations; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW field_observations AS
    SELECT field_observations.opid, field_observations.year, field_observations.obs_id, field_observations.date, field_observations.waypoint_name, field_observations.x, field_observations.y, field_observations.z, field_observations.description, field_observations.code_litho, field_observations.code_unit, field_observations.srid, field_observations.geologist, field_observations.icon_descr, field_observations.comments, field_observations.sample_id, field_observations.datasource, field_observations.numauto, field_observations.photos, field_observations.audio, field_observations.timestamp_epoch_ms, field_observations.db_update_timestamp, field_observations.username, field_observations.device, field_observations."time" FROM (public.field_observations JOIN public.operation_active ON ((field_observations.opid = operation_active.opid)));


--
-- Name: field_observations_points; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW field_observations_points AS
    SELECT field_observations.opid, field_observations.year, field_observations.obs_id, field_observations.date, field_observations.waypoint_name, field_observations.x, field_observations.y, field_observations.z, field_observations.description, field_observations.code_litho, field_observations.code_unit, field_observations.srid, field_observations.geologist, field_observations.icon_descr, field_observations.comments, field_observations.sample_id, field_observations.datasource, field_observations.numauto, field_observations.photos, field_observations.audio, field_observations.timestamp_epoch_ms, field_observations.db_update_timestamp, field_observations.username, field_observations.device, field_observations."time", public.geomfromewkt((((((((('SRID='::text || field_observations.srid) || ';POINT ('::text) || field_observations.x) || ' '::text) || field_observations.y) || ' '::text) || field_observations.z) || ')'::text)) AS geomfromewkt FROM field_observations;


SET search_path = public, pg_catalog;

--
-- Name: field_observations_struct_measures; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE field_observations_struct_measures (
    opid integer,
    obs_id character varying,
    measure_type character varying,
    structure_type character varying,
    north_ref character varying,
    direction integer,
    dip integer,
    dip_quadrant character varying,
    pitch integer,
    pitch_quadrant character varying,
    movement character varying,
    valid boolean,
    comments character varying,
    numauto integer NOT NULL,
    db_update_timestamp timestamp without time zone DEFAULT now(),
    username character varying DEFAULT "current_user"(),
    datasource integer,
    rotation_matrix character varying,
    geolpda_id integer,
    geolpda_poi_id integer,
    sortgroup character(1),
    device character varying
);


--
-- Name: TABLE field_observations_struct_measures; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE field_observations_struct_measures IS 'Structural measurements, related to an observation; coherent with GeolPDA';


--
-- Name: COLUMN field_observations_struct_measures.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations_struct_measures.opid IS 'Operation identifier';


--
-- Name: COLUMN field_observations_struct_measures.obs_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations_struct_measures.obs_id IS 'Observation identifier: refers to field_observations table';


--
-- Name: COLUMN field_observations_struct_measures.measure_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations_struct_measures.measure_type IS 'Type of measurement: [P: plane L: line PL: plane line PLM: plane line movement PLMS: plane line movement sure]';


--
-- Name: COLUMN field_observations_struct_measures.structure_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations_struct_measures.structure_type IS 'Measured structure type: [VEIN , FRACTURE , C , SCHISTOSITY , FOLIATION , MYLONITE , CONTACT , VEIN_FAULT , FOLD_PAX_AX , FOLIATION_LINE , FAULT , CATACLASE , MINERALISED_STRUCTURE]';


--
-- Name: COLUMN field_observations_struct_measures.north_ref; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations_struct_measures.north_ref IS 'North reference for azimuths and directions measurements: [Nm: magnetic North, Ng: geographic North, Nu: UTM north, Nl: local grid Y axis]';


--
-- Name: COLUMN field_observations_struct_measures.direction; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations_struct_measures.direction IS 'Plane direction, 0-180°';


--
-- Name: COLUMN field_observations_struct_measures.dip; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations_struct_measures.dip IS 'Plane dip, 0-90°';


--
-- Name: COLUMN field_observations_struct_measures.dip_quadrant; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations_struct_measures.dip_quadrant IS 'Plane dip quadrant, NESW';


--
-- Name: COLUMN field_observations_struct_measures.pitch; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations_struct_measures.pitch IS 'Pitch of line on plane, 0-90°';


--
-- Name: COLUMN field_observations_struct_measures.pitch_quadrant; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations_struct_measures.pitch_quadrant IS 'Quadrant of pitch, NESW';


--
-- Name: COLUMN field_observations_struct_measures.movement; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations_struct_measures.movement IS 'Relative movement of fault/C: [N: normal, I: inverse = R = reverse, D: dextral, S: sinistral]';


--
-- Name: COLUMN field_observations_struct_measures.valid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations_struct_measures.valid IS 'Measure is valid or not (impossible cases = not valid)';


--
-- Name: COLUMN field_observations_struct_measures.comments; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations_struct_measures.comments IS 'Comments';


--
-- Name: COLUMN field_observations_struct_measures.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations_struct_measures.numauto IS 'Automatic integer primary key';


--
-- Name: COLUMN field_observations_struct_measures.db_update_timestamp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations_struct_measures.db_update_timestamp IS 'Current date and time stamp when data is loaded in table';


--
-- Name: COLUMN field_observations_struct_measures.username; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations_struct_measures.username IS 'User (role) which created data record';


--
-- Name: COLUMN field_observations_struct_measures.datasource; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations_struct_measures.datasource IS 'Datasource identifier, refers to lex_datasource';


--
-- Name: COLUMN field_observations_struct_measures.rotation_matrix; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations_struct_measures.rotation_matrix IS '3x3 rotation matrix, fully describing any orientation: initial state: [X axis points East, Y axis points North, Z axis points up] => measurement state = rotation applied. Corresponds to function public static float[] getOrientation (float[] R, float[] values) from android API as described in http://developer.android.com/reference/android/hardware/SensorManager.html#getOrientation%28float[],%20float[]%29';


--
-- Name: COLUMN field_observations_struct_measures.sortgroup; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations_struct_measures.sortgroup IS 'Sorting group, for discriminated of various phases: a, b, c, ...';


--
-- Name: COLUMN field_observations_struct_measures.device; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_observations_struct_measures.device IS 'Measuring device: compass, electronic device';


SET search_path = pierre, pg_catalog;

--
-- Name: field_observations_struct_measures; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW field_observations_struct_measures AS
    SELECT field_observations_struct_measures.opid, field_observations_struct_measures.obs_id, field_observations_struct_measures.measure_type, field_observations_struct_measures.structure_type, field_observations_struct_measures.north_ref, field_observations_struct_measures.direction, field_observations_struct_measures.dip, field_observations_struct_measures.dip_quadrant, field_observations_struct_measures.pitch, field_observations_struct_measures.pitch_quadrant, field_observations_struct_measures.movement, field_observations_struct_measures.valid, field_observations_struct_measures.comments, field_observations_struct_measures.numauto, field_observations_struct_measures.db_update_timestamp, field_observations_struct_measures.username, field_observations_struct_measures.datasource, field_observations_struct_measures.rotation_matrix, field_observations_struct_measures.geolpda_id, field_observations_struct_measures.geolpda_poi_id, field_observations_struct_measures.sortgroup FROM (public.field_observations_struct_measures JOIN public.operation_active ON ((field_observations_struct_measures.opid = operation_active.opid)));


SET search_path = public, pg_catalog;

--
-- Name: field_photos; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE field_photos (
    pho_id character varying NOT NULL,
    obs_id character varying,
    file character varying,
    description character varying,
    az numeric,
    dip numeric,
    author character varying,
    opid integer,
    datasource integer,
    db_update_timestamp timestamp without time zone DEFAULT now(),
    username character varying DEFAULT "current_user"(),
    numauto integer NOT NULL
);


--
-- Name: TABLE field_photos; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE field_photos IS 'Photographs taken in field, related to an observation';


--
-- Name: COLUMN field_photos.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_photos.opid IS 'Operation identifier';


--
-- Name: COLUMN field_photos.datasource; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_photos.datasource IS 'Datasource identifier, refers to lex_datasource';


--
-- Name: COLUMN field_photos.db_update_timestamp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_photos.db_update_timestamp IS 'Current date and time stamp when data is loaded in table';


--
-- Name: COLUMN field_photos.username; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_photos.username IS 'User (role) which created data record';


--
-- Name: COLUMN field_photos.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN field_photos.numauto IS 'Automatic integer';


SET search_path = pierre, pg_catalog;

--
-- Name: field_photos; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW field_photos AS
    SELECT field_photos.pho_id, field_photos.obs_id, field_photos.file, field_photos.description, field_photos.az, field_photos.dip, field_photos.author, field_photos.opid, field_photos.datasource, field_photos.db_update_timestamp, field_photos.username, field_photos.numauto FROM (public.field_photos JOIN public.operation_active ON ((field_photos.opid = operation_active.opid)));


SET search_path = public, pg_catalog;

--
-- Name: formations_group_lithos; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE formations_group_lithos (
    opid integer,
    formation_name character varying(25),
    code_litho character varying(4),
    db_update_timestamp timestamp without time zone DEFAULT now(),
    username character varying DEFAULT "current_user"(),
    numauto integer NOT NULL,
    datasource integer
);


--
-- Name: TABLE formations_group_lithos; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE formations_group_lithos IS 'Groups of lithologies, for simplification, typically for drill holes sections';


--
-- Name: COLUMN formations_group_lithos.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN formations_group_lithos.opid IS 'Operation identifier';


--
-- Name: COLUMN formations_group_lithos.db_update_timestamp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN formations_group_lithos.db_update_timestamp IS 'Current date and time stamp when data is loaded in table';


--
-- Name: COLUMN formations_group_lithos.username; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN formations_group_lithos.username IS 'User (role) which created data record';


--
-- Name: COLUMN formations_group_lithos.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN formations_group_lithos.numauto IS 'Automatic integer primary key';


SET search_path = pierre, pg_catalog;

--
-- Name: formations_group_lithos; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW formations_group_lithos AS
    SELECT formations_group_lithos.opid, formations_group_lithos.formation_name, formations_group_lithos.code_litho, formations_group_lithos.db_update_timestamp, formations_group_lithos.username, formations_group_lithos.numauto, formations_group_lithos.datasource FROM (public.formations_group_lithos JOIN public.operation_active ON ((formations_group_lithos.opid = operation_active.opid)));


--
-- Name: gdm_baselines; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW gdm_baselines AS
    SELECT baselines.opid, baselines.id, baselines.location, baselines.x1, baselines.y1, baselines.z1, baselines.x2, baselines.y2, baselines.z2, baselines.numauto, baselines.db_update_timestamp, baselines.username, baselines.datasource, 1 AS "order" FROM baselines ORDER BY baselines.id;


--
-- Name: gdm_selection; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW gdm_selection AS
    SELECT dh_collars.opid, dh_collars.id FROM (public.dh_collars JOIN public.operation_active ON ((dh_collars.opid = operation_active.opid))) WHERE (NOT ((dh_collars.x < (1000)::numeric) OR (dh_collars.y < (10000)::numeric)));


--
-- Name: gdm_dh_devia; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW gdm_dh_devia AS
    SELECT dh_collars.id, dh_collars.x, dh_collars.y, dh_collars.z, dh_collars.length, dh_collars.azim_ng AS azim_ng_collar, dh_collars.dip_hz AS dip_collar, dh_collars.length AS depto, dh_collars.azim_ng, dh_collars.dip_hz FROM (dh_collars JOIN gdm_selection ON (((gdm_selection.opid = dh_collars.opid) AND ((gdm_selection.id)::text = (dh_collars.id)::text)))) WHERE (NOT ((dh_collars.id)::text IN (SELECT DISTINCT dh_devia.id FROM dh_devia WHERE ((dh_devia.depto > (0)::numeric) AND dh_devia.valid)))) UNION SELECT dh_devia.id, dh_collars.x, dh_collars.y, dh_collars.z, dh_collars.length, dh_collars.azim_ng AS azim_ng_collar, dh_collars.dip_hz AS dip_collar, dh_devia.depto, dh_devia.azim_ng, dh_devia.dip_hz FROM ((dh_collars JOIN gdm_selection ON (((gdm_selection.opid = dh_collars.opid) AND ((gdm_selection.id)::text = (dh_collars.id)::text)))) JOIN dh_devia ON (((dh_collars.opid = dh_devia.opid) AND ((dh_collars.id)::text = (dh_devia.id)::text)))) WHERE ((((dh_devia.azim_ng IS NOT NULL) AND (dh_devia.dip_hz IS NOT NULL)) AND (dh_devia.depto > (0)::numeric)) AND (dh_devia.valid OR (dh_devia.valid IS NULL))) ORDER BY 1, 8;


--
-- Name: gdm_dh_litho; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW gdm_dh_litho AS
    SELECT dh_collars.id, dh_collars.location, dh_collars.x, dh_collars.y, dh_collars.z, dh_collars.azim_ng, dh_collars.dip_hz, dh_collars.length, dh_litho.depfrom, dh_litho.depto, dh_litho.code1, dh_litho.code2, dh_litho.code3, dh_litho.code4, dh_litho.value1, dh_litho.value2, dh_litho.value3, dh_litho.value4, dh_litho.description FROM ((gdm_selection JOIN dh_collars ON (((gdm_selection.opid = dh_collars.opid) AND ((gdm_selection.id)::text = (dh_collars.id)::text)))) JOIN dh_litho ON (((dh_collars.opid = dh_litho.opid) AND ((dh_collars.id)::text = (dh_litho.id)::text)))) ORDER BY dh_collars.id, dh_litho.depto;


--
-- Name: gdm_dh_mine_0; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW gdm_dh_mine_0 AS
    SELECT dh_collars.id, dh_collars.x, dh_collars.y, dh_collars.z, dh_collars.azim_ng, dh_collars.dip_hz, dh_collars.length, dh_mineralised_intervals.depfrom, dh_mineralised_intervals.depto, dh_mineralised_intervals.avau, dh_mineralised_intervals.stva, dh_mineralised_intervals.accu, dh_mineralised_intervals.dens, dh_mineralised_intervals.recu, dh_mineralised_intervals.comments FROM ((gdm_selection JOIN dh_collars ON (((gdm_selection.opid = dh_collars.opid) AND ((gdm_selection.id)::text = (dh_collars.id)::text)))) JOIN dh_mineralised_intervals ON (((dh_collars.opid = dh_mineralised_intervals.opid) AND ((dh_collars.id)::text = (dh_mineralised_intervals.id)::text)))) WHERE (dh_mineralised_intervals.mine = 0);


--
-- Name: gdm_dh_mine_1; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW gdm_dh_mine_1 AS
    SELECT dh_collars.id, dh_collars.x, dh_collars.y, dh_collars.z, dh_collars.azim_ng, dh_collars.dip_hz, dh_collars.length, dh_mineralised_intervals.depfrom, dh_mineralised_intervals.depto, dh_mineralised_intervals.avau, dh_mineralised_intervals.stva, dh_mineralised_intervals.accu, dh_mineralised_intervals.dens, dh_mineralised_intervals.recu, dh_mineralised_intervals.comments FROM ((gdm_selection JOIN dh_collars ON (((gdm_selection.opid = dh_collars.opid) AND ((gdm_selection.id)::text = (dh_collars.id)::text)))) JOIN dh_mineralised_intervals ON (((dh_collars.opid = dh_mineralised_intervals.opid) AND ((dh_collars.id)::text = (dh_mineralised_intervals.id)::text)))) WHERE (dh_mineralised_intervals.mine = 1);


--
-- Name: gdm_dh_planned; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW gdm_dh_planned AS
    SELECT dh_collars.id, dh_collars.location, dh_collars.x, dh_collars.y, dh_collars.z, dh_collars.azim_ng, dh_collars.dip_hz, dh_collars.length, dh_collars.completed, dh_collars.comments, dh_collars.length AS depto FROM (gdm_selection JOIN dh_collars ON (((gdm_selection.opid = dh_collars.opid) AND ((gdm_selection.id)::text = (dh_collars.id)::text)))) WHERE ((dh_collars.completed = false) OR (dh_collars.completed IS NULL)) ORDER BY dh_collars.id, dh_collars.length;


--
-- Name: gdm_dh_sampling_grades; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW gdm_dh_sampling_grades AS
    SELECT dh_collars.id, dh_collars.x, dh_collars.y, dh_collars.z, dh_collars.length, dh_sampling_grades_nodup.depfrom, dh_sampling_grades_nodup.depto, dh_sampling_grades_nodup.au1_ppm, dh_sampling_grades_nodup.au2_ppm, dh_sampling_grades_nodup.au3_ppm, dh_sampling_grades_nodup.au4_ppm, dh_sampling_grades_nodup.au5_ppm, dh_sampling_grades_nodup.au6_ppm FROM ((gdm_selection JOIN dh_collars ON (((gdm_selection.opid = dh_collars.opid) AND ((gdm_selection.id)::text = (dh_collars.id)::text)))) JOIN (SELECT dh_sampling_grades.id, dh_sampling_grades.depfrom, dh_sampling_grades.depto, dh_sampling_grades.core_loss_cm, dh_sampling_grades.weight_kg, dh_sampling_grades.sample_type, dh_sampling_grades.sample_id, dh_sampling_grades.comments, dh_sampling_grades.opid, dh_sampling_grades.batch_id, dh_sampling_grades.datasource, dh_sampling_grades.au1_ppm, dh_sampling_grades.au2_ppm, dh_sampling_grades.au3_ppm, dh_sampling_grades.au4_ppm, dh_sampling_grades.au5_ppm, dh_sampling_grades.au6_ppm, dh_sampling_grades.ph, dh_sampling_grades.moisture, dh_sampling_grades.numauto, dh_sampling_grades.au_specks, dh_sampling_grades.quartering, dh_sampling_grades.db_update_timestamp, dh_sampling_grades.username FROM dh_sampling_grades WHERE ((dh_sampling_grades.sample_type IS NULL) OR ((dh_sampling_grades.sample_type)::text <> 'DUP'::text))) dh_sampling_grades_nodup ON (((dh_collars.id)::text = (dh_sampling_grades_nodup.id)::text))) ORDER BY dh_sampling_grades_nodup.id, dh_sampling_grades_nodup.depto;


--
-- Name: gdm_dh_sampling_grades_open_ended_au_tail; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW gdm_dh_sampling_grades_open_ended_au_tail AS
    SELECT gdm_dh_sampling_grades.id, gdm_dh_sampling_grades.x, gdm_dh_sampling_grades.y, gdm_dh_sampling_grades.z, gdm_dh_sampling_grades.length, gdm_dh_sampling_grades.depfrom, gdm_dh_sampling_grades.depto, gdm_dh_sampling_grades.au1_ppm, gdm_dh_sampling_grades.au2_ppm, gdm_dh_sampling_grades.au3_ppm, gdm_dh_sampling_grades.au4_ppm, gdm_dh_sampling_grades.au5_ppm, gdm_dh_sampling_grades.au6_ppm FROM (gdm_dh_sampling_grades JOIN dh_sampling_grades_open_ended_au_tail ON ((((gdm_dh_sampling_grades.id)::text = (dh_sampling_grades_open_ended_au_tail.id)::text) AND (gdm_dh_sampling_grades.depto = dh_sampling_grades_open_ended_au_tail.depto))));


--
-- Name: gdm_dh_sampling_grades_open_ended_au_top; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW gdm_dh_sampling_grades_open_ended_au_top AS
    SELECT gdm_dh_sampling_grades.id, gdm_dh_sampling_grades.x, gdm_dh_sampling_grades.y, gdm_dh_sampling_grades.z, gdm_dh_sampling_grades.length, gdm_dh_sampling_grades.depfrom, gdm_dh_sampling_grades.depto, gdm_dh_sampling_grades.au1_ppm, gdm_dh_sampling_grades.au2_ppm, gdm_dh_sampling_grades.au3_ppm, gdm_dh_sampling_grades.au4_ppm, gdm_dh_sampling_grades.au5_ppm, gdm_dh_sampling_grades.au6_ppm FROM (gdm_dh_sampling_grades JOIN dh_sampling_grades_open_ended_au_top ON ((((gdm_dh_sampling_grades.id)::text = (dh_sampling_grades_open_ended_au_top.id)::text) AND (gdm_dh_sampling_grades.depto = dh_sampling_grades_open_ended_au_top.depto))));


--
-- Name: sections_array; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE sections_array (
    id character varying(20),
    opid integer,
    location character varying,
    title character varying(254),
    srid integer,
    x1 numeric(10,2),
    y1 numeric(10,2),
    z1 numeric(10,2),
    length numeric,
    x2 numeric(10,2),
    y2 numeric(10,2),
    z2 numeric(10,2),
    num integer NOT NULL
);


--
-- Name: gdm_sections_array; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW gdm_sections_array AS
    SELECT sections_array.id, sections_array.opid, sections_array.location, sections_array.title, sections_array.srid, sections_array.x1, sections_array.y1, sections_array.z1, sections_array.length, sections_array.x2, sections_array.y2, sections_array.z2, sections_array.num FROM sections_array WHERE (sections_array.opid IN (SELECT DISTINCT gdm_selection.opid FROM gdm_selection)) ORDER BY sections_array.id;


SET search_path = public, pg_catalog;

--
-- Name: geoch_ana; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE geoch_ana (
    sampl_index integer,
    ana_type character varying(20),
    unit character varying(10),
    det_lim numeric(6,4),
    scheme character varying(20),
    comment character varying(20),
    value numeric(10,3),
    numauto integer NOT NULL,
    opid integer,
    db_update_timestamp timestamp without time zone DEFAULT now(),
    username character varying DEFAULT "current_user"(),
    datasource integer
);


--
-- Name: TABLE geoch_ana; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE geoch_ana IS 'Assay results from geochemistry samples';


--
-- Name: COLUMN geoch_ana.sampl_index; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN geoch_ana.sampl_index IS 'Sample identification related to the geoch_sampling table';


--
-- Name: COLUMN geoch_ana.ana_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN geoch_ana.ana_type IS 'Analysis type ';


--
-- Name: COLUMN geoch_ana.unit; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN geoch_ana.unit IS 'Unit of the analysis ';


--
-- Name: COLUMN geoch_ana.det_lim; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN geoch_ana.det_lim IS 'Analysis detection limit';


--
-- Name: COLUMN geoch_ana.scheme; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN geoch_ana.scheme IS 'Analysis method';


--
-- Name: COLUMN geoch_ana.comment; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN geoch_ana.comment IS 'Some comments';


--
-- Name: COLUMN geoch_ana.value; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN geoch_ana.value IS 'Analysis value';


--
-- Name: COLUMN geoch_ana.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN geoch_ana.numauto IS 'Automatic integer primary key';


--
-- Name: COLUMN geoch_ana.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN geoch_ana.opid IS 'Operation identifier';


--
-- Name: COLUMN geoch_ana.db_update_timestamp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN geoch_ana.db_update_timestamp IS 'Current date and time stamp when data is loaded in table';


--
-- Name: COLUMN geoch_ana.username; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN geoch_ana.username IS 'User (role) which created data record';


--
-- Name: COLUMN geoch_ana.datasource; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN geoch_ana.datasource IS 'Datasource identifier, refers to lex_datasource';


SET search_path = pierre, pg_catalog;

--
-- Name: geoch_ana; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW geoch_ana AS
    SELECT geoch_ana.sampl_index, geoch_ana.ana_type, geoch_ana.unit, geoch_ana.det_lim, geoch_ana.scheme, geoch_ana.comment, geoch_ana.value, geoch_ana.numauto, geoch_ana.opid, geoch_ana.db_update_timestamp, geoch_ana.username, geoch_ana.datasource FROM (public.geoch_ana JOIN public.operation_active ON ((geoch_ana.opid = operation_active.opid)));


SET search_path = public, pg_catalog;

--
-- Name: geoch_sampling; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE geoch_sampling (
    id character varying(20),
    lab_id character varying(50),
    labo_ref character varying(20),
    amc_ref character varying(20),
    recep_date date,
    type character varying(20),
    sampl_index character varying NOT NULL,
    x numeric(15,4),
    y numeric(15,4),
    z numeric(10,4),
    soil_color character varying(50),
    type_sort character varying(20),
    depth_cm numeric(10,2),
    reg_type character varying(20),
    geomorphology character varying(20),
    rock_type character varying(50),
    comment character varying(200),
    utm_zone character varying(3),
    geologist character varying(20),
    float_sampl character varying(20),
    host_rock character varying(200),
    prospect character varying(20),
    spacing character varying(20),
    horizon character varying(20),
    datasource integer,
    date date,
    survey_type character varying(50),
    opid integer,
    grid_line character varying,
    grid_station character varying,
    alteration character varying,
    occ_soil character varying,
    slope character varying,
    slope_dir character varying,
    soil_description character varying,
    db_update_timestamp timestamp without time zone DEFAULT now(),
    username character varying DEFAULT "current_user"(),
    numauto integer NOT NULL
);


--
-- Name: TABLE geoch_sampling; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE geoch_sampling IS 'Geochemistry samples, from soil or stream sediments, location and description';


--
-- Name: COLUMN geoch_sampling.id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN geoch_sampling.id IS 'Identification';


--
-- Name: COLUMN geoch_sampling.lab_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN geoch_sampling.lab_id IS 'Analysis laboratory';


--
-- Name: COLUMN geoch_sampling.labo_ref; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN geoch_sampling.labo_ref IS 'Analysis laboratory report reference';


--
-- Name: COLUMN geoch_sampling.amc_ref; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN geoch_sampling.amc_ref IS 'AMC analysis report reference';


--
-- Name: COLUMN geoch_sampling.recep_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN geoch_sampling.recep_date IS 'Report reception date by AMC';


--
-- Name: COLUMN geoch_sampling.type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN geoch_sampling.type IS 'Analysis type';


--
-- Name: COLUMN geoch_sampling.sampl_index; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN geoch_sampling.sampl_index IS 'Auto increment integer';


--
-- Name: COLUMN geoch_sampling.x; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN geoch_sampling.x IS 'X coordinate, projected in UTM (m)';


--
-- Name: COLUMN geoch_sampling.y; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN geoch_sampling.y IS 'Y coordinate, projected in UTM (m)';


--
-- Name: COLUMN geoch_sampling.z; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN geoch_sampling.z IS 'Z coordinate, projected in UTM (m)';


--
-- Name: COLUMN geoch_sampling.soil_color; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN geoch_sampling.soil_color IS 'Soil color';


--
-- Name: COLUMN geoch_sampling.type_sort; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN geoch_sampling.type_sort IS 'Sort of type';


--
-- Name: COLUMN geoch_sampling.depth_cm; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN geoch_sampling.depth_cm IS 'Sample depth';


--
-- Name: COLUMN geoch_sampling.reg_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN geoch_sampling.reg_type IS 'Type of region';


--
-- Name: COLUMN geoch_sampling.geomorphology; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN geoch_sampling.geomorphology IS 'Some region description';


--
-- Name: COLUMN geoch_sampling.rock_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN geoch_sampling.rock_type IS 'Lithology';


--
-- Name: COLUMN geoch_sampling.comment; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN geoch_sampling.comment IS 'Some comments';


--
-- Name: COLUMN geoch_sampling.utm_zone; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN geoch_sampling.utm_zone IS 'UTM area';


--
-- Name: COLUMN geoch_sampling.geologist; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN geoch_sampling.geologist IS 'geologist';


--
-- Name: COLUMN geoch_sampling.float_sampl; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN geoch_sampling.float_sampl IS 'sample designation (?)';


--
-- Name: COLUMN geoch_sampling.host_rock; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN geoch_sampling.host_rock IS 'host rock';


--
-- Name: COLUMN geoch_sampling.datasource; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN geoch_sampling.datasource IS 'Datasource identifier, refers to lex_datasource';


--
-- Name: COLUMN geoch_sampling.date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN geoch_sampling.date IS 'type of survey (ex : HHGPS)';


--
-- Name: COLUMN geoch_sampling.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN geoch_sampling.opid IS 'Operation identifier';


--
-- Name: COLUMN geoch_sampling.db_update_timestamp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN geoch_sampling.db_update_timestamp IS 'Current date and time stamp when data is loaded in table';


--
-- Name: COLUMN geoch_sampling.username; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN geoch_sampling.username IS 'User (role) which created data record';


--
-- Name: COLUMN geoch_sampling.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN geoch_sampling.numauto IS 'Automatic integer';


SET search_path = pierre, pg_catalog;

--
-- Name: geoch_sampling; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW geoch_sampling AS
    SELECT geoch_sampling.id, geoch_sampling.lab_id, geoch_sampling.labo_ref, geoch_sampling.amc_ref, geoch_sampling.recep_date, geoch_sampling.type, geoch_sampling.sampl_index, geoch_sampling.x, geoch_sampling.y, geoch_sampling.z, geoch_sampling.soil_color, geoch_sampling.type_sort, geoch_sampling.depth_cm, geoch_sampling.reg_type, geoch_sampling.geomorphology, geoch_sampling.rock_type, geoch_sampling.comment, geoch_sampling.utm_zone, geoch_sampling.geologist, geoch_sampling.float_sampl, geoch_sampling.host_rock, geoch_sampling.prospect, geoch_sampling.spacing, geoch_sampling.horizon, geoch_sampling.datasource, geoch_sampling.date, geoch_sampling.survey_type, geoch_sampling.opid, geoch_sampling.grid_line, geoch_sampling.grid_station, geoch_sampling.alteration, geoch_sampling.occ_soil, geoch_sampling.slope, geoch_sampling.slope_dir, geoch_sampling.soil_description, geoch_sampling.db_update_timestamp, geoch_sampling.username, geoch_sampling.numauto FROM (public.geoch_sampling JOIN public.operation_active ON ((geoch_sampling.opid = operation_active.opid)));


SET search_path = public, pg_catalog;

--
-- Name: geoch_sampling_grades; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE geoch_sampling_grades (
    au_ppb numeric,
    numauto integer
)
INHERITS (geoch_sampling);


--
-- Name: TABLE geoch_sampling_grades; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE geoch_sampling_grades IS ' Geochemistry samples with grades; table inherits from geoch_sampling';


--
-- Name: COLUMN geoch_sampling_grades.datasource; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN geoch_sampling_grades.datasource IS 'Datasource identifier, refers to lex_datasource';


--
-- Name: COLUMN geoch_sampling_grades.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN geoch_sampling_grades.opid IS 'Operation identifier';


--
-- Name: COLUMN geoch_sampling_grades.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN geoch_sampling_grades.numauto IS 'Automatic integer primary key';


SET search_path = pierre, pg_catalog;

--
-- Name: geoch_sampling_grades; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW geoch_sampling_grades AS
    SELECT geoch_sampling_grades.id, geoch_sampling_grades.lab_id, geoch_sampling_grades.labo_ref, geoch_sampling_grades.amc_ref, geoch_sampling_grades.recep_date, geoch_sampling_grades.type, geoch_sampling_grades.sampl_index, geoch_sampling_grades.x, geoch_sampling_grades.y, geoch_sampling_grades.z, geoch_sampling_grades.soil_color, geoch_sampling_grades.type_sort, geoch_sampling_grades.depth_cm, geoch_sampling_grades.reg_type, geoch_sampling_grades.geomorphology, geoch_sampling_grades.rock_type, geoch_sampling_grades.comment, geoch_sampling_grades.utm_zone, geoch_sampling_grades.geologist, geoch_sampling_grades.float_sampl, geoch_sampling_grades.host_rock, geoch_sampling_grades.prospect, geoch_sampling_grades.spacing, geoch_sampling_grades.horizon, geoch_sampling_grades.datasource, geoch_sampling_grades.date, geoch_sampling_grades.survey_type, geoch_sampling_grades.opid, geoch_sampling_grades.grid_line, geoch_sampling_grades.grid_station, geoch_sampling_grades.alteration, geoch_sampling_grades.occ_soil, geoch_sampling_grades.slope, geoch_sampling_grades.slope_dir, geoch_sampling_grades.soil_description, geoch_sampling_grades.au_ppb, geoch_sampling_grades.numauto, geoch_sampling_grades.db_update_timestamp, geoch_sampling_grades.username FROM (public.geoch_sampling_grades JOIN public.operation_active ON ((geoch_sampling_grades.opid = operation_active.opid)));


--
-- Name: geoch_sampling_grades_points; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW geoch_sampling_grades_points AS
    SELECT geoch_sampling_grades.id, geoch_sampling_grades.lab_id, geoch_sampling_grades.labo_ref, geoch_sampling_grades.amc_ref, geoch_sampling_grades.recep_date, geoch_sampling_grades.type, geoch_sampling_grades.sampl_index, geoch_sampling_grades.x, geoch_sampling_grades.y, geoch_sampling_grades.z, geoch_sampling_grades.soil_color, geoch_sampling_grades.type_sort, geoch_sampling_grades.depth_cm, geoch_sampling_grades.reg_type, geoch_sampling_grades.geomorphology, geoch_sampling_grades.rock_type, geoch_sampling_grades.comment, geoch_sampling_grades.utm_zone, geoch_sampling_grades.geologist, geoch_sampling_grades.float_sampl, geoch_sampling_grades.host_rock, geoch_sampling_grades.prospect, geoch_sampling_grades.spacing, geoch_sampling_grades.horizon, geoch_sampling_grades.datasource, geoch_sampling_grades.date, geoch_sampling_grades.survey_type, geoch_sampling_grades.opid, geoch_sampling_grades.grid_line, geoch_sampling_grades.grid_station, geoch_sampling_grades.alteration, geoch_sampling_grades.occ_soil, geoch_sampling_grades.slope, geoch_sampling_grades.slope_dir, geoch_sampling_grades.soil_description, geoch_sampling_grades.au_ppb, geoch_sampling_grades.numauto, geoch_sampling_grades.db_update_timestamp, geoch_sampling_grades.username, public.geomfromewkt((((((('SRID= 20136; POINT ('::text || geoch_sampling_grades.x) || ' '::text) || geoch_sampling_grades.y) || ' '::text) || geoch_sampling_grades.z) || ')'::text)) AS geomfromewkt FROM geoch_sampling_grades;


--
-- Name: gps_wpt; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE gps_wpt (
    gid integer,
    numberofpo integer,
    nameofpoin character varying(50),
    altitude character varying(10),
    comment character varying,
    symbol character varying(5),
    display1 character varying(3),
    geolog character varying(10),
    descriptio character varying(254),
    code character varying(4),
    the_geom public.geometry,
    x numeric,
    y numeric,
    date character varying,
    "time" character varying,
    device character varying
);


SET search_path = public, pg_catalog;

--
-- Name: gpy_mag_ground; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE gpy_mag_ground (
    opid integer,
    srid integer,
    x numeric(10,2),
    y numeric(10,2),
    z numeric(10,2),
    x_local numeric(10,2),
    y_local numeric(10,2),
    mag_nanotesla double precision,
    val_corr_mag_nanotesla double precision,
    db_update_timestamp timestamp without time zone DEFAULT now(),
    username character varying DEFAULT "current_user"(),
    numauto integer NOT NULL,
    datasource integer
);


--
-- Name: TABLE gpy_mag_ground; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE gpy_mag_ground IS ' Geophysics: ground mag';


--
-- Name: COLUMN gpy_mag_ground.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN gpy_mag_ground.opid IS 'Operation identifier';


--
-- Name: COLUMN gpy_mag_ground.db_update_timestamp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN gpy_mag_ground.db_update_timestamp IS 'Current date and time stamp when data is loaded in table';


--
-- Name: COLUMN gpy_mag_ground.username; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN gpy_mag_ground.username IS 'User (role) which created data record';


--
-- Name: COLUMN gpy_mag_ground.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN gpy_mag_ground.numauto IS 'Automatic integer primary key';


--
-- Name: COLUMN gpy_mag_ground.datasource; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN gpy_mag_ground.datasource IS 'Datasource identifier, refers to lex_datasource';


SET search_path = pierre, pg_catalog;

--
-- Name: gpy_mag_ground; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW gpy_mag_ground AS
    SELECT gpy_mag_ground.opid, gpy_mag_ground.srid, gpy_mag_ground.x, gpy_mag_ground.y, gpy_mag_ground.z, gpy_mag_ground.x_local, gpy_mag_ground.y_local, gpy_mag_ground.mag_nanotesla, gpy_mag_ground.val_corr_mag_nanotesla, gpy_mag_ground.db_update_timestamp, gpy_mag_ground.username, gpy_mag_ground.numauto, gpy_mag_ground.datasource FROM (public.gpy_mag_ground JOIN public.operation_active ON ((gpy_mag_ground.opid = operation_active.opid)));


SET search_path = public, pg_catalog;

--
-- Name: grade_ctrl; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE grade_ctrl (
    id character varying(4),
    num character varying(10),
    x numeric(10,2),
    y numeric(10,2),
    z numeric(10,2),
    prof numeric(10,2),
    aucy numeric(10,2),
    autot numeric(10,2),
    litho character varying(20),
    old_id character varying(20),
    numauto integer NOT NULL,
    aucy2 numeric(10,2),
    datasource integer,
    opid integer,
    db_update_timestamp timestamp without time zone DEFAULT now(),
    username character varying DEFAULT "current_user"()
);


--
-- Name: TABLE grade_ctrl; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE grade_ctrl IS 'Grade-control samples during mining exploitation';


--
-- Name: COLUMN grade_ctrl.id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN grade_ctrl.id IS 'Quarry and block identification in 4 characters';


--
-- Name: COLUMN grade_ctrl.num; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN grade_ctrl.num IS 'sample number';


--
-- Name: COLUMN grade_ctrl.x; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN grade_ctrl.x IS 'X drill hole collar coordinate, projected in UTM (m)';


--
-- Name: COLUMN grade_ctrl.y; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN grade_ctrl.y IS 'Y drill hole collar coordinate, projected in UTM (m)';


--
-- Name: COLUMN grade_ctrl.z; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN grade_ctrl.z IS 'Z drill hole collar coordinate, projected in UTM (m)';


--
-- Name: COLUMN grade_ctrl.prof; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN grade_ctrl.prof IS 'End of sample depth';


--
-- Name: COLUMN grade_ctrl.aucy; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN grade_ctrl.aucy IS 'Sample cyanidable gold grade (g/t)';


--
-- Name: COLUMN grade_ctrl.autot; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN grade_ctrl.autot IS 'Total gold grade (g/t)';


--
-- Name: COLUMN grade_ctrl.litho; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN grade_ctrl.litho IS 'Sample lithology in GDM or Sermine code';


--
-- Name: COLUMN grade_ctrl.old_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN grade_ctrl.old_id IS 'Quarry and block old identification ';


--
-- Name: COLUMN grade_ctrl.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN grade_ctrl.numauto IS 'Automatic integer primary key';


--
-- Name: COLUMN grade_ctrl.datasource; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN grade_ctrl.datasource IS 'Datasource identifier, refers to lex_datasource';


--
-- Name: COLUMN grade_ctrl.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN grade_ctrl.opid IS 'Operation identifier';


--
-- Name: COLUMN grade_ctrl.db_update_timestamp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN grade_ctrl.db_update_timestamp IS 'Current date and time stamp when data is loaded in table';


--
-- Name: COLUMN grade_ctrl.username; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN grade_ctrl.username IS 'User (role) which created data record';


SET search_path = pierre, pg_catalog;

--
-- Name: grade_ctrl; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW grade_ctrl AS
    SELECT grade_ctrl.id, grade_ctrl.num, grade_ctrl.x, grade_ctrl.y, grade_ctrl.z, grade_ctrl.prof, grade_ctrl.aucy, grade_ctrl.autot, grade_ctrl.litho, grade_ctrl.old_id, grade_ctrl.numauto, grade_ctrl.aucy2, grade_ctrl.datasource, grade_ctrl.opid, grade_ctrl.db_update_timestamp, grade_ctrl.username FROM (public.grade_ctrl JOIN public.operation_active ON ((grade_ctrl.opid = operation_active.opid)));


--
-- Name: grid; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE grid (
    line character varying,
    station character varying,
    x numeric,
    y numeric,
    srid integer,
    numauto integer NOT NULL,
    opid integer
);


--
-- Name: grid_numauto_seq; Type: SEQUENCE; Schema: pierre; Owner: -
--

CREATE SEQUENCE grid_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: grid_numauto_seq; Type: SEQUENCE OWNED BY; Schema: pierre; Owner: -
--

ALTER SEQUENCE grid_numauto_seq OWNED BY grid.numauto;


--
-- Name: rock_ana; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE rock_ana (
    hammer_index integer,
    value numeric(10,2),
    numauto integer NOT NULL,
    shipment date,
    reception date,
    amc_batch character varying(20),
    labo_batch character varying(20),
    comments character varying(20),
    ticket_id character varying(25),
    ana_type integer,
    opid integer
);


--
-- Name: COLUMN rock_ana.hammer_index; Type: COMMENT; Schema: pierre; Owner: -
--

COMMENT ON COLUMN rock_ana.hammer_index IS 'Sample identification related to the hammer_sampling table';


--
-- Name: COLUMN rock_ana.value; Type: COMMENT; Schema: pierre; Owner: -
--

COMMENT ON COLUMN rock_ana.value IS 'Analysis value';


--
-- Name: COLUMN rock_ana.numauto; Type: COMMENT; Schema: pierre; Owner: -
--

COMMENT ON COLUMN rock_ana.numauto IS 'auto increment integer';


--
-- Name: hammer_ana_numauto_seq; Type: SEQUENCE; Schema: pierre; Owner: -
--

CREATE SEQUENCE hammer_ana_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: hammer_ana_numauto_seq; Type: SEQUENCE OWNED BY; Schema: pierre; Owner: -
--

ALTER SEQUENCE hammer_ana_numauto_seq OWNED BY rock_ana.numauto;


SET search_path = public, pg_catalog;

--
-- Name: index_geo_documentation; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE index_geo_documentation (
    id integer NOT NULL,
    title character varying(100),
    lat_min numeric(20,8),
    lat_max numeric(20,8),
    lon_min numeric(20,8),
    lon_max numeric(20,8),
    opid integer,
    db_update_timestamp timestamp without time zone DEFAULT now(),
    username character varying DEFAULT "current_user"(),
    numauto integer NOT NULL,
    datasource integer,
    filename character varying
);


--
-- Name: TABLE index_geo_documentation; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE index_geo_documentation IS 'Index for any documentation, with lat-lon rectangles, so that any documentation may be accessed geographically';


--
-- Name: COLUMN index_geo_documentation.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN index_geo_documentation.opid IS 'Operation identifier';


--
-- Name: COLUMN index_geo_documentation.db_update_timestamp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN index_geo_documentation.db_update_timestamp IS 'Current date and time stamp when data is loaded in table';


--
-- Name: COLUMN index_geo_documentation.username; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN index_geo_documentation.username IS 'User (role) which created data record';


--
-- Name: COLUMN index_geo_documentation.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN index_geo_documentation.numauto IS 'Automatic integer primary key';


--
-- Name: COLUMN index_geo_documentation.datasource; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN index_geo_documentation.datasource IS 'Datasource identifier, refers to lex_datasource';


SET search_path = pierre, pg_catalog;

--
-- Name: index_geo_documentation; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW index_geo_documentation AS
    SELECT index_geo_documentation.id, index_geo_documentation.title, index_geo_documentation.lat_min, index_geo_documentation.lat_max, index_geo_documentation.lon_min, index_geo_documentation.lon_max, index_geo_documentation.opid, index_geo_documentation.db_update_timestamp, index_geo_documentation.username, index_geo_documentation.numauto, index_geo_documentation.datasource, index_geo_documentation.filename FROM (public.index_geo_documentation JOIN public.operation_active ON ((index_geo_documentation.opid = operation_active.opid)));


--
-- Name: index_geo_documentation_rectangles; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW index_geo_documentation_rectangles AS
    SELECT index_geo_documentation.id, index_geo_documentation.title, index_geo_documentation.lat_min, index_geo_documentation.lat_max, index_geo_documentation.lon_min, index_geo_documentation.lon_max, public.geomfromtext((((((((('RECTANGLE ('::text || index_geo_documentation.lon_min) || ' '::text) || index_geo_documentation.lat_min) || ' '::text) || index_geo_documentation.lon_max) || ' '::text) || index_geo_documentation.lat_max) || '), 20136'::text)) AS geomfromtext FROM index_geo_documentation;


SET search_path = public, pg_catalog;

--
-- Name: lab_ana_batches_expedition; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE lab_ana_batches_expedition (
    opid integer,
    batch_id integer,
    labname character varying(50),
    expedition_id character varying(20),
    order_id character varying(20),
    description character varying,
    preparation character varying(10),
    process_labo character varying(10),
    scheme character varying,
    shipment_date date,
    sent_to_lab boolean,
    reception_date date,
    results_received boolean,
    lab_batches character varying,
    comments character varying,
    samples_amount integer,
    sample_id_first character varying,
    sample_id_last character varying,
    db_update_timestamp timestamp without time zone DEFAULT now(),
    username character varying DEFAULT "current_user"(),
    numauto integer NOT NULL,
    datasource integer
);


--
-- Name: TABLE lab_ana_batches_expedition; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE lab_ana_batches_expedition IS 'Batches of samples sent for analysis';


--
-- Name: COLUMN lab_ana_batches_expedition.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_batches_expedition.opid IS 'Operation identifier';


--
-- Name: COLUMN lab_ana_batches_expedition.batch_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_batches_expedition.batch_id IS 'Batch identifier; recommended is 7-digit number, year and sequential number on 3 digits';


--
-- Name: COLUMN lab_ana_batches_expedition.labname; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_batches_expedition.labname IS 'Destination assay laboratory name';


--
-- Name: COLUMN lab_ana_batches_expedition.expedition_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_batches_expedition.expedition_id IS 'Identifier of expedition (this is usually useless, if batches correspond to expeditions)';


--
-- Name: COLUMN lab_ana_batches_expedition.order_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_batches_expedition.order_id IS 'Order identifier (DA number)';


--
-- Name: COLUMN lab_ana_batches_expedition.description; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_batches_expedition.description IS 'Quick description of samples: rocks, soils, core, chips, rocktypes if relevant, etc.';


--
-- Name: COLUMN lab_ana_batches_expedition.preparation; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_batches_expedition.preparation IS 'Preparation of samples prior to expedition to lab (crushing, grinding, splitting, etc.)';


--
-- Name: COLUMN lab_ana_batches_expedition.process_labo; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_batches_expedition.process_labo IS 'Required preparation of samples in laboratory';


--
-- Name: COLUMN lab_ana_batches_expedition.scheme; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_batches_expedition.scheme IS 'Required assay scheme';


--
-- Name: COLUMN lab_ana_batches_expedition.shipment_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_batches_expedition.shipment_date IS 'Date of batch expedition to laboratory';


--
-- Name: COLUMN lab_ana_batches_expedition.sent_to_lab; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_batches_expedition.sent_to_lab IS 'Boolean: batch sent to laboratory or not';


--
-- Name: COLUMN lab_ana_batches_expedition.reception_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_batches_expedition.reception_date IS 'Date of batch received';


--
-- Name: COLUMN lab_ana_batches_expedition.results_received; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_batches_expedition.results_received IS 'Boolean: results received for this batch (useful if laboratory returns results according to expedition batches (recommended); irrelevant otherwise)';


--
-- Name: COLUMN lab_ana_batches_expedition.lab_batches; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_batches_expedition.lab_batches IS 'List of laboratory batches, if any; useless if laboratory batches correspond to expedition batches';


--
-- Name: COLUMN lab_ana_batches_expedition.comments; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_batches_expedition.comments IS 'Specific comments, reason for assay (control re-assay, re-sampling, routine, etc.)';


--
-- Name: COLUMN lab_ana_batches_expedition.samples_amount; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_batches_expedition.samples_amount IS 'Number of samples';


--
-- Name: COLUMN lab_ana_batches_expedition.sample_id_first; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_batches_expedition.sample_id_first IS 'First sample identifier; only relevant if samples in sequence';


--
-- Name: COLUMN lab_ana_batches_expedition.sample_id_last; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_batches_expedition.sample_id_last IS 'Last sample identifier; only relevant if samples in sequence';


--
-- Name: COLUMN lab_ana_batches_expedition.db_update_timestamp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_batches_expedition.db_update_timestamp IS 'Current date and time stamp when data is loaded in table';


--
-- Name: COLUMN lab_ana_batches_expedition.username; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_batches_expedition.username IS 'User (role) which created data record';


--
-- Name: COLUMN lab_ana_batches_expedition.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_batches_expedition.numauto IS 'Automatic integer primary key';


--
-- Name: COLUMN lab_ana_batches_expedition.datasource; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_batches_expedition.datasource IS 'Datasource identifier, refers to lex_datasource';


SET search_path = pierre, pg_catalog;

--
-- Name: lab_ana_batches_expedition; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW lab_ana_batches_expedition AS
    SELECT lab_ana_batches_expedition.opid, lab_ana_batches_expedition.batch_id, lab_ana_batches_expedition.labname, lab_ana_batches_expedition.expedition_id, lab_ana_batches_expedition.order_id, lab_ana_batches_expedition.description, lab_ana_batches_expedition.preparation, lab_ana_batches_expedition.process_labo, lab_ana_batches_expedition.scheme, lab_ana_batches_expedition.shipment_date, lab_ana_batches_expedition.sent_to_lab, lab_ana_batches_expedition.reception_date, lab_ana_batches_expedition.results_received, lab_ana_batches_expedition.lab_batches, lab_ana_batches_expedition.comments, lab_ana_batches_expedition.samples_amount, lab_ana_batches_expedition.sample_id_first, lab_ana_batches_expedition.sample_id_last, lab_ana_batches_expedition.db_update_timestamp, lab_ana_batches_expedition.username, lab_ana_batches_expedition.numauto, lab_ana_batches_expedition.datasource FROM (public.lab_ana_batches_expedition JOIN public.operation_active ON ((lab_ana_batches_expedition.opid = operation_active.opid)));


SET search_path = public, pg_catalog;

--
-- Name: lab_ana_batches_reception; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE lab_ana_batches_reception (
    opid integer,
    jobno character varying,
    generic_txt character varying,
    numauto integer NOT NULL,
    datasource integer,
    labname character varying,
    client character varying,
    validated date,
    number_of_samples integer,
    project character varying,
    shipment_id character varying,
    p_o_number character varying,
    received date,
    db_update_timestamp timestamp without time zone DEFAULT now(),
    username character varying DEFAULT "current_user"(),
    certificate_comments character varying,
    info_suppl_json character varying
);


--
-- Name: TABLE lab_ana_batches_reception; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE lab_ana_batches_reception IS 'Batches of samples results received from laboratory';


--
-- Name: COLUMN lab_ana_batches_reception.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_batches_reception.opid IS 'Operation identifier';


--
-- Name: COLUMN lab_ana_batches_reception.jobno; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_batches_reception.jobno IS 'As in files received from laboratory: job number';


--
-- Name: COLUMN lab_ana_batches_reception.generic_txt; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_batches_reception.generic_txt IS 'Generic text, containing information from original results file as is, unformatted';


--
-- Name: COLUMN lab_ana_batches_reception.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_batches_reception.numauto IS 'Automatic integer primary key';


--
-- Name: COLUMN lab_ana_batches_reception.datasource; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_batches_reception.datasource IS 'Datasource identifier, refers to lex_datasource';


--
-- Name: COLUMN lab_ana_batches_reception.labname; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_batches_reception.labname IS 'As in files received from laboratory: full laboratory name';


--
-- Name: COLUMN lab_ana_batches_reception.client; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_batches_reception.client IS 'As in files received from laboratory: client name';


--
-- Name: COLUMN lab_ana_batches_reception.validated; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_batches_reception.validated IS 'As in files received from laboratory: validation date';


--
-- Name: COLUMN lab_ana_batches_reception.number_of_samples; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_batches_reception.number_of_samples IS 'As in files received from laboratory: number of samples';


--
-- Name: COLUMN lab_ana_batches_reception.project; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_batches_reception.project IS 'As in files received from laboratory: project name';


--
-- Name: COLUMN lab_ana_batches_reception.shipment_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_batches_reception.shipment_id IS 'As in files received from laboratory: shipment id';


--
-- Name: COLUMN lab_ana_batches_reception.p_o_number; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_batches_reception.p_o_number IS 'As in files received from laboratory: P.O. number';


--
-- Name: COLUMN lab_ana_batches_reception.received; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_batches_reception.received IS 'As in files received from laboratory: reception date';


--
-- Name: COLUMN lab_ana_batches_reception.db_update_timestamp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_batches_reception.db_update_timestamp IS 'Current date and time stamp when data is loaded in table';


--
-- Name: COLUMN lab_ana_batches_reception.username; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_batches_reception.username IS 'User (role) which created data record';


--
-- Name: COLUMN lab_ana_batches_reception.certificate_comments; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_batches_reception.certificate_comments IS 'As in files received from laboratory: certificate comments';


--
-- Name: COLUMN lab_ana_batches_reception.info_suppl_json; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_batches_reception.info_suppl_json IS 'Supplementary information, serialised as a JSON (validated by json_xs)';


SET search_path = pierre, pg_catalog;

--
-- Name: lab_ana_batches_reception; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW lab_ana_batches_reception AS
    SELECT lab_ana_batches_reception.opid, lab_ana_batches_reception.jobno, lab_ana_batches_reception.generic_txt, lab_ana_batches_reception.numauto, lab_ana_batches_reception.datasource, lab_ana_batches_reception.labname, lab_ana_batches_reception.client, lab_ana_batches_reception.validated, lab_ana_batches_reception.number_of_samples, lab_ana_batches_reception.project, lab_ana_batches_reception.shipment_id, lab_ana_batches_reception.p_o_number, lab_ana_batches_reception.received, lab_ana_batches_reception.db_update_timestamp, lab_ana_batches_reception.username, lab_ana_batches_reception.certificate_comments, lab_ana_batches_reception.info_suppl_json FROM (public.lab_ana_batches_reception JOIN public.operation_active ON ((lab_ana_batches_reception.opid = operation_active.opid)));


--
-- Name: lab_ana_batches_reception_18_corr; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE lab_ana_batches_reception_18_corr (
    opid integer,
    jobno character varying,
    generic_txt character varying,
    numauto integer,
    datasource integer,
    labname character varying,
    client character varying,
    validated date,
    number_of_samples integer,
    project character varying,
    shipment_id character varying,
    p_o_number character varying,
    received date,
    db_update_timestamp timestamp without time zone,
    username character varying,
    certificate_comments character varying,
    info_suppl_json character varying
);


SET search_path = public, pg_catalog;

--
-- Name: lab_ana_qaqc_results; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE lab_ana_qaqc_results (
    opid integer,
    jobno character varying,
    generic_txt_col1 character varying,
    generic_txt_col2 character varying,
    generic_txt_col3 character varying,
    generic_txt_col4 character varying,
    generic_txt_col5 character varying,
    datasource integer,
    numauto integer NOT NULL,
    db_update_timestamp timestamp without time zone DEFAULT now(),
    username character varying DEFAULT "current_user"()
);


--
-- Name: TABLE lab_ana_qaqc_results; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE lab_ana_qaqc_results IS 'Quality control assay results, internal to analytical laboratory';


--
-- Name: COLUMN lab_ana_qaqc_results.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_qaqc_results.opid IS 'Operation identifier';


--
-- Name: COLUMN lab_ana_qaqc_results.jobno; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_qaqc_results.jobno IS 'Job number';


--
-- Name: COLUMN lab_ana_qaqc_results.generic_txt_col1; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_qaqc_results.generic_txt_col1 IS 'Generic text field, receiving any text from original file, as is';


--
-- Name: COLUMN lab_ana_qaqc_results.generic_txt_col2; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_qaqc_results.generic_txt_col2 IS 'Generic text field, receiving any text from original file, as is';


--
-- Name: COLUMN lab_ana_qaqc_results.generic_txt_col3; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_qaqc_results.generic_txt_col3 IS 'Generic text field, receiving any text from original file, as is';


--
-- Name: COLUMN lab_ana_qaqc_results.generic_txt_col4; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_qaqc_results.generic_txt_col4 IS 'Generic text field, receiving any text from original file, as is';


--
-- Name: COLUMN lab_ana_qaqc_results.generic_txt_col5; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_qaqc_results.generic_txt_col5 IS 'Generic text field, receiving any text from original file, as is';


--
-- Name: COLUMN lab_ana_qaqc_results.datasource; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_qaqc_results.datasource IS 'Datasource identifier, refers to lex_datasource';


--
-- Name: COLUMN lab_ana_qaqc_results.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_qaqc_results.numauto IS 'Automatic integer primary key';


--
-- Name: COLUMN lab_ana_qaqc_results.db_update_timestamp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_qaqc_results.db_update_timestamp IS 'Current date and time stamp when data is loaded in table';


--
-- Name: COLUMN lab_ana_qaqc_results.username; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lab_ana_qaqc_results.username IS 'User (role) which created data record';


SET search_path = pierre, pg_catalog;

--
-- Name: lab_ana_qaqc_results; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW lab_ana_qaqc_results AS
    SELECT lab_ana_qaqc_results.opid, lab_ana_qaqc_results.jobno, lab_ana_qaqc_results.generic_txt_col1, lab_ana_qaqc_results.generic_txt_col2, lab_ana_qaqc_results.generic_txt_col3, lab_ana_qaqc_results.generic_txt_col4, lab_ana_qaqc_results.generic_txt_col5, lab_ana_qaqc_results.datasource, lab_ana_qaqc_results.numauto, lab_ana_qaqc_results.db_update_timestamp, lab_ana_qaqc_results.username FROM (public.lab_ana_qaqc_results JOIN public.operation_active ON ((lab_ana_qaqc_results.opid = operation_active.opid)));


--
-- Name: lab_ana_results_columns_count; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW lab_ana_results_columns_count AS
    SELECT eav.sample_id FROM (SELECT tmp_lab_ana_results.opid, tmp_lab_ana_results.sample_id, tmp_lab_ana_results.colid, tmp_lab_ana_results.value_num FROM tmp_lab_ana_results) eav GROUP BY eav.sample_id;


--
-- Name: lab_ana_results_columns_max; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW lab_ana_results_columns_max AS
    SELECT eav.sample_id FROM (SELECT tmp_lab_ana_results.opid, tmp_lab_ana_results.sample_id, tmp_lab_ana_results.colid, tmp_lab_ana_results.value_num FROM tmp_lab_ana_results) eav GROUP BY eav.sample_id;


--
-- Name: lab_ana_results_columns_min; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW lab_ana_results_columns_min AS
    SELECT eav.sample_id FROM (SELECT tmp_lab_ana_results.opid, tmp_lab_ana_results.sample_id, tmp_lab_ana_results.colid, tmp_lab_ana_results.value_num FROM tmp_lab_ana_results) eav GROUP BY eav.sample_id;


--
-- Name: lab_analysis_icp; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE lab_analysis_icp (
    num integer,
    sample_id character varying(20),
    elem_code character varying(8),
    unit character varying(4),
    value numeric(20,2),
    batch_id character varying,
    opid integer
);


--
-- Name: layer_styles; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE layer_styles (
    id integer NOT NULL,
    f_table_catalog character varying(256),
    f_table_schema character varying(256),
    f_table_name character varying(256),
    f_geometry_column character varying(256),
    stylename character varying(30),
    styleqml xml,
    stylesld xml,
    useasdefault boolean,
    description text,
    owner character varying(30),
    ui xml,
    update_time timestamp without time zone DEFAULT now()
);


--
-- Name: layer_styles_id_seq; Type: SEQUENCE; Schema: pierre; Owner: -
--

CREATE SEQUENCE layer_styles_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: layer_styles_id_seq; Type: SEQUENCE OWNED BY; Schema: pierre; Owner: -
--

ALTER SEQUENCE layer_styles_id_seq OWNED BY layer_styles.id;


SET search_path = public, pg_catalog;

--
-- Name: lex_codes; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE lex_codes (
    opid integer,
    tablename text,
    field text,
    code character varying,
    description character varying,
    datasource integer,
    numauto integer NOT NULL,
    comments character varying,
    db_update_timestamp timestamp without time zone DEFAULT now(),
    username character varying DEFAULT "current_user"()
);


--
-- Name: TABLE lex_codes; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE lex_codes IS 'General look-up table with codes for various tables and coded fields';


--
-- Name: COLUMN lex_codes.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lex_codes.opid IS 'Operation identifier';


--
-- Name: COLUMN lex_codes.datasource; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lex_codes.datasource IS 'Datasource identifier, refers to lex_datasource';


--
-- Name: COLUMN lex_codes.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lex_codes.numauto IS 'Automatic integer primary key';


--
-- Name: COLUMN lex_codes.db_update_timestamp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lex_codes.db_update_timestamp IS 'Current date and time stamp when data is loaded in table';


--
-- Name: COLUMN lex_codes.username; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lex_codes.username IS 'User (role) which created data record';


SET search_path = pierre, pg_catalog;

--
-- Name: lex_codes; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW lex_codes AS
    SELECT lex_codes.opid, lex_codes.tablename, lex_codes.field, lex_codes.code, lex_codes.description, lex_codes.datasource, lex_codes.numauto, lex_codes.comments, lex_codes.db_update_timestamp, lex_codes.username FROM (public.lex_codes JOIN public.operation_active ON ((lex_codes.opid = operation_active.opid)));


SET search_path = public, pg_catalog;

--
-- Name: lex_datasource; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE lex_datasource (
    opid integer,
    filename character varying(500),
    comments character varying,
    datasource_id integer NOT NULL,
    db_update_timestamp timestamp without time zone DEFAULT now(),
    username character varying DEFAULT "current_user"(),
    numauto integer NOT NULL
);


--
-- Name: TABLE lex_datasource; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE lex_datasource IS 'Lexicon of data sources, keeping track of imported file, for reference';


--
-- Name: COLUMN lex_datasource.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lex_datasource.opid IS 'Operation identifier';


--
-- Name: COLUMN lex_datasource.filename; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lex_datasource.filename IS 'Data imported: file name with full path, to be kept for permanent reference';


--
-- Name: COLUMN lex_datasource.comments; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lex_datasource.comments IS 'Various comments';


--
-- Name: COLUMN lex_datasource.datasource_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lex_datasource.datasource_id IS 'datasource field in various tables refer to this datasource_id field';


--
-- Name: COLUMN lex_datasource.db_update_timestamp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lex_datasource.db_update_timestamp IS 'Current date and time stamp when data is loaded in table';


--
-- Name: COLUMN lex_datasource.username; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lex_datasource.username IS 'User (role) which created data record';


--
-- Name: COLUMN lex_datasource.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lex_datasource.numauto IS 'Automatic integer primary key';


SET search_path = pierre, pg_catalog;

--
-- Name: lex_datasource; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW lex_datasource AS
    SELECT lex_datasource.opid, lex_datasource.filename, lex_datasource.comments, lex_datasource.datasource_id, lex_datasource.db_update_timestamp, lex_datasource.username, lex_datasource.numauto FROM (public.lex_datasource JOIN public.operation_active ON ((lex_datasource.opid = operation_active.opid)));


SET search_path = public, pg_catalog;

--
-- Name: lex_standard; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE lex_standard (
    std_id character varying NOT NULL,
    unit character(5) NOT NULL,
    element character(5) NOT NULL,
    value numeric NOT NULL,
    std_dev numeric,
    interval_conf numeric,
    std_origin character(25),
    type_analyse character(25) NOT NULL,
    numauto integer NOT NULL,
    opid integer,
    db_update_timestamp timestamp without time zone DEFAULT now(),
    username character varying DEFAULT "current_user"(),
    datasource integer
);


--
-- Name: TABLE lex_standard; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE lex_standard IS 'table contenant les valeurs des standards or et multi elements';


--
-- Name: COLUMN lex_standard.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lex_standard.numauto IS 'Automatic integer primary key';


--
-- Name: COLUMN lex_standard.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lex_standard.opid IS 'Operation identifier';


--
-- Name: COLUMN lex_standard.db_update_timestamp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lex_standard.db_update_timestamp IS 'Current date and time stamp when data is loaded in table';


--
-- Name: COLUMN lex_standard.username; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lex_standard.username IS 'User (role) which created data record';


--
-- Name: COLUMN lex_standard.datasource; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN lex_standard.datasource IS 'Datasource identifier, refers to lex_datasource';


SET search_path = pierre, pg_catalog;

--
-- Name: lex_standard; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW lex_standard AS
    SELECT lex_standard.std_id, lex_standard.unit, lex_standard.element, lex_standard.value, lex_standard.std_dev, lex_standard.interval_conf, lex_standard.std_origin, lex_standard.type_analyse, lex_standard.numauto, lex_standard.opid, lex_standard.db_update_timestamp, lex_standard.username, lex_standard.datasource FROM (public.lex_standard JOIN public.operation_active ON ((lex_standard.opid = operation_active.opid)));


SET search_path = public, pg_catalog;

--
-- Name: licences; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE licences (
    opid integer,
    licence_name character varying(50),
    operator character varying(20),
    year integer,
    lat_min numeric(10,5) NOT NULL,
    lon_min numeric(10,5) NOT NULL,
    lat_max numeric(10,5) NOT NULL,
    lon_max numeric(10,5) NOT NULL,
    comments character varying(500),
    db_update_timestamp timestamp without time zone DEFAULT now(),
    username character varying DEFAULT "current_user"(),
    numauto integer NOT NULL,
    datasource integer
);


--
-- Name: TABLE licences; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE licences IS 'Licences, tenements';


--
-- Name: COLUMN licences.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN licences.opid IS 'Operation identifier';


--
-- Name: COLUMN licences.licence_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN licences.licence_name IS 'Licence official name, as reported on legal documents';


--
-- Name: COLUMN licences.operator; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN licences.operator IS 'Operator, owner of licence';


--
-- Name: COLUMN licences.year; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN licences.year IS 'Year when information is valid';


--
-- Name: COLUMN licences.lat_min; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN licences.lat_min IS 'Minimum latitude';


--
-- Name: COLUMN licences.lon_min; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN licences.lon_min IS 'Minimum longitude';


--
-- Name: COLUMN licences.lat_max; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN licences.lat_max IS 'Maximum latitude';


--
-- Name: COLUMN licences.lon_max; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN licences.lon_max IS 'Maximum longitude';


--
-- Name: COLUMN licences.comments; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN licences.comments IS 'Comments';


--
-- Name: COLUMN licences.db_update_timestamp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN licences.db_update_timestamp IS 'Current date and time stamp when data is loaded in table';


--
-- Name: COLUMN licences.username; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN licences.username IS 'User (role) which created data record';


--
-- Name: COLUMN licences.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN licences.numauto IS 'Automatic integer';


--
-- Name: COLUMN licences.datasource; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN licences.datasource IS 'Datasource identifier, refers to lex_datasource';


SET search_path = pierre, pg_catalog;

--
-- Name: licences; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW licences AS
    SELECT licences.opid, licences.licence_name, licences.operator, licences.year, licences.lat_min, licences.lon_min, licences.lat_max, licences.lon_max, licences.comments, licences.db_update_timestamp, licences.username, licences.numauto, licences.datasource FROM (public.licences JOIN public.operation_active ON ((licences.opid = operation_active.opid)));


--
-- Name: licences_quadrangles; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW licences_quadrangles AS
    SELECT licences.opid, licences.licence_name, licences.operator, licences.year, licences.lat_min, licences.lon_min, licences.lat_max, licences.lon_max, licences.comments, licences.db_update_timestamp, licences.username, licences.numauto, licences.datasource, public.geomfromewkt((((((((((((((((((((('SRID=4326;POLYGON('::text || licences.lon_min) || ' '::text) || licences.lat_max) || ','::text) || licences.lon_max) || ' '::text) || licences.lat_max) || ','::text) || licences.lon_max) || ' '::text) || licences.lat_min) || ','::text) || licences.lon_min) || ' '::text) || licences.lat_min) || ','::text) || licences.lon_min) || ' '::text) || licences.lat_max) || ')'::text)) AS geomfromewkt FROM licences ORDER BY licences.licence_name;


--
-- Name: locations; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW locations AS
    SELECT locations.operation, locations.location, locations.full_name, locations.lat_min, locations.lon_min, locations.lat_max, locations.lon_max, locations.opid, locations.db_update_timestamp, locations.username FROM (zz_poubelle.locations JOIN public.operation_active ON ((locations.opid = operation_active.opid)));


SET search_path = public, pg_catalog;

--
-- Name: mag_declination; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE mag_declination (
    opid integer,
    mag_decl numeric,
    numauto integer NOT NULL,
    date date,
    db_update_timestamp timestamp without time zone DEFAULT now(),
    username character varying DEFAULT "current_user"(),
    datasource integer
);


--
-- Name: TABLE mag_declination; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE mag_declination IS 'Magnetic declination';


--
-- Name: COLUMN mag_declination.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mag_declination.opid IS 'Operation identifier';


--
-- Name: COLUMN mag_declination.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mag_declination.numauto IS 'Automatic integer primary key';


--
-- Name: COLUMN mag_declination.db_update_timestamp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mag_declination.db_update_timestamp IS 'Current date and time stamp when data is loaded in table';


--
-- Name: COLUMN mag_declination.username; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mag_declination.username IS 'User (role) which created data record';


--
-- Name: COLUMN mag_declination.datasource; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mag_declination.datasource IS 'Datasource identifier, refers to lex_datasource';


SET search_path = pierre, pg_catalog;

--
-- Name: mag_declination; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW mag_declination AS
    SELECT mag_declination.opid, mag_declination.mag_decl, mag_declination.numauto, mag_declination.date, mag_declination.db_update_timestamp, mag_declination.username, mag_declination.datasource FROM (public.mag_declination JOIN public.operation_active ON ((mag_declination.opid = operation_active.opid)));


SET search_path = public, pg_catalog;

--
-- Name: occurrences; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE occurrences (
    numauto integer,
    name character varying(50),
    status character varying(10),
    description character varying(254),
    w_done character varying(254),
    w_todo character varying(254),
    geom geometry,
    code character varying(20),
    opid integer,
    zone character varying,
    db_update_timestamp timestamp without time zone DEFAULT now(),
    username character varying DEFAULT "current_user"(),
    datasource integer,
    comments character varying,
    CONSTRAINT chk_status CHECK (((status)::text = ANY ((ARRAY['OCCUR'::character varying, 'OREB'::character varying, 'MINE'::character varying, 'MINED'::character varying, 'MCO'::character varying, 'DISTRICT'::character varying])::text[]))),
    CONSTRAINT enforce_dims_geom CHECK ((ndims(geom) = 2)),
    CONSTRAINT enforce_geotype_geom CHECK (((geometrytype(geom) = 'POINT'::text) OR (geom IS NULL))),
    CONSTRAINT enforce_srid_geom CHECK ((srid(geom) = 4326))
);


--
-- Name: TABLE occurrences; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE occurrences IS 'Occurences table: targets, mines, showings, deposits, mines. Compiled from various tables, and updated.';


--
-- Name: COLUMN occurrences.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN occurrences.numauto IS 'Automatic integer primary key';


--
-- Name: COLUMN occurrences.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN occurrences.name IS 'Occurence name';


--
-- Name: COLUMN occurrences.status; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN occurrences.status IS 'Status: OCCUR = occurence ; OREB = orebody ; MINE = active mine ; MINED = exploited, depleted mine';


--
-- Name: COLUMN occurrences.description; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN occurrences.description IS 'Occurence description: geological context, significant figures at current stage of exploration or exploitation';


--
-- Name: COLUMN occurrences.w_done; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN occurrences.w_done IS 'Exploration work done, codified field: PROSPection (rock sampling on surface), SOIL geochemistry, MAPping, DECAPage, TRenches, Drill Holes';


--
-- Name: COLUMN occurrences.w_todo; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN occurrences.w_todo IS 'Exploration work to be done, codified field: PROSPection (rock sampling on surface), SOIL geochemistry, MAPping, DECAPage, TRenches, Drill Holes';


--
-- Name: COLUMN occurrences.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN occurrences.opid IS 'Operation identifier';


--
-- Name: COLUMN occurrences.db_update_timestamp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN occurrences.db_update_timestamp IS 'Current date and time stamp when data is loaded in table';


--
-- Name: COLUMN occurrences.username; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN occurrences.username IS 'User (role) which created data record';


--
-- Name: COLUMN occurrences.datasource; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN occurrences.datasource IS 'Datasource identifier, refers to lex_datasource';


SET search_path = pierre, pg_catalog;

--
-- Name: occurrences; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW occurrences AS
    SELECT occurrences.numauto, occurrences.name, occurrences.status, occurrences.description, occurrences.w_done, occurrences.w_todo, occurrences.geom, occurrences.code, occurrences.opid, occurrences.zone, occurrences.db_update_timestamp, occurrences.username, occurrences.datasource, occurrences.comments FROM (public.occurrences JOIN public.operation_active ON ((occurrences.opid = operation_active.opid)));


--
-- Name: occurrences_; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW occurrences_ AS
    SELECT occurrences.numauto, occurrences.name, occurrences.status, public.st_x(occurrences.geom) AS x, public.st_y(occurrences.geom) AS y, occurrences.description, occurrences.w_done, occurrences.w_todo, ''::character varying AS geol_poten, ''::character varying AS grade, ''::character varying AS type, ''::character varying AS code_typ, 0 AS size, ''::character varying AS au, ''::character varying AS trenches, ''::character varying AS coredrill, ''::character varying AS pdrill, ''::character varying AS max_grade, ''::character varying AS length, ''::character varying AS thickness, ''::character varying AS code_indic, occurrences.geom, 0 AS num_code, occurrences.code, occurrences.opid, public.srid(occurrences.geom) AS srid, occurrences.zone, public.st_z(occurrences.geom) AS z FROM (public.occurrences JOIN public.operation_active ON ((occurrences.opid = operation_active.opid)));


--
-- Name: okz_dh_litho_codes_ancien; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE okz_dh_litho_codes_ancien (
    opid integer,
    id character varying(20),
    depfrom numeric(10,2),
    depto numeric(10,2),
    code1 character varying(4),
    code2 character varying(4),
    code3 character varying(4),
    code4 character varying(4)
);


--
-- Name: okz_dh_tech_old_version_percentages; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE okz_dh_tech_old_version_percentages (
    id character varying(20),
    depfrom numeric(10,2),
    depto numeric(10,2),
    drilled_len numeric(10,2),
    reco_len numeric(10,2),
    percent_reco numeric(5,2),
    rqd_len numeric(10,2),
    percent_rqd numeric(5,2),
    diam character varying(10),
    numauto integer,
    datasource integer,
    opid integer,
    comments character varying,
    drillers_depto numeric(10,2),
    core_loss_cm integer,
    joints_description character varying,
    nb_joints integer
);


--
-- Name: okz_dh_tech_percentages; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE okz_dh_tech_percentages (
    opid integer,
    id character varying(20),
    depfrom numeric(10,2),
    depto numeric(10,2),
    percent_reco numeric(5,2),
    percent_rqd numeric(5,2),
    numauto integer
);


SET search_path = public, pg_catalog;

--
-- Name: operations; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE operations (
    opid integer NOT NULL,
    operation character varying(4),
    full_name character varying(50),
    operator character varying(50),
    year integer,
    confidentiality boolean DEFAULT true,
    lat_min numeric(10,5) NOT NULL,
    lon_min numeric(10,5) NOT NULL,
    lat_max numeric(10,5),
    lon_max numeric(10,5),
    comments character varying(500),
    db_update_timestamp timestamp without time zone DEFAULT now(),
    username character varying DEFAULT "current_user"(),
    numauto integer NOT NULL
);


--
-- Name: TABLE operations; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE operations IS 'Operations, projects, operator or client name';


--
-- Name: COLUMN operations.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN operations.opid IS 'Operation identifier';


--
-- Name: COLUMN operations.operation; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN operations.operation IS 'Operation code';


--
-- Name: COLUMN operations.full_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN operations.full_name IS 'Complete operation name';


--
-- Name: COLUMN operations.operator; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN operations.operator IS 'Operator: mining operator, exploration company, client name';


--
-- Name: COLUMN operations.year; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN operations.year IS 'Year of operation activity';


--
-- Name: COLUMN operations.confidentiality; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN operations.confidentiality IS 'Confidentiality flag, true or false; default is true';


--
-- Name: COLUMN operations.lat_min; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN operations.lat_min IS 'South latitude, decimal degrees, WGS84';


--
-- Name: COLUMN operations.lon_min; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN operations.lon_min IS 'West longitude, decimal degrees, WGS84';


--
-- Name: COLUMN operations.lat_max; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN operations.lat_max IS 'North latitude, decimal degrees, WGS84';


--
-- Name: COLUMN operations.lon_max; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN operations.lon_max IS 'East latitude, decimal degrees, WGS84';


--
-- Name: COLUMN operations.db_update_timestamp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN operations.db_update_timestamp IS 'Current date and time stamp when data is loaded in table';


--
-- Name: COLUMN operations.username; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN operations.username IS 'User (role) which created data record';


--
-- Name: COLUMN operations.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN operations.numauto IS 'Automatic integer';


SET search_path = pierre, pg_catalog;

--
-- Name: operations_quadrangles; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW operations_quadrangles AS
    SELECT operations.opid, operations.operation, operations.full_name, operations.operator, operations.year, operations.confidentiality, operations.lat_min, operations.lon_min, operations.lat_max, operations.lon_max, operations.comments, operations.db_update_timestamp, operations.username, operations.numauto, public.geomfromewkt((((((((((((((((((((('SRID=4326;POLYGON(('::text || operations.lon_min) || ' '::text) || operations.lat_max) || ','::text) || operations.lon_max) || ' '::text) || operations.lat_max) || ','::text) || operations.lon_max) || ' '::text) || operations.lat_min) || ','::text) || operations.lon_min) || ' '::text) || operations.lat_min) || ','::text) || operations.lon_min) || ' '::text) || operations.lat_max) || '))'::text)) AS geomfromewkt FROM public.operations ORDER BY operations.operation;


--
-- Name: petro_mineralo_study_dh_collars; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW petro_mineralo_study_dh_collars AS
    SELECT dh_collars_points.id, dh_collars_points.shid, dh_collars_points.location, dh_collars_points.profile, dh_collars_points.srid, dh_collars_points.x, dh_collars_points.y, dh_collars_points.z, dh_collars_points.azim_ng, dh_collars_points.azim_nm, dh_collars_points.dip_hz, dh_collars_points.dh_type, dh_collars_points.date_start, dh_collars_points.contractor, dh_collars_points.geologist, dh_collars_points.length, dh_collars_points.nb_samples, dh_collars_points.comments, dh_collars_points.completed, dh_collars_points.numauto, dh_collars_points.date_completed, dh_collars_points.opid, dh_collars_points.purpose, dh_collars_points.x_local, dh_collars_points.y_local, dh_collars_points.z_local, dh_collars_points.accusum, dh_collars_points.id_pject, dh_collars_points.x_pject, dh_collars_points.y_pject, dh_collars_points.z_pject, dh_collars_points.topo_survey_type, dh_collars_points.db_update_timestamp, dh_collars_points.username, dh_collars_points.datasource, dh_collars_points.geomfromewkt FROM dh_collars_points WHERE ((dh_collars_points.id)::text = ANY ((ARRAY['S430'::character varying, 'W08-573'::character varying, 'W08-597'::character varying, 'W08-593'::character varying, 'W08-598'::character varying, 'W08-598'::character varying, 'W08-601'::character varying, 'GB09-889'::character varying, 'GB09-889'::character varying, 'GB09-893'::character varying])::text[])) ORDER BY dh_collars_points.id;


--
-- Name: petro_mineralo_study_field_observations_points; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW petro_mineralo_study_field_observations_points AS
    SELECT field_observations_points.opid, field_observations_points.year, field_observations_points.obs_id, field_observations_points.date, field_observations_points.waypoint_name, field_observations_points.x, field_observations_points.y, field_observations_points.z, field_observations_points.description, field_observations_points.code_litho, field_observations_points.code_unit, field_observations_points.srid, field_observations_points.geologist, field_observations_points.icon_descr, field_observations_points.comments, field_observations_points.sample_id, field_observations_points.datasource, field_observations_points.numauto, field_observations_points.photos, field_observations_points.audio, field_observations_points.timestamp_epoch_ms, field_observations_points.db_update_timestamp, field_observations_points.username, field_observations_points.device, field_observations_points."time", field_observations_points.geomfromewkt FROM field_observations_points WHERE ((field_observations_points.sample_id)::text = ANY ((ARRAY['PCh854'::character varying, 'PCh856'::character varying, 'PCh865'::character varying, 'PCh873'::character varying, 'PCh875A, PCh875B'::character varying])::text[])) ORDER BY field_observations_points.obs_id;


--
-- Name: point; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE point (
    id integer NOT NULL,
    anything character varying,
    username character varying DEFAULT "current_user"(),
    address character varying DEFAULT inet_client_addr(),
    "time" timestamp without time zone DEFAULT now()
);


--
-- Name: point_id_seq; Type: SEQUENCE; Schema: pierre; Owner: -
--

CREATE SEQUENCE point_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: point_id_seq; Type: SEQUENCE OWNED BY; Schema: pierre; Owner: -
--

ALTER SEQUENCE point_id_seq OWNED BY point.id;


--
-- Name: program; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE program (
    gid integer NOT NULL,
    myid integer,
    geometry public.geometry,
    id character varying,
    completed boolean,
    opid integer,
    CONSTRAINT enforce_dims_geometry CHECK ((public.ndims(geometry) = 2)),
    CONSTRAINT enforce_geotype_geometry CHECK (((public.geometrytype(geometry) = 'POINT'::text) OR (geometry IS NULL))),
    CONSTRAINT enforce_srid_geometry CHECK ((public.srid(geometry) = (-1)))
);


SET search_path = public, pg_catalog;

--
-- Name: qc_sampling; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE qc_sampling (
    sample_id character varying(20),
    qc_type character varying,
    comments character varying,
    opid integer,
    batch_id integer,
    refers_to character varying,
    datasource integer,
    weight_kg numeric(6,2),
    numauto integer NOT NULL,
    db_update_timestamp timestamp without time zone DEFAULT now(),
    username character varying DEFAULT "current_user"()
);


--
-- Name: TABLE qc_sampling; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE qc_sampling IS 'Quality control samples: duplicates, blanks, standards';


--
-- Name: COLUMN qc_sampling.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN qc_sampling.opid IS 'Operation identifier';


--
-- Name: COLUMN qc_sampling.datasource; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN qc_sampling.datasource IS 'Datasource identifier, refers to lex_datasource';


--
-- Name: COLUMN qc_sampling.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN qc_sampling.numauto IS 'Automatic integer primary key';


--
-- Name: COLUMN qc_sampling.db_update_timestamp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN qc_sampling.db_update_timestamp IS 'Current date and time stamp when data is loaded in table';


--
-- Name: COLUMN qc_sampling.username; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN qc_sampling.username IS 'User (role) which created data record';


SET search_path = pierre, pg_catalog;

--
-- Name: qc_sampling; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW qc_sampling AS
    SELECT qc_sampling.sample_id, qc_sampling.qc_type, qc_sampling.comments, qc_sampling.opid, qc_sampling.batch_id, qc_sampling.refers_to, qc_sampling.datasource, qc_sampling.weight_kg, qc_sampling.numauto, qc_sampling.db_update_timestamp, qc_sampling.username FROM (public.qc_sampling JOIN public.operation_active ON ((qc_sampling.opid = operation_active.opid)));


SET search_path = public, pg_catalog;

--
-- Name: qc_standards; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE qc_standards (
    qc_id character varying(20) NOT NULL,
    labo character varying(50),
    matrix character varying(50),
    presentation character varying(50),
    au_ppm numeric(10,3),
    cu_ppm numeric(10,3),
    zn_ppm numeric(10,3),
    pb_ppm numeric(10,3),
    ag_ppm numeric(10,3),
    ni_ppm numeric(10,3),
    au_ppm_95pc_conf_interval numeric,
    cu_ppm_95pc_conf_interval numeric,
    zn_ppm_95pc_conf_interval numeric,
    pb_ppm_95pc_conf_interval numeric,
    ag_ppm_95pc_conf_interval numeric,
    ni_ppm_95pc_conf_interval numeric,
    opid integer,
    datasource integer,
    db_update_timestamp timestamp without time zone DEFAULT now(),
    username character varying DEFAULT "current_user"(),
    numauto integer NOT NULL
);


--
-- Name: TABLE qc_standards; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE qc_standards IS 'Quality Control standard samples, most of them are CRM (Certified Reference Materials)';


--
-- Name: COLUMN qc_standards.qc_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN qc_standards.qc_id IS 'sample identification';


--
-- Name: COLUMN qc_standards.labo; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN qc_standards.labo IS 'sample laboratory';


--
-- Name: COLUMN qc_standards.matrix; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN qc_standards.matrix IS 'sample composition';


--
-- Name: COLUMN qc_standards.presentation; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN qc_standards.presentation IS 'sample presentation';


--
-- Name: COLUMN qc_standards.au_ppm; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN qc_standards.au_ppm IS 'sample analysis value';


--
-- Name: COLUMN qc_standards.cu_ppm; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN qc_standards.cu_ppm IS 'sample analysis value';


--
-- Name: COLUMN qc_standards.zn_ppm; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN qc_standards.zn_ppm IS 'sample analysis value';


--
-- Name: COLUMN qc_standards.pb_ppm; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN qc_standards.pb_ppm IS 'sample analysis value';


--
-- Name: COLUMN qc_standards.ag_ppm; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN qc_standards.ag_ppm IS 'sample analysis value';


--
-- Name: COLUMN qc_standards.ni_ppm; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN qc_standards.ni_ppm IS 'sample analysis value';


--
-- Name: COLUMN qc_standards.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN qc_standards.opid IS 'Operation identifier';


--
-- Name: COLUMN qc_standards.datasource; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN qc_standards.datasource IS 'Datasource identifier, refers to lex_datasource';


--
-- Name: COLUMN qc_standards.db_update_timestamp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN qc_standards.db_update_timestamp IS 'Current date and time stamp when data is loaded in table';


--
-- Name: COLUMN qc_standards.username; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN qc_standards.username IS 'User (role) which created data record';


--
-- Name: COLUMN qc_standards.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN qc_standards.numauto IS 'Automatic integer primary key';


SET search_path = pierre, pg_catalog;

--
-- Name: qc_standards; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW qc_standards AS
    SELECT qc_standards.qc_id, qc_standards.labo, qc_standards.matrix, qc_standards.presentation, qc_standards.au_ppm, qc_standards.cu_ppm, qc_standards.zn_ppm, qc_standards.pb_ppm, qc_standards.ag_ppm, qc_standards.ni_ppm, qc_standards.au_ppm_95pc_conf_interval, qc_standards.cu_ppm_95pc_conf_interval, qc_standards.zn_ppm_95pc_conf_interval, qc_standards.pb_ppm_95pc_conf_interval, qc_standards.ag_ppm_95pc_conf_interval, qc_standards.ni_ppm_95pc_conf_interval, qc_standards.opid, qc_standards.datasource, qc_standards.db_update_timestamp, qc_standards.username, qc_standards.numauto FROM (public.qc_standards JOIN public.operation_active ON ((qc_standards.opid = operation_active.opid)));


--
-- Name: qqa; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE qqa (
    opid integer,
    year integer,
    obs_id character varying,
    date date,
    waypoint_name character varying,
    x numeric(20,10),
    y numeric(20,10),
    z numeric(20,2),
    description text,
    code_litho character varying(4),
    code_unit character varying(4),
    srid integer,
    geologist character varying,
    icon_descr character varying,
    comments character varying,
    sample_id character varying,
    datasource integer,
    numauto integer,
    photos character varying,
    audio character varying,
    timestamp_epoch_ms bigint,
    db_update_timestamp timestamp without time zone,
    username character varying,
    device character varying,
    "time" character varying
);


--
-- Name: qqb; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE qqb (
    opid integer,
    year integer,
    obs_id character varying,
    date date,
    waypoint_name character varying,
    x numeric(20,10),
    y numeric(20,10),
    z numeric(20,2),
    description text,
    code_litho character varying(4),
    code_unit character varying(4),
    srid integer,
    geologist character varying,
    icon_descr character varying,
    comments character varying,
    sample_id character varying,
    datasource integer,
    numauto integer,
    photos character varying,
    audio character varying,
    timestamp_epoch_ms bigint,
    db_update_timestamp timestamp without time zone,
    username character varying,
    device character varying,
    "time" character varying
);


--
-- Name: qqc; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE qqc (
    opid integer,
    year integer,
    obs_id character varying,
    date date,
    waypoint_name character varying,
    x numeric(20,10),
    y numeric(20,10),
    z numeric(20,2),
    description text,
    code_litho character varying(4),
    code_unit character varying(4),
    srid integer,
    geologist character varying,
    icon_descr character varying,
    comments character varying,
    sample_id character varying,
    datasource integer,
    numauto integer,
    photos character varying,
    audio character varying,
    timestamp_epoch_ms bigint,
    db_update_timestamp timestamp without time zone,
    username character varying,
    device character varying,
    "time" character varying
);


--
-- Name: qqd; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE qqd (
    opid integer,
    year integer,
    obs_id character varying,
    date date,
    waypoint_name character varying,
    x numeric(20,10),
    y numeric(20,10),
    z numeric(20,2),
    description text,
    code_litho character varying(4),
    code_unit character varying(4),
    srid integer,
    geologist character varying,
    icon_descr character varying,
    comments character varying,
    sample_id character varying,
    datasource integer,
    numauto integer,
    photos character varying,
    audio character varying,
    timestamp_epoch_ms bigint,
    db_update_timestamp timestamp without time zone,
    username character varying,
    device character varying,
    "time" character varying
);


--
-- Name: qqe; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE qqe (
    opid integer,
    year integer,
    obs_id character varying,
    date date,
    waypoint_name character varying,
    x numeric(20,10),
    y numeric(20,10),
    z numeric(20,2),
    description text,
    code_litho character varying(4),
    code_unit character varying(4),
    srid integer,
    geologist character varying,
    icon_descr character varying,
    comments character varying,
    sample_id character varying,
    datasource integer,
    numauto integer,
    photos character varying,
    audio character varying,
    timestamp_epoch_ms bigint,
    db_update_timestamp timestamp without time zone,
    username character varying,
    device character varying,
    "time" character varying
);


--
-- Name: rock_sampling; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE rock_sampling (
    geologist character varying(20),
    num character varying(20),
    x numeric(10,2),
    y numeric(10,2),
    z numeric(10,2),
    hammer_index integer NOT NULL,
    datasource integer,
    description character varying(250),
    location character varying(250),
    opid integer
);


--
-- Name: TABLE rock_sampling; Type: COMMENT; Schema: pierre; Owner: -
--

COMMENT ON TABLE rock_sampling IS 'outcrop sampling  (taken with geological hammer)';


--
-- Name: COLUMN rock_sampling.geologist; Type: COMMENT; Schema: pierre; Owner: -
--

COMMENT ON COLUMN rock_sampling.geologist IS 'geologist name';


--
-- Name: COLUMN rock_sampling.num; Type: COMMENT; Schema: pierre; Owner: -
--

COMMENT ON COLUMN rock_sampling.num IS 'sample name or number';


--
-- Name: COLUMN rock_sampling.x; Type: COMMENT; Schema: pierre; Owner: -
--

COMMENT ON COLUMN rock_sampling.x IS 'X coordinate';


--
-- Name: COLUMN rock_sampling.y; Type: COMMENT; Schema: pierre; Owner: -
--

COMMENT ON COLUMN rock_sampling.y IS 'Y coordinate';


--
-- Name: COLUMN rock_sampling.z; Type: COMMENT; Schema: pierre; Owner: -
--

COMMENT ON COLUMN rock_sampling.z IS 'Z coordinate';


--
-- Name: COLUMN rock_sampling.hammer_index; Type: COMMENT; Schema: pierre; Owner: -
--

COMMENT ON COLUMN rock_sampling.hammer_index IS 'integer related to the hammer_ana table';


--
-- Name: sections_array_num_seq; Type: SEQUENCE; Schema: pierre; Owner: -
--

CREATE SEQUENCE sections_array_num_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: sections_array_num_seq; Type: SEQUENCE OWNED BY; Schema: pierre; Owner: -
--

ALTER SEQUENCE sections_array_num_seq OWNED BY sections_array.num;


--
-- Name: sections_definition; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE sections_definition (
    opid integer,
    id integer NOT NULL,
    location character varying(20),
    srid integer,
    ll_corner_x numeric(10,2),
    ll_corner_y numeric(10,2),
    ll_corner_z numeric(10,2),
    azim_ng numeric(10,2),
    "interval" numeric(10,0),
    num_start integer DEFAULT 1,
    count numeric(3,0),
    length numeric(5,0),
    title character varying(254)
);


--
-- Name: COLUMN sections_definition.opid; Type: COMMENT; Schema: pierre; Owner: -
--

COMMENT ON COLUMN sections_definition.opid IS 'Operation identifier';


--
-- Name: COLUMN sections_definition.location; Type: COMMENT; Schema: pierre; Owner: -
--

COMMENT ON COLUMN sections_definition.location IS 'Drilling area';


--
-- Name: COLUMN sections_definition.ll_corner_x; Type: COMMENT; Schema: pierre; Owner: -
--

COMMENT ON COLUMN sections_definition.ll_corner_x IS 'X coordinate of lower left corner of gridded area';


--
-- Name: COLUMN sections_definition.ll_corner_y; Type: COMMENT; Schema: pierre; Owner: -
--

COMMENT ON COLUMN sections_definition.ll_corner_y IS 'y coordinate of lower left corner of gridded area';


--
-- Name: COLUMN sections_definition.ll_corner_z; Type: COMMENT; Schema: pierre; Owner: -
--

COMMENT ON COLUMN sections_definition.ll_corner_z IS 'z coordinate of lower left corner of gridded area';


--
-- Name: COLUMN sections_definition.azim_ng; Type: COMMENT; Schema: pierre; Owner: -
--

COMMENT ON COLUMN sections_definition.azim_ng IS 'Base line azimuth relative to true North';


--
-- Name: COLUMN sections_definition."interval"; Type: COMMENT; Schema: pierre; Owner: -
--

COMMENT ON COLUMN sections_definition."interval" IS 'distance between two adjacent sections, i.e. 25m';


--
-- Name: COLUMN sections_definition.num_start; Type: COMMENT; Schema: pierre; Owner: -
--

COMMENT ON COLUMN sections_definition.num_start IS 'first section number (default 1)';


--
-- Name: COLUMN sections_definition.count; Type: COMMENT; Schema: pierre; Owner: -
--

COMMENT ON COLUMN sections_definition.count IS 'number of sections';


--
-- Name: COLUMN sections_definition.length; Type: COMMENT; Schema: pierre; Owner: -
--

COMMENT ON COLUMN sections_definition.length IS 'sections length';


--
-- Name: COLUMN sections_definition.title; Type: COMMENT; Schema: pierre; Owner: -
--

COMMENT ON COLUMN sections_definition.title IS 'section title, to be displayed before section number';


--
-- Name: sections_definition_id_seq; Type: SEQUENCE; Schema: pierre; Owner: -
--

CREATE SEQUENCE sections_definition_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: sections_definition_id_seq; Type: SEQUENCE OWNED BY; Schema: pierre; Owner: -
--

ALTER SEQUENCE sections_definition_id_seq OWNED BY sections_definition.id;


--
-- Name: shift_report_okz; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE shift_report_okz (
    opid integer,
    date date,
    shift character varying(1),
    no_fichette integer,
    rig character varying(50),
    geologist character varying(50),
    time_start time without time zone,
    time_end time without time zone,
    id character varying(20),
    peg_number character varying(5),
    planned_length numeric(10,2),
    tool character varying(20),
    drilled_length_during_shift numeric(10,2),
    drilled_length numeric(10,2),
    completed boolean,
    x numeric(10,2),
    y numeric(10,2),
    z numeric(10,2),
    azim_nm numeric(10,2),
    dip numeric(10,2),
    profile character varying(10),
    quartering integer,
    samples_from integer,
    samples_to integer,
    nb_samples integer,
    comments character varying(254),
    invoice_nr integer,
    drilled_shift_destr numeric,
    drilled_shift_pq numeric,
    drilled_shift_hq numeric,
    drilled_shift_nq numeric,
    recovered_length_shift numeric,
    value1 numeric,
    value2 numeric,
    value3 numeric,
    value4 numeric,
    azim_ng numeric
);


SET search_path = public, pg_catalog;

--
-- Name: surface_samples_grades; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE surface_samples_grades (
    opid integer,
    sample_id character varying,
    x double precision,
    y double precision,
    z double precision,
    srid integer,
    description character varying,
    sample_type character varying,
    outcrop_id character varying,
    trend character varying,
    dip character varying,
    length_m character varying,
    width_m character varying,
    au1_ppm double precision,
    au2_ppm double precision,
    ag1_ double precision,
    ag2_ double precision,
    cu1_ double precision,
    cu2_ double precision,
    as_ double precision,
    pb_ double precision,
    zn_ double precision,
    k2o_ double precision,
    ba_ double precision,
    sio2_ double precision,
    al2x_ double precision,
    fe2x_ double precision,
    mno_ double precision,
    tio2_ double precision,
    p2o5_ double precision,
    cao_ double precision,
    mgo_ double precision,
    mo_ double precision,
    sn_ double precision,
    sb_ double precision,
    w_ double precision,
    bi_ double precision,
    zr_ double precision,
    li_ double precision,
    b_ double precision,
    v_ double precision,
    cr_ double precision,
    ni_ double precision,
    co_ double precision,
    sr_ double precision,
    y_ double precision,
    la_ double precision,
    ce_ double precision,
    nb_ double precision,
    be_ double precision,
    cd_ double precision,
    spp2 double precision,
    numauto integer NOT NULL,
    db_update_timestamp timestamp without time zone DEFAULT now(),
    username character varying DEFAULT "current_user"(),
    datasource integer
);


--
-- Name: TABLE surface_samples_grades; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE surface_samples_grades IS 'Ponctual samples taken from surface: stream sediments, alluvial sediments, till, soils, termite mounds, rock outcrops, floats, etc. with grades';


--
-- Name: COLUMN surface_samples_grades.opid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN surface_samples_grades.opid IS 'Operation identifier';


--
-- Name: COLUMN surface_samples_grades.numauto; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN surface_samples_grades.numauto IS 'Automatic integer primary key';


--
-- Name: COLUMN surface_samples_grades.db_update_timestamp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN surface_samples_grades.db_update_timestamp IS 'Current date and time stamp when data is loaded in table';


--
-- Name: COLUMN surface_samples_grades.username; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN surface_samples_grades.username IS 'User (role) which created data record';


--
-- Name: COLUMN surface_samples_grades.datasource; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN surface_samples_grades.datasource IS 'Datasource identifier, refers to lex_datasource';


SET search_path = pierre, pg_catalog;

--
-- Name: surface_samples_grades; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW surface_samples_grades AS
    SELECT surface_samples_grades.opid, surface_samples_grades.sample_id, surface_samples_grades.x, surface_samples_grades.y, surface_samples_grades.z, surface_samples_grades.srid, surface_samples_grades.description, surface_samples_grades.sample_type, surface_samples_grades.outcrop_id, surface_samples_grades.trend, surface_samples_grades.dip, surface_samples_grades.length_m, surface_samples_grades.width_m, surface_samples_grades.au1_ppm, surface_samples_grades.au2_ppm, surface_samples_grades.ag1_, surface_samples_grades.ag2_, surface_samples_grades.cu1_, surface_samples_grades.cu2_, surface_samples_grades.as_, surface_samples_grades.pb_, surface_samples_grades.zn_, surface_samples_grades.k2o_, surface_samples_grades.ba_, surface_samples_grades.sio2_, surface_samples_grades.al2x_, surface_samples_grades.fe2x_, surface_samples_grades.mno_, surface_samples_grades.tio2_, surface_samples_grades.p2o5_, surface_samples_grades.cao_, surface_samples_grades.mgo_, surface_samples_grades.mo_, surface_samples_grades.sn_, surface_samples_grades.sb_, surface_samples_grades.w_, surface_samples_grades.bi_, surface_samples_grades.zr_, surface_samples_grades.li_, surface_samples_grades.b_, surface_samples_grades.v_, surface_samples_grades.cr_, surface_samples_grades.ni_, surface_samples_grades.co_, surface_samples_grades.sr_, surface_samples_grades.y_, surface_samples_grades.la_, surface_samples_grades.ce_, surface_samples_grades.nb_, surface_samples_grades.be_, surface_samples_grades.cd_, surface_samples_grades.spp2, surface_samples_grades.numauto, surface_samples_grades.db_update_timestamp, surface_samples_grades.username, surface_samples_grades.datasource FROM (public.surface_samples_grades JOIN public.operation_active ON ((surface_samples_grades.opid = operation_active.opid)));


--
-- Name: surface_samples_grade_points; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW surface_samples_grade_points AS
    SELECT surface_samples_grades.opid, surface_samples_grades.sample_id, surface_samples_grades.x, surface_samples_grades.y, surface_samples_grades.z, surface_samples_grades.srid, surface_samples_grades.description, surface_samples_grades.sample_type, surface_samples_grades.outcrop_id, surface_samples_grades.trend, surface_samples_grades.dip, surface_samples_grades.length_m, surface_samples_grades.width_m, surface_samples_grades.au1_ppm, surface_samples_grades.au2_ppm, surface_samples_grades.ag1_, surface_samples_grades.ag2_, surface_samples_grades.cu1_, surface_samples_grades.cu2_, surface_samples_grades.as_, surface_samples_grades.pb_, surface_samples_grades.zn_, surface_samples_grades.k2o_, surface_samples_grades.ba_, surface_samples_grades.sio2_, surface_samples_grades.al2x_, surface_samples_grades.fe2x_, surface_samples_grades.mno_, surface_samples_grades.tio2_, surface_samples_grades.p2o5_, surface_samples_grades.cao_, surface_samples_grades.mgo_, surface_samples_grades.mo_, surface_samples_grades.sn_, surface_samples_grades.sb_, surface_samples_grades.w_, surface_samples_grades.bi_, surface_samples_grades.zr_, surface_samples_grades.li_, surface_samples_grades.b_, surface_samples_grades.v_, surface_samples_grades.cr_, surface_samples_grades.ni_, surface_samples_grades.co_, surface_samples_grades.sr_, surface_samples_grades.y_, surface_samples_grades.la_, surface_samples_grades.ce_, surface_samples_grades.nb_, surface_samples_grades.be_, surface_samples_grades.cd_, surface_samples_grades.spp2, surface_samples_grades.numauto, surface_samples_grades.db_update_timestamp, surface_samples_grades.username, surface_samples_grades.datasource, public.geomfromewkt((((((('SRID= 20136; POINT ('::text || surface_samples_grades.x) || ' '::text) || surface_samples_grades.y) || ' '::text) || 0) || ')'::text)) AS geomfromewkt FROM surface_samples_grades;


--
-- Name: surpac_survey; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW surpac_survey AS
    SELECT dh_collars.id AS hole_id, 0 AS depth, (- dh_collars.dip_hz) AS dip, dh_collars.azim_ng AS azimuth FROM dh_collars WHERE (NOT ((dh_collars.id)::text IN (SELECT DISTINCT dh_devia.id FROM dh_devia WHERE ((dh_devia.depto = (0)::numeric) AND (dh_devia.valid IS TRUE))))) UNION SELECT dh_devia.id AS hole_id, dh_devia.depto AS depth, (- dh_devia.dip_hz) AS dip, dh_devia.azim_ng AS azimuth FROM dh_devia WHERE (dh_devia.valid IS TRUE) ORDER BY 1, 2;


--
-- Name: t; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE t (
    "?column?" integer
);


--
-- Name: tanguysurp_project; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW tanguysurp_project AS
    SELECT DISTINCT COALESCE(dh_collars.location, 'undefined'::character varying) AS project_id FROM public.dh_collars;


--
-- Name: VIEW tanguysurp_project; Type: COMMENT; Schema: pierre; Owner: -
--

COMMENT ON VIEW tanguysurp_project IS 'Vue formatée project pour Surpac';


--
-- Name: tanguysurp_survey; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW tanguysurp_survey AS
    SELECT dh_devia.id AS hole_id, dh_devia.depto AS depth, dh_devia.azim_ng AS azimuth, (- dh_devia.dip_hz) AS dip, dh_devia.temperature, dh_devia.magnetic, dh_devia.date, dh_devia.roll, dh_devia."time", dh_devia.comments, dh_devia.valid, dh_devia.azim_nm, dh_devia.datasource, dh_devia.device FROM public.dh_devia WHERE dh_devia.valid;


--
-- Name: VIEW tanguysurp_survey; Type: COMMENT; Schema: pierre; Owner: -
--

COMMENT ON VIEW tanguysurp_survey IS 'Vue formatée survey pour Surpac';


--
-- Name: tmp_dh_collars_en_plus; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE tmp_dh_collars_en_plus (
    id character varying(20),
    shid character varying(10),
    location character varying,
    profile character varying(10),
    srid integer,
    x numeric(12,3),
    y numeric(12,3),
    z numeric(12,3),
    azim_ng numeric(10,2),
    azim_nm numeric(10,2),
    dip_hz numeric(10,2),
    dh_type character varying(10),
    date_start date,
    contractor character varying(20),
    geologist character varying,
    length numeric(10,2),
    len_destr numeric(10,2),
    len_pq numeric(10,2),
    len_hq numeric(10,2),
    len_nq numeric(10,2),
    len_bq numeric(10,2),
    nb_samples integer,
    comments character varying,
    completed boolean,
    datasource character varying,
    numauto integer,
    date_completed date,
    opid integer,
    purpose character varying,
    x_local numeric(12,3),
    y_local numeric(12,3),
    z_local numeric(12,3),
    accusum numeric(10,2),
    id_pject character varying,
    x_pject numeric(10,3),
    y_pject numeric(10,3),
    z_pject numeric(10,3)
);


--
-- Name: tmp_dh_devia_en_plus; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE tmp_dh_devia_en_plus (
    id character varying(20),
    depto numeric(10,2),
    azim_nm numeric(10,2),
    dip_hz numeric(10,2),
    temperature numeric(10,2),
    magnetic numeric(10,2),
    date date,
    roll numeric(10,2),
    "time" integer,
    comments character varying(254),
    opid integer,
    numauto integer,
    valid boolean,
    azim_ng numeric(10,2),
    datasource integer,
    device character varying,
    survey_name character varying,
    ghs_deg numeric,
    gtf_deg numeric,
    dls_m numeric,
    easting_m numeric,
    northing_m numeric,
    elevation_m numeric,
    updown_m numeric,
    leftright_m numeric,
    shortfall_m numeric,
    gravfield_g numeric,
    drift_check character varying,
    accumulated_roll_deg numeric,
    accumulated_roll_revolutions numeric,
    roll_to_station_deg numeric,
    roll_to_station_revolutions numeric,
    time_to_station_s numeric,
    battery_v numeric,
    station_acc_g numeric,
    station_rate_deg_s numeric,
    station_quality_pc numeric,
    max_rate_deg_s numeric,
    motion_quality_pc numeric
);


--
-- Name: tmp_dh_litho_en_plus; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE tmp_dh_litho_en_plus (
    id character varying(20),
    depfrom numeric(10,2),
    depto numeric(10,2),
    description character varying,
    code1 character varying(4),
    code2 character varying(4),
    code3 character varying(4),
    code4 character varying(4),
    value1 integer,
    value2 integer,
    value3 integer,
    value4 integer,
    opid integer,
    litho_simple character varying,
    colour character varying,
    numauto integer,
    datasource integer,
    description1 character varying,
    description2 character varying,
    value5 integer,
    value6 integer
);


--
-- Name: tmp_programme_sondages; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE tmp_programme_sondages (
    location character varying,
    num character varying NOT NULL,
    x numeric(10,2),
    y numeric(10,2),
    z numeric(10,2),
    azim_ng numeric,
    dip_hz numeric,
    length numeric,
    type character varying,
    comments character varying,
    profile character varying
);


--
-- Name: tmp_xy; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE tmp_xy (
    shid character varying(10) NOT NULL,
    id integer NOT NULL,
    srid integer,
    x numeric(10,2),
    y numeric(10,2),
    z numeric(10,2),
    val numeric(10,2),
    comment character varying(254)
);


--
-- Name: tmp_xy_id_seq; Type: SEQUENCE; Schema: pierre; Owner: -
--

CREATE SEQUENCE tmp_xy_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: tmp_xy_id_seq; Type: SEQUENCE OWNED BY; Schema: pierre; Owner: -
--

ALTER SEQUENCE tmp_xy_id_seq OWNED BY tmp_xy.id;


--
-- Name: tmp_xyz_marec; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE tmp_xyz_marec (
    id character varying(20),
    x_local numeric(12,3),
    y_local numeric(12,3),
    z_local numeric(12,3),
    x numeric(12,3),
    y numeric(12,3),
    z numeric(12,3)
);


--
-- Name: topo_points_points; Type: VIEW; Schema: pierre; Owner: -
--

CREATE VIEW topo_points_points AS
    SELECT topo_points.location, topo_points.num, topo_points.x, topo_points.y, topo_points.z, topo_points.numauto, topo_points.id, topo_points.datasource, topo_points.opid, topo_points.survey_date, topo_points.topo_survey_type, topo_points.coordsys, topo_points.surveyor, topo_points.db_update_timestamp, topo_points.username, public.geomfromewkt((((((('POINT('::text || topo_points.x) || ' '::text) || topo_points.y) || ' '::text) || topo_points.z) || ')'::text)) AS geometry FROM topo_points;


--
-- Name: toto; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE toto (
    id character varying,
    rien character varying
);


--
-- Name: toudoux_dh_sampling_grades_datasource_979; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE toudoux_dh_sampling_grades_datasource_979 (
    id character varying(20),
    depfrom numeric(10,2),
    depto numeric(10,2),
    core_loss_cm numeric(5,1),
    weight_kg numeric(6,2),
    sample_type character varying(8),
    sample_id character varying(20),
    comments character varying,
    opid integer,
    batch_id integer,
    datasource integer,
    au1_ppm numeric(8,3),
    au2_ppm numeric(8,3),
    au3_ppm numeric(8,3),
    au4_ppm numeric(8,3),
    au5_ppm numeric(8,3),
    au6_ppm numeric(8,3),
    ph numeric(4,2),
    ag_ppm numeric(8,3),
    al_perc numeric(8,3),
    as_ppm numeric(8,3),
    ba_ppm numeric(8,3),
    bi_ppm numeric(8,3),
    ca_perc numeric(8,3),
    cd_ppm numeric(8,3),
    co_ppm numeric(8,3),
    cr_ppm numeric(8,3),
    cu_perc numeric,
    fe_perc numeric(8,3),
    ga_ppm numeric(8,3),
    k_perc numeric(8,3),
    la_ppm numeric(8,3),
    li_ppm numeric(8,3),
    mg_perc numeric(8,3),
    mn_ppm numeric(8,3),
    moisture numeric(8,4),
    mo_ppm numeric(8,3),
    na_perc numeric(8,3),
    nb_ppm numeric(8,3),
    ni_ppm numeric(8,3),
    pb_perc numeric,
    sb_ppm numeric(8,3),
    sc_ppm numeric(8,3),
    se_ppm numeric(8,3),
    sn_ppm numeric(8,3),
    sr_ppm numeric(8,3),
    ta_ppm numeric(8,3),
    te_ppm numeric(8,3),
    ti_perc numeric(8,3),
    v_ppm numeric(8,3),
    w_ppm numeric(8,3),
    y_ppm numeric(8,3),
    zn_perc numeric,
    numauto integer,
    th_ppm numeric,
    tl_ppm numeric,
    u_ppm numeric
);


--
-- Name: translation; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE translation (
    code character varying(6) NOT NULL,
    description character varying(32),
    field_name character varying(18) NOT NULL,
    num_equiv double precision NOT NULL,
    table_name character varying(18) NOT NULL
);


--
-- Name: tt; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE tt (
    opid integer,
    id character varying(20),
    depfrom numeric(10,2),
    depto numeric(10,2),
    numauto integer
);


--
-- Name: tt_bdexplo_baselines_autan; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE tt_bdexplo_baselines_autan (
    opid integer,
    id integer,
    location character varying,
    x1 numeric(10,3),
    y1 numeric(10,3),
    z1 numeric(10,3),
    x2 numeric(10,3),
    y2 numeric(10,3),
    z2 numeric(10,3)
);


--
-- Name: tt_bdexplo_def_litho_code_value_fields_autan; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE tt_bdexplo_def_litho_code_value_fields_autan (
    opid integer,
    code_or_value_field character varying,
    description character varying
);


--
-- Name: tt_bdexplo_dh_collars_autan; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE tt_bdexplo_dh_collars_autan (
    id character varying(20),
    shid character varying(10),
    location character varying,
    profile character varying(10),
    srid integer,
    x numeric(12,3),
    y numeric(12,3),
    z numeric(12,3),
    azim_ng numeric(10,2),
    azim_nm numeric(10,2),
    dip_hz numeric(10,2),
    dh_type character varying(10),
    date_start date,
    contractor character varying(20),
    geologist character varying,
    length numeric(10,2),
    len_destr numeric(10,2),
    len_pq numeric(10,2),
    len_hq numeric(10,2),
    len_nq numeric(10,2),
    len_bq numeric(10,2),
    nb_samples integer,
    comments character varying,
    completed boolean,
    datasource character varying,
    numauto integer,
    date_completed date,
    opid integer,
    purpose character varying,
    x_local numeric(12,3),
    y_local numeric(12,3),
    z_local numeric(12,3),
    accusum numeric(10,2),
    id_pject character varying,
    x_pject numeric(10,3),
    y_pject numeric(10,3),
    z_pject numeric(10,3)
);


--
-- Name: tt_bdexplo_dh_core_boxes_autan; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE tt_bdexplo_dh_core_boxes_autan (
    id character varying(20),
    depfrom numeric(10,2),
    depto numeric(10,2),
    box_number integer,
    datasource integer,
    opid integer,
    numauto integer
);


--
-- Name: tt_bdexplo_dh_devia_autan; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE tt_bdexplo_dh_devia_autan (
    id character varying(20),
    depto numeric(10,2),
    azim_nm numeric(10,2),
    dip_hz numeric(10,2),
    temperature numeric(10,2),
    magnetic numeric(10,2),
    date date,
    roll numeric(10,2),
    "time" integer,
    comments character varying,
    opid integer,
    numauto integer,
    valid boolean,
    azim_ng numeric(10,2),
    datasource integer,
    device character varying
);


--
-- Name: tt_bdexplo_dh_litho_autan; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE tt_bdexplo_dh_litho_autan (
    id character varying(20),
    depfrom numeric(10,2),
    depto numeric(10,2),
    description character varying,
    code1 character varying(4),
    code2 character varying(4),
    code3 character varying(4),
    code4 character varying(4),
    value1 integer,
    value2 integer,
    value3 integer,
    value4 integer,
    opid integer,
    litho_simple character varying,
    colour character varying,
    numauto integer,
    datasource integer,
    description1 character varying,
    description2 character varying,
    value5 integer,
    value6 integer
);


--
-- Name: tt_bdexplo_dh_mineralised_intervals_autan; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE tt_bdexplo_dh_mineralised_intervals_autan (
    id character varying(20),
    depfrom numeric(10,2),
    depto numeric(10,2),
    mine integer,
    avau numeric(10,2),
    stva character varying(150),
    accu numeric(10,2),
    recu numeric(10,2),
    dens numeric(10,2),
    datasource character varying(500),
    numauto integer,
    comments character varying(100),
    opid integer
);


--
-- Name: tt_bdexplo_dh_sampling_bottle_roll_autan; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE tt_bdexplo_dh_sampling_bottle_roll_autan (
    opid integer,
    id text,
    depfrom numeric(10,2),
    depto numeric(10,2),
    sample_id character varying,
    au_total numeric(10,2),
    au_24h numeric(10,2),
    au_48h numeric(10,2),
    au_72h numeric(10,2),
    au_residu numeric(10,2),
    rec_24h_pc numeric(10,2),
    rec_48h_pc numeric(10,2),
    rec_72h_pc numeric(10,2),
    datasource integer
);


--
-- Name: tt_bdexplo_dh_sampling_grades_autan; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE tt_bdexplo_dh_sampling_grades_autan (
    id character varying(20),
    depfrom numeric(10,2),
    depto numeric(10,2),
    core_loss_cm numeric(5,1),
    weight_kg numeric(6,2),
    sample_type character varying(8),
    sample_id character varying(20),
    comments character varying,
    opid integer,
    batch_id integer,
    datasource integer,
    au1_ppm numeric(8,3),
    au2_ppm numeric(8,3),
    au3_ppm numeric(8,3),
    au4_ppm numeric(8,3),
    au5_ppm numeric(8,3),
    au6_ppm numeric(8,3),
    ph numeric(4,2),
    ag_ppm numeric(8,3),
    al_perc numeric(8,3),
    as_ppm numeric(8,3),
    ba_ppm numeric(8,3),
    bi_ppm numeric(8,3),
    ca_perc numeric(8,3),
    cd_ppm numeric(8,3),
    co_ppm numeric(8,3),
    cr_ppm numeric(8,3),
    cu_perc numeric,
    fe_perc numeric(8,3),
    ga_ppm numeric(8,3),
    k_perc numeric(8,3),
    la_ppm numeric(8,3),
    li_ppm numeric(8,3),
    mg_perc numeric(8,3),
    mn_ppm numeric(8,3),
    moisture numeric(8,4),
    mo_ppm numeric(8,3),
    na_perc numeric(8,3),
    nb_ppm numeric(8,3),
    ni_ppm numeric(8,3),
    pb_perc numeric,
    sb_ppm numeric(8,3),
    sc_ppm numeric(8,3),
    se_ppm numeric(8,3),
    sn_ppm numeric(8,3),
    sr_ppm numeric(8,3),
    ta_ppm numeric(8,3),
    te_ppm numeric(8,3),
    ti_perc numeric(8,3),
    v_ppm numeric(8,3),
    w_ppm numeric(8,3),
    y_ppm numeric(8,3),
    zn_perc numeric,
    th_ppm numeric,
    tl_ppm numeric,
    u_ppm numeric,
    numauto integer,
    au_specks integer,
    p_perc numeric,
    b_ppm numeric,
    s_perc numeric,
    hg_ppm numeric
);


--
-- Name: tt_bdexplo_dh_struct_measures_autan; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE tt_bdexplo_dh_struct_measures_autan (
    opid integer,
    id character varying(20),
    depto numeric(10,2),
    measure_type character varying,
    structure_type character varying,
    alpha_tca numeric,
    beta numeric,
    gamma numeric,
    north_ref character varying,
    direction integer,
    dip integer,
    dip_quadrant character varying,
    pitch integer,
    pitch_quadrant character varying,
    movement character varying,
    valid boolean,
    struct_description character varying,
    sortgroup character(1),
    datasource integer,
    numauto integer
);


--
-- Name: tt_bdexplo_dh_tech_autan; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE tt_bdexplo_dh_tech_autan (
    id character varying(20),
    depfrom numeric(10,2),
    depto numeric(10,2),
    drilled_len numeric(10,2),
    reco_len numeric(10,2),
    percent_reco numeric(5,2),
    rqd_len numeric(10,2),
    percent_rqd numeric(5,2),
    diam character varying(10),
    numauto integer,
    datasource integer,
    opid integer,
    comments character varying,
    drillers_depto numeric(10,2),
    core_loss_cm integer,
    joints_description character varying,
    nb_joints integer
);


--
-- Name: tt_bdexplo_field_observations_autan; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE tt_bdexplo_field_observations_autan (
    opid integer,
    year integer,
    obs_id character varying,
    date date,
    waypoint_name character varying,
    x numeric(20,10),
    y numeric(20,10),
    z numeric(20,2),
    description text,
    code_litho character varying(4),
    code_unit character varying(4),
    srid integer,
    geologist character varying,
    icon_descr character varying,
    comments character varying,
    sample_id character varying,
    datasource integer,
    numauto integer,
    photos character varying,
    audio character varying,
    timestamp_epoch_ms bigint
);


--
-- Name: tt_bdexplo_field_observations_struct_measures_autan; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE tt_bdexplo_field_observations_struct_measures_autan (
    opid integer,
    obs_id character varying,
    measure_type character varying,
    structure_type character varying,
    north_ref character varying,
    direction integer,
    dip integer,
    dip_quadrant character varying,
    pitch integer,
    pitch_quadrant character varying,
    movement character varying,
    valid boolean,
    comments character varying,
    numauto integer
);


--
-- Name: tt_bdexplo_lab_ana_batches_expedition_autan; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE tt_bdexplo_lab_ana_batches_expedition_autan (
    opid integer,
    batch_id integer,
    labname character varying(50),
    expedition_id character varying(20),
    order_id character varying(20),
    description character varying,
    preparation character varying(10),
    process_labo character varying(10),
    scheme character varying,
    shipment_date date,
    sent_to_lab boolean,
    reception_date date,
    results_received boolean,
    lab_batches character varying,
    comments character varying,
    datasource character varying,
    samples_amount integer,
    sample_id_first character varying,
    sample_id_last character varying
);


--
-- Name: tt_bdexplo_lab_ana_results_autan; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE tt_bdexplo_lab_ana_results_autan (
    labname character varying(10),
    jobno character varying(20),
    orderno character varying(40),
    sample_id character varying(40),
    scheme character varying(20),
    analyte character varying(20),
    value character varying(20),
    db_update_timestamp timestamp without time zone,
    value_num numeric,
    opid integer,
    batch_id integer,
    sampletype character varying,
    unit character varying,
    datasource integer,
    numauto integer,
    sample_id_lab character varying
);


--
-- Name: tt_bdexplo_lex_codes_autan; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE tt_bdexplo_lex_codes_autan (
    opid integer,
    tablename text,
    field text,
    code character varying,
    description character varying,
    datasource integer,
    numauto integer
);


--
-- Name: tt_bdexplo_lex_datasource_autan; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE tt_bdexplo_lex_datasource_autan (
    opid integer,
    filename character varying(500),
    comments character varying,
    datasource_id integer
);


--
-- Name: tt_bdexplo_lex_labo_analysis_autan; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE tt_bdexplo_lex_labo_analysis_autan (
    lab_id character varying,
    description character varying,
    opid integer,
    numauto integer
);


--
-- Name: tt_bdexplo_occurrences_autan; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE tt_bdexplo_occurrences_autan (
    numauto integer,
    name character varying(50),
    status character varying(10),
    x double precision,
    y double precision,
    description character varying(254),
    w_done character varying(254),
    w_todo character varying(254),
    geol_poten character varying(22),
    grade character varying(6),
    type character varying(23),
    code_typ character varying(6),
    size integer,
    au character varying(4),
    trenches character varying(9),
    coredrill character varying(9),
    pdrill character varying(6),
    max_grade character varying(10),
    length character varying(14),
    thickness character varying(10),
    code_indic character varying(10),
    geom public.geometry,
    num_code integer,
    code character varying(20),
    opid integer,
    srid integer,
    zone character varying,
    z numeric,
    id integer
);


--
-- Name: tt_bdexplo_operation_active_autan; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE tt_bdexplo_operation_active_autan (
    opid integer
);


--
-- Name: tt_bdexplo_operations_autan; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE tt_bdexplo_operations_autan (
    opid integer,
    operation character varying(4),
    full_name character varying(50),
    operator character varying(50),
    year integer,
    confidentiality boolean,
    lat_min numeric(10,5),
    lon_min numeric(10,5),
    lat_max numeric(10,5),
    lon_max numeric(10,5),
    comments character varying(500)
);


--
-- Name: tt_bdexplo_qc_sampling_autan; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE tt_bdexplo_qc_sampling_autan (
    sample_id character varying(20),
    qc_type character varying,
    comments character varying,
    opid integer,
    batch_id integer,
    refers_to character varying,
    datasource integer
);


--
-- Name: tt_bdexplo_sections_array_autan; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE tt_bdexplo_sections_array_autan (
    id character varying(20),
    opid integer,
    location character varying,
    title character varying(254),
    srid integer,
    x1 numeric(10,2),
    y1 numeric(10,2),
    z1 numeric(10,2),
    length numeric,
    x2 numeric(10,2),
    y2 numeric(10,2),
    z2 numeric(10,2),
    num integer
);


--
-- Name: tt_bdexplo_surface_samples_grades_autan; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE tt_bdexplo_surface_samples_grades_autan (
    opid integer,
    sample_id character varying,
    x double precision,
    y double precision,
    z double precision,
    srid integer,
    description character varying,
    sample_type character varying,
    outcrop_id character varying,
    trend character varying,
    dip character varying,
    length_m character varying,
    width_m character varying,
    au1_ppm double precision,
    au2_ppm double precision,
    ag1_ double precision,
    ag2_ double precision,
    cu1_ double precision,
    cu2_ double precision,
    as_ double precision,
    pb_ double precision,
    zn_ double precision,
    k2o_ double precision,
    ba_ double precision,
    sio2_ double precision,
    al2x_ double precision,
    fe2x_ double precision,
    mno_ double precision,
    tio2_ double precision,
    p2o5_ double precision,
    cao_ double precision,
    mgo_ double precision,
    mo_ double precision,
    sn_ double precision,
    sb_ double precision,
    w_ double precision,
    bi_ double precision,
    zr_ double precision,
    li_ double precision,
    b_ double precision,
    v_ double precision,
    cr_ double precision,
    ni_ double precision,
    co_ double precision,
    sr_ double precision,
    y_ double precision,
    la_ double precision,
    ce_ double precision,
    nb_ double precision,
    be_ double precision,
    cd_ double precision,
    spp2 double precision,
    datasource_id integer,
    numauto integer
);


--
-- Name: tt_ech_if10; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE tt_ech_if10 (
    id character varying(20),
    depfrom numeric(10,2),
    depto numeric(10,2),
    core_loss_cm numeric(5,1),
    weight_kg numeric(6,2),
    sample_type character varying(8),
    sample_id character varying(20),
    comments character varying,
    opid integer,
    batch_id integer,
    datasource integer,
    au1_ppm numeric(8,3),
    au2_ppm numeric(8,3),
    au3_ppm numeric(8,3),
    au4_ppm numeric(8,3),
    au5_ppm numeric(8,3),
    au6_ppm numeric(8,3),
    ph numeric(4,2),
    ag_ppm numeric(8,3),
    al_perc numeric(8,3),
    as_ppm numeric(8,3),
    ba_ppm numeric(8,3),
    bi_ppm numeric(8,3),
    ca_perc numeric(8,3),
    cd_ppm numeric(8,3),
    co_ppm numeric(8,3),
    cr_ppm numeric(8,3),
    cu_perc numeric,
    fe_perc numeric(8,3),
    ga_ppm numeric(8,3),
    k_perc numeric(8,3),
    la_ppm numeric(8,3),
    li_ppm numeric(8,3),
    mg_perc numeric(8,3),
    mn_ppm numeric(8,3),
    moisture numeric(8,4),
    mo_ppm numeric(8,3),
    na_perc numeric(8,3),
    nb_ppm numeric(8,3),
    ni_ppm numeric(8,3),
    pb_perc numeric,
    sb_ppm numeric(8,3),
    sc_ppm numeric(8,3),
    se_ppm numeric(8,3),
    sn_ppm numeric(8,3),
    sr_ppm numeric(8,3),
    ta_ppm numeric(8,3),
    te_ppm numeric(8,3),
    ti_perc numeric(8,3),
    v_ppm numeric(8,3),
    w_ppm numeric(8,3),
    y_ppm numeric(8,3),
    zn_perc numeric,
    th_ppm numeric,
    tl_ppm numeric,
    u_ppm numeric,
    numauto integer,
    au_specks integer,
    p_perc numeric,
    b_ppm numeric,
    s_perc numeric,
    hg_ppm numeric
);


--
-- Name: tt_lab_ana_batches_reception_corr; Type: TABLE; Schema: pierre; Owner: -; Tablespace: 
--

CREATE TABLE tt_lab_ana_batches_reception_corr (
    opid integer,
    jobno character varying,
    datasource integer,
    labname character varying,
    client character varying,
    validated date,
    job_number character varying,
    number_of_samples character varying,
    project character varying,
    shipment_id character varying,
    p_o_number character varying,
    received date,
    certificate_comments character varying,
    info_suppl_json character varying
);


SET search_path = public, pg_catalog;

--
-- Name: ancient_workings_gid_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE ancient_workings_gid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ancient_workings_gid_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE ancient_workings_gid_seq OWNED BY ancient_workings.gid;


--
-- Name: ancient_workings_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE ancient_workings_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ancient_workings_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE ancient_workings_numauto_seq OWNED BY ancient_workings.numauto;


--
-- Name: baselines_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE baselines_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: baselines_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE baselines_numauto_seq OWNED BY baselines.numauto;


--
-- Name: conversions_oxydes_elements; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE conversions_oxydes_elements (
    oxide character varying,
    molecular_weight numeric,
    factor numeric
);


--
-- Name: TABLE conversions_oxydes_elements; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE conversions_oxydes_elements IS 'Molecular weights of some oxides and factors to convert them to elements by weight.';


--
-- Name: dh_collars_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE dh_collars_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: dh_collars_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE dh_collars_numauto_seq OWNED BY dh_collars.numauto;


--
-- Name: dh_core_boxes_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE dh_core_boxes_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: dh_core_boxes_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE dh_core_boxes_numauto_seq OWNED BY dh_core_boxes.numauto;


--
-- Name: dh_density_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE dh_density_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: dh_density_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE dh_density_numauto_seq OWNED BY dh_density.numauto;


--
-- Name: dh_devia_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE dh_devia_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: dh_devia_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE dh_devia_numauto_seq OWNED BY dh_devia.numauto;


--
-- Name: dh_followup_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE dh_followup_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: dh_followup_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE dh_followup_numauto_seq OWNED BY dh_followup.numauto;


--
-- Name: dh_litho_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE dh_litho_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: dh_litho_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE dh_litho_numauto_seq OWNED BY dh_litho.numauto;


--
-- Name: dh_mine_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE dh_mine_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: dh_mine_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE dh_mine_numauto_seq OWNED BY dh_mineralised_intervals.numauto;


--
-- Name: dh_quicklog_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE dh_quicklog_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: dh_quicklog_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE dh_quicklog_numauto_seq OWNED BY dh_quicklog.numauto;


--
-- Name: dh_sampling_bottle_roll_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE dh_sampling_bottle_roll_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: dh_sampling_bottle_roll_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE dh_sampling_bottle_roll_numauto_seq OWNED BY dh_sampling_bottle_roll.numauto;


--
-- Name: dh_sampling_grades_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE dh_sampling_grades_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: dh_sampling_grades_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE dh_sampling_grades_numauto_seq OWNED BY dh_sampling_grades.numauto;


--
-- Name: dh_struct_measures_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE dh_struct_measures_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: dh_struct_measures_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE dh_struct_measures_numauto_seq OWNED BY dh_struct_measures.numauto;


--
-- Name: dh_tech_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE dh_tech_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: dh_tech_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE dh_tech_numauto_seq OWNED BY dh_tech.numauto;


--
-- Name: dh_thinsections_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE dh_thinsections_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: dh_thinsections_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE dh_thinsections_numauto_seq OWNED BY dh_thinsections.numauto;


--
-- Name: doc_bdexplo_table_categories; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE doc_bdexplo_table_categories (
    category character varying NOT NULL,
    description_fr character varying,
    numauto integer NOT NULL
);


--
-- Name: doc_bdexplo_table_categories_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE doc_bdexplo_table_categories_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: doc_bdexplo_table_categories_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE doc_bdexplo_table_categories_numauto_seq OWNED BY doc_bdexplo_table_categories.numauto;


--
-- Name: doc_bdexplo_tables_descriptions; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE doc_bdexplo_tables_descriptions (
    tablename character varying NOT NULL,
    category character varying,
    comment_fr character varying,
    numauto integer NOT NULL
);


--
-- Name: doc_bdexplo_tables_descriptions_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE doc_bdexplo_tables_descriptions_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: doc_bdexplo_tables_descriptions_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE doc_bdexplo_tables_descriptions_numauto_seq OWNED BY doc_bdexplo_tables_descriptions.numauto;


--
-- Name: field_observations_numauto_seq2; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE field_observations_numauto_seq2
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: field_observations_numauto_seq2; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE field_observations_numauto_seq2 OWNED BY field_observations.numauto;


--
-- Name: field_observations_points; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW field_observations_points AS
    SELECT field_observations.opid, field_observations.year, field_observations.obs_id, field_observations.date, field_observations.waypoint_name, field_observations.x, field_observations.y, field_observations.z, field_observations.description, field_observations.code_litho, field_observations.code_unit, field_observations.srid, field_observations.geologist, field_observations.icon_descr, field_observations.comments, field_observations.sample_id, field_observations.datasource, field_observations.numauto, field_observations.photos, field_observations.audio, field_observations.timestamp_epoch_ms, field_observations.db_update_timestamp, field_observations.username, field_observations.device, field_observations."time", geomfromewkt((((((((('SRID='::text || field_observations.srid) || ';POINT ('::text) || field_observations.x) || ' '::text) || field_observations.y) || ' '::text) || field_observations.z) || ')'::text)) AS geomfromewkt FROM field_observations;


--
-- Name: field_observations_struct_measures_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE field_observations_struct_measures_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: field_observations_struct_measures_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE field_observations_struct_measures_numauto_seq OWNED BY field_observations_struct_measures.numauto;


--
-- Name: field_photos_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE field_photos_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: field_photos_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE field_photos_numauto_seq OWNED BY field_photos.numauto;


--
-- Name: formations_group_lithos_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE formations_group_lithos_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: formations_group_lithos_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE formations_group_lithos_numauto_seq OWNED BY formations_group_lithos.numauto;


--
-- Name: geoch_ana_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE geoch_ana_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: geoch_ana_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE geoch_ana_numauto_seq OWNED BY geoch_ana.numauto;


--
-- Name: geoch_sampling_grades_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE geoch_sampling_grades_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: geoch_sampling_grades_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE geoch_sampling_grades_numauto_seq OWNED BY geoch_sampling_grades.numauto;


--
-- Name: geoch_sampling_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE geoch_sampling_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: geoch_sampling_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE geoch_sampling_numauto_seq OWNED BY geoch_sampling.numauto;


--
-- Name: geoch_sampling_sampl_index_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE geoch_sampling_sampl_index_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: geoch_sampling_sampl_index_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE geoch_sampling_sampl_index_seq OWNED BY geoch_sampling.sampl_index;


--
-- Name: geography_columns; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW geography_columns AS
    SELECT current_database() AS f_table_catalog, n.nspname AS f_table_schema, c.relname AS f_table_name, a.attname AS f_geography_column, geography_typmod_dims(a.atttypmod) AS coord_dimension, geography_typmod_srid(a.atttypmod) AS srid, geography_typmod_type(a.atttypmod) AS type FROM pg_class c, pg_attribute a, pg_type t, pg_namespace n WHERE ((((((t.typname = 'geography'::name) AND (a.attisdropped = false)) AND (a.atttypid = t.oid)) AND (a.attrelid = c.oid)) AND (c.relnamespace = n.oid)) AND (NOT pg_is_other_temp_schema(c.relnamespace)));


SET default_with_oids = true;

--
-- Name: geometry_columns; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE geometry_columns (
    f_table_catalog character varying(256) NOT NULL,
    f_table_schema character varying(256) NOT NULL,
    f_table_name character varying(256) NOT NULL,
    f_geometry_column character varying(256) NOT NULL,
    coord_dimension integer NOT NULL,
    srid integer NOT NULL,
    type character varying(30) NOT NULL
);


--
-- Name: gpy_mag_ground_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE gpy_mag_ground_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: gpy_mag_ground_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE gpy_mag_ground_numauto_seq OWNED BY gpy_mag_ground.numauto;


--
-- Name: index_geo_documentation_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE index_geo_documentation_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: index_geo_documentation_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE index_geo_documentation_id_seq OWNED BY index_geo_documentation.id;


--
-- Name: index_geo_documentation_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE index_geo_documentation_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: index_geo_documentation_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE index_geo_documentation_numauto_seq OWNED BY index_geo_documentation.numauto;


--
-- Name: lab_ana_batches_expedition_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE lab_ana_batches_expedition_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: lab_ana_batches_expedition_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE lab_ana_batches_expedition_numauto_seq OWNED BY lab_ana_batches_expedition.numauto;


--
-- Name: lab_ana_batches_reception_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE lab_ana_batches_reception_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: lab_ana_batches_reception_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE lab_ana_batches_reception_numauto_seq OWNED BY lab_ana_batches_reception.numauto;


--
-- Name: lab_ana_columns_definition_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE lab_ana_columns_definition_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: lab_ana_columns_definition_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE lab_ana_columns_definition_numauto_seq OWNED BY lab_ana_columns_definition.numauto;


--
-- Name: lab_ana_qaqc_results_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE lab_ana_qaqc_results_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: lab_ana_qaqc_results_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE lab_ana_qaqc_results_numauto_seq OWNED BY lab_ana_qaqc_results.numauto;


--
-- Name: lab_ana_results_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE lab_ana_results_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: lab_ana_results_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE lab_ana_results_numauto_seq OWNED BY lab_ana_results.numauto;


--
-- Name: lex_codes_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE lex_codes_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: lex_codes_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE lex_codes_numauto_seq OWNED BY lex_codes.numauto;


--
-- Name: lex_datasource_datasource_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE lex_datasource_datasource_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: lex_datasource_datasource_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE lex_datasource_datasource_id_seq OWNED BY lex_datasource.datasource_id;


--
-- Name: lex_datasource_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE lex_datasource_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: lex_datasource_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE lex_datasource_numauto_seq OWNED BY lex_datasource.numauto;


--
-- Name: lex_standard_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE lex_standard_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: lex_standard_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE lex_standard_numauto_seq OWNED BY lex_standard.numauto;


--
-- Name: licences_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE licences_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: licences_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE licences_numauto_seq OWNED BY licences.numauto;


--
-- Name: mag_declination_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE mag_declination_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: mag_declination_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE mag_declination_numauto_seq OWNED BY mag_declination.numauto;


--
-- Name: operation_active_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE operation_active_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: operation_active_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE operation_active_numauto_seq OWNED BY operation_active.numauto;


--
-- Name: operations_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE operations_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: operations_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE operations_numauto_seq OWNED BY operations.numauto;


--
-- Name: operations_opid_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE operations_opid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: operations_opid_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE operations_opid_seq OWNED BY operations.opid;


--
-- Name: preex_sampling_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE preex_sampling_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: preex_sampling_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE preex_sampling_numauto_seq OWNED BY grade_ctrl.numauto;


--
-- Name: qc_sampling_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE qc_sampling_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: qc_sampling_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE qc_sampling_numauto_seq OWNED BY qc_sampling.numauto;


--
-- Name: qc_standards_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE qc_standards_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: qc_standards_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE qc_standards_numauto_seq OWNED BY qc_standards.numauto;


--
-- Name: shift_reports_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE shift_reports_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: shift_reports_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE shift_reports_numauto_seq OWNED BY shift_reports.numauto;


SET default_with_oids = false;

--
-- Name: spatial_ref_sys; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE spatial_ref_sys (
    srid integer NOT NULL,
    auth_name character varying(256),
    auth_srid integer,
    srtext character varying(2048),
    proj4text character varying(2048)
);


--
-- Name: surface_samples_grades_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE surface_samples_grades_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: surface_samples_grades_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE surface_samples_grades_numauto_seq OWNED BY surface_samples_grades.numauto;


--
-- Name: survey_lines; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE survey_lines (
    opid numeric,
    id character varying,
    x_start numeric,
    y_start numeric,
    x_end numeric,
    y_end numeric,
    length numeric,
    numauto integer NOT NULL,
    srid numeric
);


--
-- Name: survey_lines_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE survey_lines_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: survey_lines_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE survey_lines_numauto_seq OWNED BY survey_lines.numauto;


--
-- Name: survey_lines_plines; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW survey_lines_plines AS
    SELECT survey_lines.opid, survey_lines.id, survey_lines.x_start, survey_lines.y_start, survey_lines.x_end, survey_lines.y_end, survey_lines.length, survey_lines.numauto, survey_lines.srid, geomfromewkt((((((((((('SRID='::text || survey_lines.srid) || '; LINESTRING ('::text) || survey_lines.x_start) || ' '::text) || survey_lines.y_start) || ', '::text) || survey_lines.x_end) || ' '::text) || survey_lines.y_end) || ')'::text)) AS geomfromewkt FROM survey_lines;


--
-- Name: topo_points_numauto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE topo_points_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: topo_points_numauto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE topo_points_numauto_seq OWNED BY topo_points.numauto;


--
-- Name: units; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE units (
    unit_name character varying,
    unit_factor real
);


--
-- Name: TABLE units; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE units IS 'Units, with multiplicator factor';


--
-- Name: COLUMN units.unit_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN units.unit_name IS 'Unit abbreviated name, uppercase';


--
-- Name: COLUMN units.unit_factor; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN units.unit_factor IS 'Multiplication factor';


SET search_path = stats_reports, pg_catalog;

--
-- Name: avancements_sondages_stats_annuelles; Type: VIEW; Schema: stats_reports; Owner: -
--

CREATE VIEW avancements_sondages_stats_annuelles AS
    SELECT tmp.year, sum(tmp.drilled_length_during_shift) AS drilled_length_during_year FROM (SELECT date_part('year'::text, shift_reports.date) AS year, shift_reports.drilled_length_during_shift FROM pierre.shift_reports) tmp GROUP BY tmp.year ORDER BY tmp.year;


--
-- Name: avancements_sondages_stats_annuelles_par_objectif; Type: VIEW; Schema: stats_reports; Owner: -
--

CREATE VIEW avancements_sondages_stats_annuelles_par_objectif AS
    SELECT tmp.year, tmp.target, sum(tmp.drilled_length_during_shift) AS drilled_length_during_month FROM (SELECT date_part('year'::text, shift_reports.date) AS year, date_part('month'::text, shift_reports.date) AS month, shift_reports.drilled_length_during_shift, "substring"((shift_reports.id)::text, 1, 4) AS target FROM pierre.shift_reports) tmp GROUP BY tmp.year, tmp.target ORDER BY tmp.year;


--
-- Name: avancements_sondages_stats_mensuelles; Type: VIEW; Schema: stats_reports; Owner: -
--

CREATE VIEW avancements_sondages_stats_mensuelles AS
    SELECT tmp.year, tmp.month, sum(tmp.drilled_length_during_shift) AS drilled_length_during_month FROM (SELECT date_part('year'::text, shift_reports.date) AS year, date_part('month'::text, shift_reports.date) AS month, shift_reports.drilled_length_during_shift FROM pierre.shift_reports) tmp GROUP BY tmp.year, tmp.month ORDER BY tmp.year, tmp.month;


--
-- Name: avancements_sondages_stats_mensuelles_par_objectif; Type: VIEW; Schema: stats_reports; Owner: -
--

CREATE VIEW avancements_sondages_stats_mensuelles_par_objectif AS
    SELECT tmp.year, tmp.month, tmp.target, sum(tmp.drilled_length_during_shift) AS drilled_length_during_month FROM (SELECT date_part('year'::text, shift_reports.date) AS year, date_part('month'::text, shift_reports.date) AS month, shift_reports.drilled_length_during_shift, split_part((shift_reports.id)::text, '_'::text, 1) AS target FROM pierre.shift_reports) tmp GROUP BY tmp.year, tmp.month, tmp.target ORDER BY tmp.year, tmp.month;


--
-- Name: avancements_sondages_stats_quotidiennes; Type: VIEW; Schema: stats_reports; Owner: -
--

CREATE VIEW avancements_sondages_stats_quotidiennes AS
    SELECT shift_reports.rig, shift_reports.date, sum(shift_reports.drilled_length_during_shift) AS drilled_length_per_day, repeat('|'::text, ((sum(shift_reports.drilled_length_during_shift) / (10)::numeric))::integer) AS graph_drilled_length_per_day, count(DISTINCT shift_reports.id) AS nb_drill_holes, min((shift_reports.id)::text) AS first_dh, max((shift_reports.id)::text) AS last_dh FROM pierre.shift_reports GROUP BY shift_reports.rig, shift_reports.date ORDER BY shift_reports.rig, shift_reports.date;


--
-- Name: longueur_exploree_par_location; Type: VIEW; Schema: stats_reports; Owner: -
--

CREATE VIEW longueur_exploree_par_location AS
    SELECT dh_collars.completed, dh_collars.location, dh_collars.dh_type, sum(dh_collars.length) AS sum_length FROM pierre.dh_collars GROUP BY dh_collars.completed, dh_collars.location, dh_collars.dh_type ORDER BY dh_collars.completed, dh_collars.location, dh_collars.dh_type;


--
-- Name: longueur_exploree_par_location_et_type; Type: VIEW; Schema: stats_reports; Owner: -
--

CREATE VIEW longueur_exploree_par_location_et_type AS
    SELECT dh_collars.location, dh_collars.dh_type, sum(dh_collars.length) AS sum FROM pierre.dh_collars WHERE dh_collars.completed GROUP BY dh_collars.location, dh_collars.dh_type ORDER BY dh_collars.location, dh_collars.dh_type DESC;


--
-- Name: longueur_exploree_par_type_km; Type: VIEW; Schema: stats_reports; Owner: -
--

CREATE VIEW longueur_exploree_par_type_km AS
    SELECT dh_collars.dh_type, (sum(dh_collars.length) / (1000)::numeric) AS km_explored_length FROM pierre.dh_collars GROUP BY dh_collars.dh_type ORDER BY dh_collars.dh_type DESC;


--
-- Name: recap_file_results_drill_holes; Type: VIEW; Schema: stats_reports; Owner: -
--

CREATE VIEW recap_file_results_drill_holes AS
    SELECT lex_datasource.filename, tmp3.datasource, tmp3.id, tmp3.nb_assay_values FROM ((SELECT DISTINCT tmp1.datasource, tmp2.id, count(*) AS nb_assay_values FROM ((SELECT lab_ana_results.opid, lab_ana_results.sample_id, lab_ana_results.datasource FROM pierre.lab_ana_results) tmp1 JOIN (SELECT dh_sampling_grades.opid, dh_sampling_grades.id, dh_sampling_grades.sample_id FROM pierre.dh_sampling_grades) tmp2 ON (((tmp1.opid = tmp2.opid) AND ((tmp1.sample_id)::text = (tmp2.sample_id)::text)))) GROUP BY tmp1.datasource, tmp2.id) tmp3 JOIN pierre.lex_datasource ON ((tmp3.datasource = lex_datasource.datasource_id))) ORDER BY tmp3.datasource, tmp3.id;


--
-- Name: verif_attachements_journaliers_sondeur; Type: VIEW; Schema: stats_reports; Owner: -
--

CREATE VIEW verif_attachements_journaliers_sondeur AS
    SELECT shift_reports.date, sum(shift_reports.drilled_length_during_shift) AS drilled_length_per_day, repeat('|'::text, ((sum(shift_reports.drilled_length_during_shift) / (10)::numeric))::integer) AS graph_drilled_length_per_day, count(DISTINCT shift_reports.id) AS nb_drill_holes, min((shift_reports.id)::text) AS first_dh, max((shift_reports.id)::text) AS last_dh FROM pierre.shift_reports GROUP BY shift_reports.date ORDER BY shift_reports.date;


SET search_path = tmp_imports, pg_catalog;

--
-- Name: bondoukou_alain_lambert_acp; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE bondoukou_alain_lambert_acp (
    indr integer,
    xxxx double precision,
    yyyy double precision,
    f1 double precision,
    f2 double precision,
    f3 double precision,
    f4 double precision
);


--
-- Name: bondoukou_alain_lambert_au_ou_icp; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE bondoukou_alain_lambert_au_ou_icp (
    indr integer,
    xxxx double precision,
    yyyy double precision,
    anal integer
);


--
-- Name: bondoukou_alain_lambert_cah; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE bondoukou_alain_lambert_cah (
    indr integer,
    cah1 double precision,
    x double precision,
    y double precision,
    gdm1 double precision,
    gdm2 double precision,
    num__ro bigint
);


--
-- Name: bondoukou_alain_lambert_cah7; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE bondoukou_alain_lambert_cah7 (
    indr integer,
    cah7 double precision,
    gdm1 double precision,
    x double precision,
    y double precision
);


--
-- Name: bondoukou_alain_lambert_coor; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE bondoukou_alain_lambert_coor (
    xxxx double precision,
    yyyy double precision,
    indr integer,
    numauto integer NOT NULL
);


--
-- Name: bondoukou_alain_lambert_coor_icp; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE bondoukou_alain_lambert_coor_icp (
    indr integer,
    xxxx double precision,
    yyyy double precision,
    sio2 double precision,
    al2o3 double precision,
    fe2o3 double precision,
    cao double precision,
    mgo double precision,
    k2o double precision,
    mno double precision,
    tio2 double precision,
    p2o5 double precision,
    li double precision,
    be double precision,
    b double precision,
    v double precision,
    cr double precision,
    co double precision,
    ni double precision,
    cu double precision,
    zn double precision,
    "As" double precision,
    sr double precision,
    y double precision,
    nb double precision,
    mo double precision,
    ag double precision,
    cd double precision,
    sn double precision,
    sb double precision,
    ba double precision,
    la double precision,
    ce double precision,
    w double precision,
    bi double precision,
    zr double precision,
    pb double precision,
    cah1 bigint
);


--
-- Name: bondoukou_alain_lambert_coor_numauto_seq; Type: SEQUENCE; Schema: tmp_imports; Owner: -
--

CREATE SEQUENCE bondoukou_alain_lambert_coor_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: bondoukou_alain_lambert_coor_numauto_seq; Type: SEQUENCE OWNED BY; Schema: tmp_imports; Owner: -
--

ALTER SEQUENCE bondoukou_alain_lambert_coor_numauto_seq OWNED BY bondoukou_alain_lambert_coor.numauto;


--
-- Name: bondoukou_alain_lambert_icp; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE bondoukou_alain_lambert_icp (
    sio2 double precision,
    al2o3 double precision,
    fe2o3 double precision,
    cao double precision,
    mgo double precision,
    k2o double precision,
    mno double precision,
    tio2 double precision,
    p2o5 double precision,
    li double precision,
    be double precision,
    b double precision,
    v double precision,
    cr double precision,
    co double precision,
    ni double precision,
    cu double precision,
    zn double precision,
    "As" double precision,
    sr double precision,
    y double precision,
    nb double precision,
    mo double precision,
    ag double precision,
    cd double precision,
    sn double precision,
    sb double precision,
    ba double precision,
    la double precision,
    ce double precision,
    w double precision,
    pb double precision,
    bi double precision,
    zr double precision,
    indr integer
);


--
-- Name: bondoukou_alain_lambert_or; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE bondoukou_alain_lambert_or (
    indr integer,
    xxxx double precision,
    yyyy double precision,
    au integer,
    au_m integer
);


--
-- Name: bondoukou_alain_lambert_tarkw_cah_3; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE bondoukou_alain_lambert_tarkw_cah_3 (
    indr character(255),
    x double precision,
    y double precision,
    gdm1 double precision,
    _3gr double precision
);


--
-- Name: bondoukou_alain_lambert_tout; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE bondoukou_alain_lambert_tout (
    indr integer,
    xxxx double precision,
    yyyy double precision,
    zzzz double precision,
    au double precision,
    au_m double precision,
    si double precision,
    al double precision,
    fe double precision,
    ca double precision,
    mg double precision,
    k double precision,
    mn double precision,
    ti double precision,
    p double precision,
    li double precision,
    be double precision,
    b double precision,
    v double precision,
    cr double precision,
    co double precision,
    ni double precision,
    cu double precision,
    zn double precision,
    "As" double precision,
    sr double precision,
    y double precision,
    nb double precision,
    mo double precision,
    ag double precision,
    cd double precision,
    sn double precision,
    sb double precision,
    ba double precision,
    la double precision,
    ce double precision,
    w double precision,
    pb double precision,
    bi double precision,
    zr double precision,
    anal character(255)
);


--
-- Name: bondoukou_alain_lambert_vx_tvx; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE bondoukou_alain_lambert_vx_tvx (
    num bigint,
    y double precision,
    x double precision,
    numauto integer NOT NULL
);


--
-- Name: bondoukou_alain_lambert_vx_tvx_numauto_seq; Type: SEQUENCE; Schema: tmp_imports; Owner: -
--

CREATE SEQUENCE bondoukou_alain_lambert_vx_tvx_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: bondoukou_alain_lambert_vx_tvx_numauto_seq; Type: SEQUENCE OWNED BY; Schema: tmp_imports; Owner: -
--

ALTER SEQUENCE bondoukou_alain_lambert_vx_tvx_numauto_seq OWNED BY bondoukou_alain_lambert_vx_tvx.numauto;


--
-- Name: cme_db_mdb_assay; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE cme_db_mdb_assay (
    hole_id character(24),
    depth_from_ double precision,
    depth_to double precision,
    samp_id character(30),
    au double precision,
    notes character(510),
    initial_weight double precision
);


--
-- Name: cme_db_mdb_collar; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE cme_db_mdb_collar (
    hole_id character(24),
    x double precision,
    y double precision,
    z double precision,
    hole_path character(16),
    hole_type character(4),
    hole_year bigint,
    max_depth double precision,
    started timestamp without time zone,
    finished timestamp without time zone,
    zone character(20),
    comments character(510),
    datum character(510),
    description character(510),
    samples bigint,
    tmp character(510)
);


--
-- Name: cme_db_mdb_holetypes; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE cme_db_mdb_holetypes (
    hole_type character(24),
    hole_type_description character(510)
);


--
-- Name: cme_db_mdb_lithology; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE cme_db_mdb_lithology (
    hole_id character(510),
    depth_from_ double precision,
    depth_to double precision,
    lithology character(510),
    lith_code character(510),
    caracteristics character(510),
    comments character(510),
    tmp character(510)
);


--
-- Name: cme_db_mdb_styles; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE cme_db_mdb_styles (
    code character(40),
    field_name character(36),
    from__value character(46),
    graphics_colour character(64),
    graphics_pattern character(10),
    line_colour character(64),
    line_style character(64),
    line_weight bigint,
    marker_size double precision,
    marker_style character(32),
    plotting_colour character(64),
    plotting_pattern character(32),
    style_type character(2),
    table_name character(36),
    to_value character(46)
);


--
-- Name: cme_db_mdb_survey; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE cme_db_mdb_survey (
    azimuth double precision,
    comments character(100),
    depth double precision,
    dip double precision,
    hole_id character(24),
    method character(2)
);


--
-- Name: lab_ana_batches_reception_ity; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE lab_ana_batches_reception_ity (
    opid integer,
    jobno character varying,
    generic_txt_col1 character varying,
    generic_txt_col2 character varying,
    generic_txt_col3 character varying,
    generic_txt_col4 character varying,
    numauto integer NOT NULL,
    datasource integer
);


--
-- Name: lab_ana_batches_reception_ity_numauto_seq; Type: SEQUENCE; Schema: tmp_imports; Owner: -
--

CREATE SEQUENCE lab_ana_batches_reception_ity_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: lab_ana_batches_reception_ity_numauto_seq; Type: SEQUENCE OWNED BY; Schema: tmp_imports; Owner: -
--

ALTER SEQUENCE lab_ana_batches_reception_ity_numauto_seq OWNED BY lab_ana_batches_reception_ity.numauto;


--
-- Name: pieces_mouvts; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE pieces_mouvts (
    date_doc_internes character varying,
    jour_doc_internes character varying,
    reference_article character varying,
    designation character varying,
    no_piece character varying,
    reference character varying,
    quantite numeric,
    cmup numeric,
    montant numeric,
    code_affaire character varying,
    intitule_document character varying,
    depot character varying
);


--
-- Name: pieces_stock_fin_2011; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE pieces_stock_fin_2011 (
    reference_article character varying,
    reference_designation_article character varying,
    emplacement_principal character varying,
    qte_stock_reel numeric,
    qte_disponible numeric,
    cmup_unitaire numeric,
    montant_stock__cmup_ numeric,
    controle_prix numeric,
    ecart numeric
);


--
-- Name: pol_ana; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE pol_ana (
    indr_1 character varying,
    dir_utm numeric,
    incl numeric,
    indc_1 character varying,
    xutm29n numeric,
    yutm29n numeric,
    z numeric,
    depto numeric,
    indr_2 character varying,
    or_ numeric,
    au numeric,
    orto numeric,
    cod character varying,
    hor character varying,
    indc_2 character varying,
    xxxx numeric,
    yyyy numeric,
    zzzz numeric,
    datasource integer,
    numauto integer NOT NULL
);


--
-- Name: pol_ana_numauto_seq; Type: SEQUENCE; Schema: tmp_imports; Owner: -
--

CREATE SEQUENCE pol_ana_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: pol_ana_numauto_seq; Type: SEQUENCE OWNED BY; Schema: tmp_imports; Owner: -
--

ALTER SEQUENCE pol_ana_numauto_seq OWNED BY pol_ana.numauto;


--
-- Name: pol_caisses; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE pol_caisses (
    indr character varying,
    depto character varying,
    box character varying,
    datasource integer
);


--
-- Name: pol_collets; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE pol_collets (
    numero_sondage character varying,
    type character varying,
    longueur character varying,
    azimut character varying,
    inclinaison character varying,
    xxx character varying,
    yyy character varying,
    zzz character varying,
    datasource integer,
    zone character varying,
    numauto integer NOT NULL
);


--
-- Name: pol_collets_numauto_seq; Type: SEQUENCE; Schema: tmp_imports; Owner: -
--

CREATE SEQUENCE pol_collets_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: pol_collets_numauto_seq; Type: SEQUENCE OWNED BY; Schema: tmp_imports; Owner: -
--

ALTER SEQUENCE pol_collets_numauto_seq OWNED BY pol_collets.numauto;


--
-- Name: pol_dev; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE pol_dev (
    indr_1 character varying,
    dir_1 character varying,
    incl_1 character varying,
    indc character varying,
    xxxx_1 character varying,
    yyyy_1 character varying,
    zzzz_1 character varying,
    indr_2 character varying,
    depto character varying,
    dir_2 character varying,
    incl_2 character varying,
    xxxx_2 character varying,
    yyyy_2 character varying,
    zzzz_2 character varying,
    datasource integer,
    numauto integer NOT NULL
);


--
-- Name: pol_dev_numauto_seq; Type: SEQUENCE; Schema: tmp_imports; Owner: -
--

CREATE SEQUENCE pol_dev_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: pol_dev_numauto_seq; Type: SEQUENCE OWNED BY; Schema: tmp_imports; Owner: -
--

ALTER SEQUENCE pol_dev_numauto_seq OWNED BY pol_dev.numauto;


--
-- Name: pol_epai; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE pol_epai (
    indr_1 character varying,
    dir character varying,
    incl character varying,
    c character varying,
    xxxx_1 character varying,
    yyyy_1 character varying,
    zzzz_1 character varying,
    indr_2 character varying,
    depto character varying,
    profondeur character varying,
    couvert character varying,
    gravillons character varying,
    arta character varying,
    arba character varying,
    sap character varying,
    sapr character varying,
    xxxx_2 character varying,
    yyyy_2 character varying,
    zzzz_2 character varying,
    datasource integer,
    numauto integer NOT NULL
);


--
-- Name: pol_epai_numauto_seq; Type: SEQUENCE; Schema: tmp_imports; Owner: -
--

CREATE SEQUENCE pol_epai_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: pol_epai_numauto_seq; Type: SEQUENCE OWNED BY; Schema: tmp_imports; Owner: -
--

ALTER SEQUENCE pol_epai_numauto_seq OWNED BY pol_epai.numauto;


--
-- Name: pol_lit; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE pol_lit (
    indr_1 character varying,
    dir character varying,
    incl character varying,
    indc character varying,
    xxxx_1 character varying,
    yyyy_1 character varying,
    zzzz_1 character varying,
    indr_2 character varying,
    depto character varying,
    lito character varying,
    alt character varying,
    text_1 character varying,
    text_2 character varying,
    xxxx_2 character varying,
    yyyy_2 character varying,
    zzzz_2 character varying,
    datasource integer,
    numauto integer NOT NULL,
    colour character varying
);


--
-- Name: pol_lit_numauto_seq; Type: SEQUENCE; Schema: tmp_imports; Owner: -
--

CREATE SEQUENCE pol_lit_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: pol_lit_numauto_seq; Type: SEQUENCE OWNED BY; Schema: tmp_imports; Owner: -
--

ALTER SEQUENCE pol_lit_numauto_seq OWNED BY pol_lit.numauto;


--
-- Name: pol_lit_okazou; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE pol_lit_okazou (
    indr_1 character varying,
    dir character varying,
    incl character varying,
    indc character varying,
    xxxx_1 character varying,
    yyyy_1 character varying,
    zzzz_1 character varying,
    indr_2 character varying,
    depto character varying,
    lito character varying,
    alt character varying,
    text_1 character varying,
    text_2 character varying,
    xxxx_2 character varying,
    yyyy_2 character varying,
    zzzz_2 character varying,
    datasource integer,
    numauto integer,
    colour character varying
);


--
-- Name: pol_stru; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE pol_stru (
    indr_1 character varying,
    dir character varying,
    incl character varying,
    indc character varying,
    xutm character varying,
    y_utm character varying,
    z character varying,
    indr_2 character varying,
    depto character varying,
    dutm character varying,
    dmag character varying,
    pend character varying,
    direction character varying,
    dip character varying,
    dip_quadrant character varying,
    description character varying,
    text character varying,
    xxxx character varying,
    yyyy character varying,
    zzzz character varying,
    datasource character varying,
    numauto character varying
);


--
-- Name: pol_stru_orig_convention_dipdir; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE pol_stru_orig_convention_dipdir (
    indr_1 character varying,
    dir character varying,
    incl character varying,
    indc character varying,
    xutm character varying,
    y_utm character varying,
    z character varying,
    indr_2 character varying,
    depto character varying,
    dutm character varying,
    pend character varying,
    dmag character varying,
    description character varying,
    text character varying,
    xxxx character varying,
    yyyy character varying,
    zzzz character varying,
    datasource integer,
    numauto integer NOT NULL
);


--
-- Name: pol_stru_numauto_seq; Type: SEQUENCE; Schema: tmp_imports; Owner: -
--

CREATE SEQUENCE pol_stru_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: pol_stru_numauto_seq; Type: SEQUENCE OWNED BY; Schema: tmp_imports; Owner: -
--

ALTER SEQUENCE pol_stru_numauto_seq OWNED BY pol_stru_orig_convention_dipdir.numauto;


--
-- Name: qc; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE qc (
    id character varying,
    depfrom character varying,
    depto character varying,
    core_loss_cm character varying,
    weight_kg character varying,
    sample_type character varying,
    sample_id character varying,
    comments character varying,
    opid character varying,
    batch_id character varying,
    datasource character varying,
    au1_ppm character varying,
    au2_ppm character varying,
    au3_ppm character varying,
    au4_ppm character varying,
    au5_ppm character varying,
    au6_ppm character varying,
    ph character varying,
    ag_ppm character varying,
    al_perc character varying,
    as_ppm character varying,
    ba_ppm character varying,
    bi_ppm character varying,
    ca_perc character varying,
    cd_ppm character varying,
    co_ppm character varying,
    cr_ppm character varying,
    cu_perc character varying,
    fe_perc character varying,
    ga_ppm character varying,
    k_perc character varying,
    la_ppm character varying,
    li_ppm character varying,
    mg_perc character varying,
    mn_ppm character varying,
    moisture character varying,
    mo_ppm character varying,
    na_perc character varying,
    nb_ppm character varying,
    ni_ppm character varying,
    pb_perc character varying,
    sb_ppm character varying,
    sc_ppm character varying,
    se_ppm character varying,
    sn_ppm character varying,
    sr_ppm character varying,
    ta_ppm character varying,
    te_ppm character varying,
    ti_perc character varying,
    v_ppm character varying,
    w_ppm character varying,
    y_ppm character varying,
    zn_perc character varying,
    qc character varying
);


--
-- Name: tmp_0000007503_xyztetes; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_0000007503_xyztetes (
    hole_id character varying,
    xmarrec character varying,
    ymarrec character varying,
    zmarrec character varying,
    xutm character varying,
    yutm character varying,
    zutm character varying,
    azim character varying,
    incl character varying,
    project character varying,
    max_depth character varying,
    to__ character varying,
    type character varying,
    azim__ character varying,
    incl__ character varying
);


--
-- Name: tmp_1; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_1 (
    hole_id character varying,
    depth_from_ character varying,
    depth_to character varying,
    lito character varying
);


--
-- Name: tmp_120708_smi_explo_suivi_sondages; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_120708_smi_explo_suivi_sondages (
    date character varying,
    shift character varying,
    rig character varying,
    id character varying,
    id_projet character varying,
    location character varying,
    dh_type character varying,
    planned_depth character varying,
    azim_ng character varying,
    dip_hz character varying,
    len_destr character varying,
    len_pq character varying,
    len_hq character varying,
    len_nq character varying,
    drilled_shift character varying,
    depth_tot character varying,
    reco_m character varying,
    reco_pc_shift character varying,
    reco_m_tot character varying,
    reco_pc_tot character varying,
    samples character varying,
    duplicate character varying,
    blank character varying,
    total character varying,
    standby_afm character varying,
    standby_sfm character varying,
    standby_meteo character varying,
    observation character varying
);


--
-- Name: tmp_120710_db_update_dh_collars; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_120710_db_update_dh_collars (
    id character varying,
    location character varying,
    profile character varying,
    x_utm29n character varying,
    y_utm29n character varying,
    z_utm29n character varying,
    x_utm29n_temp character varying,
    y_utm29n_temp character varying,
    z_utm29n_temp character varying,
    azim_ng character varying,
    azim_nm character varying,
    dip_hz character varying,
    dh_type character varying,
    date_start character varying,
    date_completed character varying,
    contractor character varying,
    geologist character varying,
    length character varying,
    len_destr character varying,
    len_pq character varying,
    len_hq character varying,
    len_nq character varying,
    len_bq character varying,
    nb_samples character varying,
    comments character varying,
    completed character varying,
    datasource character varying,
    opid character varying,
    purpose character varying,
    x_local character varying,
    y_local character varying,
    z_local character varying,
    accusum character varying
);


--
-- Name: tmp_120710_db_update_dh_collars_premier_essai; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_120710_db_update_dh_collars_premier_essai (
    id character varying,
    location character varying,
    profile character varying,
    x_utm29n character varying,
    y_utm29n character varying,
    z_utm29n character varying,
    x_utm29n_temp character varying,
    y_utm29n_temp character varying,
    z_utm29n_temp character varying,
    azim_ng character varying,
    azim_nm character varying,
    dip_hz character varying,
    dh_type character varying,
    date_start character varying,
    date_completed character varying,
    contractor character varying,
    geologist character varying,
    length character varying,
    len_destr character varying,
    len_pq character varying,
    len_hq character varying,
    len_nq character varying,
    len_bq character varying,
    nb_samples character varying,
    comments character varying,
    completed character varying,
    datasource character varying,
    opid character varying,
    purpose character varying,
    x_local character varying,
    y_local character varying,
    z_local character varying,
    accusum character varying
);


--
-- Name: tmp_120710_db_update_dh_sampling_grades; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_120710_db_update_dh_sampling_grades (
    id character varying,
    depfrom character varying,
    depto character varying,
    core_loss_cm character varying,
    weight_kg character varying,
    sample_type character varying,
    sample_id character varying,
    comments character varying,
    opid character varying,
    batch_id character varying,
    datasource character varying,
    au1_ppm character varying,
    au2_ppm character varying,
    au3_ppm character varying,
    au4_ppm character varying,
    au5_ppm character varying,
    au6_ppm character varying,
    ph character varying,
    ag_ppm character varying,
    al_perc character varying,
    as_ppm character varying,
    ba_ppm character varying,
    bi_ppm character varying,
    ca_perc character varying,
    cd_ppm character varying,
    co_ppm character varying,
    cr_ppm character varying,
    cu_perc character varying,
    fe_perc character varying,
    ga_ppm character varying,
    k_perc character varying,
    la_ppm character varying,
    li_ppm character varying,
    mg_perc character varying,
    mn_ppm character varying,
    moisture character varying,
    mo_ppm character varying,
    na_perc character varying,
    nb_ppm character varying,
    ni_ppm character varying,
    pb_perc character varying,
    sb_ppm character varying,
    sc_ppm character varying,
    se_ppm character varying,
    sn_ppm character varying,
    sr_ppm character varying,
    ta_ppm character varying,
    te_ppm character varying,
    ti_perc character varying,
    v_ppm character varying,
    w_ppm character varying,
    y_ppm character varying,
    zn_perc character varying
);


--
-- Name: tmp_120710_db_update_dh_sampling_grades_corrections; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_120710_db_update_dh_sampling_grades_corrections (
    id character varying,
    depfrom character varying,
    depto character varying,
    core_loss_cm character varying,
    weight_kg character varying,
    sample_type character varying,
    sample_id character varying,
    comments character varying,
    opid character varying,
    batch_id character varying,
    datasource character varying,
    au1_ppm character varying,
    au2_ppm character varying,
    au3_ppm character varying,
    au4_ppm character varying,
    au5_ppm character varying,
    au6_ppm character varying,
    ph character varying,
    ag_ppm character varying,
    al_perc character varying,
    as_ppm character varying,
    ba_ppm character varying,
    bi_ppm character varying,
    ca_perc character varying,
    cd_ppm character varying,
    co_ppm character varying,
    cr_ppm character varying,
    cu_perc character varying,
    fe_perc character varying,
    ga_ppm character varying,
    k_perc character varying,
    la_ppm character varying,
    li_ppm character varying,
    mg_perc character varying,
    mn_ppm character varying,
    moisture character varying,
    mo_ppm character varying,
    na_perc character varying,
    nb_ppm character varying,
    ni_ppm character varying,
    pb_perc character varying,
    sb_ppm character varying,
    sc_ppm character varying,
    se_ppm character varying,
    sn_ppm character varying,
    sr_ppm character varying,
    ta_ppm character varying,
    te_ppm character varying,
    ti_perc character varying,
    v_ppm character varying,
    w_ppm character varying,
    y_ppm character varying,
    zn_perc character varying
);


--
-- Name: tmp_120710_db_update_lab_ana_batches_expedition; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_120710_db_update_lab_ana_batches_expedition (
    opid character varying,
    batch_id character varying,
    order_id character varying,
    lab_batches character varying,
    labname character varying,
    expedition_id character varying,
    description character varying,
    preparation character varying,
    process_labo character varying,
    scheme character varying,
    shipment_date character varying,
    sent_to_lab character varying,
    reception_date character varying,
    results_received character varying,
    comments character varying,
    datasource character varying,
    samples_amount character varying,
    sample_id_first character varying,
    sample_id_last character varying
);


--
-- Name: tmp_120710_db_update_lab_ana_batches_reception; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_120710_db_update_lab_ana_batches_reception (
    opid character varying,
    jobno character varying,
    generic_txt_col1 character varying,
    generic_txt_col2 character varying,
    generic_txt_col3 character varying,
    generic_txt_col4 character varying
);


--
-- Name: tmp_120710_db_update_lab_ana_qaqc_results; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_120710_db_update_lab_ana_qaqc_results (
    opid character varying,
    jobno character varying,
    generic_txt_col1 character varying,
    generic_txt_col2 character varying,
    generic_txt_col3 character varying,
    generic_txt_col4 character varying,
    generic_txt_col5 character varying
);


--
-- Name: tmp_120710_db_update_lab_ana_results; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_120710_db_update_lab_ana_results (
    labname character varying,
    jobno character varying,
    order_id character varying,
    sample_id character varying,
    scheme character varying,
    analyte character varying,
    value character varying,
    db_update_timestamp character varying,
    value_num character varying,
    opid character varying,
    batch_id character varying,
    sampletype character varying,
    unit character varying,
    datasource character varying
);


--
-- Name: tmp_120710_db_update_qc_sampling; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_120710_db_update_qc_sampling (
    sample_id character varying,
    batch_id character varying,
    qc_type character varying,
    comments character varying,
    opid character varying,
    refers_to character varying,
    datasource character varying
);


--
-- Name: tmp_120921_dh_sampling_grades_; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_120921_dh_sampling_grades_ (
    id character varying,
    depfrom character varying,
    depto character varying,
    core_loss_cm character varying,
    weight_kg character varying,
    sample_type character varying,
    sample_id character varying,
    comments character varying,
    opid character varying,
    batch_id character varying,
    datasource character varying,
    au1_ppm character varying,
    au2_ppm character varying,
    au3_ppm character varying,
    au4_ppm character varying,
    au5_ppm character varying,
    au6_ppm character varying,
    ph character varying,
    ag_ppm character varying,
    al_perc character varying,
    as_ppm character varying,
    ba_ppm character varying,
    bi_ppm character varying,
    ca_perc character varying,
    cd_ppm character varying,
    co_ppm character varying,
    cr_ppm character varying,
    cu_perc character varying,
    fe_perc character varying,
    ga_ppm character varying,
    k_perc character varying,
    la_ppm character varying,
    li_ppm character varying,
    mg_perc character varying,
    mn_ppm character varying,
    moisture character varying,
    mo_ppm character varying,
    na_perc character varying,
    nb_ppm character varying,
    ni_ppm character varying,
    pb_perc character varying,
    sb_ppm character varying,
    sc_ppm character varying,
    se_ppm character varying,
    sn_ppm character varying,
    sr_ppm character varying,
    ta_ppm character varying,
    te_ppm character varying,
    ti_perc character varying,
    v_ppm character varying,
    w_ppm character varying,
    y_ppm character varying,
    zn_perc character varying
);


--
-- Name: tmp_1_collets_forages_2008_2009_ts_secteurs; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_1_collets_forages_2008_2009_ts_secteurs (
    hole_id character varying,
    x_utm character varying,
    y_utm character varying,
    elevation character varying,
    depth character varying,
    dip character varying,
    azm character varying,
    hole_type_ character varying,
    sites character varying,
    zone character varying,
    annee_campagne character varying
);


--
-- Name: tmp_2_fich_exped_rc_dd_labo_smi_par_mois; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_2_fich_exped_rc_dd_labo_smi_par_mois (
    id character varying,
    dh_type character varying,
    nb_ech_envoyes character varying,
    no_ech_debut character varying,
    no_ech_fin character varying,
    batch_id character varying,
    date_envoi character varying,
    labo_destinataire character varying,
    type_analyse character varying,
    nb_no_samples character varying
);


--
-- Name: tmp_2_fich_exped_rc_dd_labo_smi_par_sect; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_2_fich_exped_rc_dd_labo_smi_par_sect (
    id character varying,
    dh_type character varying,
    nb_ech_envoyes character varying,
    no_ech_debut character varying,
    no_ech_fin character varying,
    date_envoi character varying,
    labo_destinataire character varying,
    type_analyse character varying,
    nb_no_samples character varying
);


--
-- Name: tmp_2_fich_exped_rc_dd_labo_smi_par_sect_mois_exped_rc_dd_nov_m; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_2_fich_exped_rc_dd_labo_smi_par_sect_mois_exped_rc_dd_nov_m (
    id character varying,
    dh_type character varying,
    nb_ech_envoyes character varying,
    no_ech_debut character varying,
    no_ech_fin character varying,
    date_envoi character varying,
    labo_destinataire character varying,
    type_analyse character varying,
    nb_no_samples character varying
);


--
-- Name: tmp_a; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_a (
    id character varying,
    shid character varying,
    profil character varying,
    dh_type character varying,
    long character varying,
    azi character varying,
    incl character varying,
    x character varying,
    y character varying,
    z character varying
);


--
-- Name: tmp_abj13000003_dataqc; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_abj13000003_dataqc (
    jobno character varying,
    orderno character varying,
    sampletype character varying,
    sampleid character varying,
    scheme character varying,
    analyte character varying,
    value character varying,
    unit character varying,
    detlim character varying,
    uplim character varying
);


--
-- Name: tmp_abj13000028; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_abj13000028 (
    jobno character varying,
    orderno character varying,
    sampletype character varying,
    sampleid character varying,
    scheme character varying,
    analyte character varying,
    value character varying,
    unit character varying
);


--
-- Name: tmp_abj13000028_metadata; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_abj13000028_metadata (
    labname character varying,
    client character varying,
    file_created character varying,
    job_number character varying,
    number_of_samples character varying,
    project character varying,
    shipment_id character varying,
    p_o_number character varying,
    received character varying
);


--
-- Name: tmp_abj13000032_dataqc; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_abj13000032_dataqc (
    jobno character varying,
    orderno character varying,
    sampletype character varying,
    sampleid character varying,
    scheme character varying,
    analyte character varying,
    value character varying,
    unit character varying,
    detlim character varying,
    uplim character varying
);


--
-- Name: tmp_abj13000032_header; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_abj13000032_header (
    labname character varying,
    client character varying,
    validated character varying,
    job_number character varying,
    number_of_samples character varying,
    project character varying,
    shipment_id character varying,
    p_o_number character varying,
    received character varying
);


--
-- Name: tmp_ana; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_ana (
    reference character varying,
    unit character varying,
    sample_id character varying,
    aufa character varying,
    aurpt1 character varying,
    aurpt2 character varying,
    __aufaval character varying,
    _aurpt1val character varying,
    __aurpt2val character varying
);


--
-- Name: tmp_anal; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_anal (
    indr character varying,
    prof character varying,
    or_ character varying,
    au character varying
);


--
-- Name: tmp_analyses_mc; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_analyses_mc (
    index character varying,
    unique_id character varying,
    or_sample character varying,
    source character varying,
    file character varying,
    sampling_type character varying,
    drill_alt character varying,
    drill_ref character varying,
    age character varying,
    method character varying,
    age_ref character varying,
    departement character varying,
    commune character varying,
    mapsheet character varying,
    x_orig character varying,
    y_orig character varying,
    coord_sys_desc character varying,
    easting character varying,
    northing character varying,
    srid character varying,
    localisation character varying,
    the_geom character varying,
    site_name character varying,
    x_recalc_euro_lambert character varying,
    y_recalc_euro_lambert character varying,
    long_recalc character varying,
    lat_recalc character varying,
    rock_type character varying,
    sub_type character varying,
    pluton character varying,
    facies character varying,
    mapcode character varying,
    granite_type_1e6 character varying,
    notes character varying,
    description character varying,
    mineralogy character varying,
    sio2 character varying,
    al2o3 character varying,
    fe2o3 character varying,
    feo character varying,
    feot character varying,
    mno character varying,
    mgo character varying,
    cao character varying,
    na2o character varying,
    k2o character varying,
    tio2 character varying,
    p2o5 character varying,
    h2o_plus character varying,
    h2o_minus character varying,
    h2ot character varying,
    co2 character varying,
    cl character varying,
    f character varying,
    s character varying,
    loi character varying,
    ag character varying,
    as_ character varying,
    au character varying,
    b character varying,
    ba character varying,
    be character varying,
    bi character varying,
    br character varying,
    cd character varying,
    ce character varying,
    co character varying,
    cr character varying,
    cs character varying,
    cu character varying,
    dy character varying,
    er character varying,
    eu character varying,
    ga character varying,
    gd character varying,
    ge character varying,
    hf character varying,
    hg character varying,
    ho character varying,
    i character varying,
    in_ character varying,
    ir character varying,
    la character varying,
    li character varying,
    lu character varying,
    mo character varying,
    nb character varying,
    nd character varying,
    ni character varying,
    os character varying,
    pa character varying,
    pb character varying,
    pd character varying,
    pm character varying,
    po character varying,
    pr character varying,
    pt character varying,
    rb character varying,
    re character varying,
    rh character varying,
    ru character varying,
    sb character varying,
    sc character varying,
    se character varying,
    sm character varying,
    sn character varying,
    sr character varying,
    ta character varying,
    tb character varying,
    tc character varying,
    te character varying,
    th character varying,
    tl character varying,
    tm character varying,
    u character varying,
    v character varying,
    w character varying,
    y character varying,
    yb character varying,
    zn character varying,
    zr character varying,
    crd_present character varying,
    ksp_mes_est character varying,
    qz character varying,
    ksp character varying,
    pg character varying,
    myrm character varying,
    bt character varying,
    ap character varying,
    zrc character varying,
    crd character varying,
    ms character varying,
    and_ character varying,
    sill character varying,
    amp character varying,
    px character varying,
    sph character varying,
    ep character varying,
    opq character varying,
    per character varying,
    chl character varying,
    trm character varying,
    calc character varying,
    acc character varying,
    opx character varying,
    cpx character varying,
    ksp_corr character varying,
    qz_corr character varying,
    ksp_pcr character varying,
    ksp_mat character varying,
    qz_mat character varying,
    pg_mat character varying,
    mafics_mat character varying,
    ms_prop character varying,
    crd_prop character varying,
    mat character varying,
    pluton_name character varying,
    domain character varying,
    velay_class character varying
);


--
-- Name: tmp_anasondo; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_anasondo (
    indr character varying,
    xxx character varying,
    yyy character varying,
    zzz character varying,
    z1 character varying,
    azim character varying,
    incl character varying,
    type character varying,
    prof character varying,
    or_ character varying,
    au character varying,
    numauto integer NOT NULL,
    datasource integer
);


--
-- Name: tmp_anasondo_numauto_seq; Type: SEQUENCE; Schema: tmp_imports; Owner: -
--

CREATE SEQUENCE tmp_anasondo_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: tmp_anasondo_numauto_seq; Type: SEQUENCE OWNED BY; Schema: tmp_imports; Owner: -
--

ALTER SEQUENCE tmp_anasondo_numauto_seq OWNED BY tmp_anasondo.numauto;


--
-- Name: tmp_anax; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_anax (
    indr_1 character varying,
    depto character varying,
    or_ character varying,
    auto character varying,
    indc_2 character varying,
    xxxx character varying,
    yyyy character varying,
    zzzz character varying,
    datasource integer
);


--
-- Name: tmp_append_db___lex_datasource; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_append_db___lex_datasource (
    opid character varying,
    filename character varying,
    comments character varying,
    datasource_id character varying
);


--
-- Name: tmp_base_sondage_1997_ana; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_base_sondage_1997_ana (
    indr character varying,
    depto character varying,
    or_ character varying,
    au character varying,
    au2 character varying,
    datasource integer,
    l character varying,
    indc character varying
);


--
-- Name: tmp_base_sondage_1997_caisses; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_base_sondage_1997_caisses (
    indr character varying,
    depto character varying,
    box character varying,
    datasource integer
);


--
-- Name: tmp_base_sondage_1997_diam; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_base_sondage_1997_diam (
    indr character varying,
    depto character varying,
    diam character varying,
    datasource integer
);


--
-- Name: tmp_base_sondage_1997_lex2; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_base_sondage_1997_lex2 (
    code character varying,
    descr character varying,
    datasource integer
);


--
-- Name: tmp_base_sondage_1997_litho; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_base_sondage_1997_litho (
    indr character varying,
    depto character varying,
    code character varying,
    gen2 character varying,
    cohe character varying,
    sulf character varying,
    mx_sulf character varying,
    carb character varying,
    silic character varying,
    epid character varying,
    tourm character varying,
    text character varying,
    datasource integer
);


--
-- Name: tmp_base_sondage_1997_struct; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_base_sondage_1997_struct (
    indr character varying,
    depto character varying,
    stru character varying,
    angl character varying,
    datasource integer
);


--
-- Name: tmp_base_sondage_1997_tetes; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_base_sondage_1997_tetes (
    indr character varying,
    xxxx character varying,
    yyyy character varying,
    zzzz character varying,
    ttd character varying,
    depto character varying,
    azim character varying,
    incl character varying,
    zone character varying,
    datasource integer
);


--
-- Name: tmp_bb; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_bb (
    id character varying,
    depfrom character varying,
    depto character varying,
    description character varying,
    code1 character varying,
    code2 character varying,
    code3 character varying,
    code4 character varying,
    value1 character varying,
    value2 character varying,
    value3 character varying,
    value4 character varying,
    opid character varying,
    litho_simple character varying,
    colour character varying,
    datasource character varying
);


--
-- Name: tmp_bbbb; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_bbbb (
    sample_id character varying,
    qc_type character varying,
    comments character varying,
    opid character varying,
    batch_id character varying,
    refers_to character varying,
    datasource character varying
);


--
-- Name: tmp_bbbb1; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_bbbb1 (
    sample_id character varying,
    qc_type character varying,
    comments character varying,
    opid character varying,
    batch_id character varying,
    refers_to character varying,
    datasource character varying
);


--
-- Name: tmp_bd_explo_ity_pch_dh_litho; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_bd_explo_ity_pch_dh_litho (
    opid character varying,
    id character varying,
    depfrom character varying,
    depto character varying,
    description character varying,
    code1 character varying,
    code2 character varying,
    code3 character varying,
    code4 character varying,
    value1 character varying,
    value2 character varying,
    value3 character varying,
    value4 character varying,
    litho_simple character varying,
    colour character varying
);


--
-- Name: tmp_bd_explo_ity_pch_dh_sampling_grades; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_bd_explo_ity_pch_dh_sampling_grades (
    opid character varying,
    id character varying,
    depfrom character varying,
    depto character varying,
    core_loss_cm character varying,
    weight_kg character varying,
    sample_type character varying,
    sample_id character varying,
    comments character varying,
    batch_id character varying
);


--
-- Name: tmp_bd_explo_ity_pch_lab_ana_batches; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_bd_explo_ity_pch_lab_ana_batches (
    opid character varying,
    batch_id character varying,
    labname character varying,
    expedition_id character varying,
    order_id character varying,
    description character varying,
    preparation character varying,
    process_labo character varying,
    scheme character varying,
    shipment_date character varying,
    sent_to_lab character varying,
    reception_date character varying,
    results_received character varying,
    lab_batches character varying,
    comments character varying,
    datasource character varying,
    samples_amount character varying,
    sample_id_first character varying,
    sample_id_last character varying
);


--
-- Name: tmp_bd_explo_ity_pour_entree_donnees_dh_collars; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_bd_explo_ity_pour_entree_donnees_dh_collars (
    id character varying,
    shid character varying,
    location character varying,
    profile character varying,
    srid character varying,
    x character varying,
    y character varying,
    z character varying,
    azim_ng character varying,
    azim_nm character varying,
    dip_hz character varying,
    dh_type character varying,
    date_start character varying,
    date_completed character varying,
    completed character varying,
    contractor character varying,
    geologist character varying,
    length character varying,
    len_destr character varying,
    len_pq character varying,
    len_hq character varying,
    len_nq character varying,
    len_bq character varying,
    nb_samples character varying,
    comments character varying,
    datasource character varying,
    numauto character varying,
    opid character varying,
    purpose character varying,
    x_local character varying,
    y_local character varying,
    z_local character varying
);


--
-- Name: tmp_bd_explo_ity_pour_entree_donnees_dh_litho; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_bd_explo_ity_pour_entree_donnees_dh_litho (
    opid character varying,
    id character varying,
    depfrom character varying,
    depto character varying,
    description character varying,
    code1 character varying,
    code2 character varying,
    code3 character varying,
    code4 character varying,
    value1 character varying,
    value2 character varying,
    value3 character varying,
    value4 character varying,
    litho_simple character varying,
    colour character varying
);


--
-- Name: tmp_bd_explo_ity_pour_entree_donnees_dh_sampling_grades; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_bd_explo_ity_pour_entree_donnees_dh_sampling_grades (
    opid character varying,
    id character varying,
    depfrom character varying,
    depto character varying,
    core_loss_cm character varying,
    weight_kg character varying,
    sample_type character varying,
    sample_id character varying,
    comments character varying,
    batch_id character varying,
    au1_ppm character varying,
    au2_ppm character varying,
    au3_ppm character varying,
    au4_ppm character varying,
    au5_ppm character varying,
    au6_ppm character varying,
    ph character varying,
    ag_ppm character varying,
    al_perc character varying,
    as_ppm character varying,
    ba_ppm character varying,
    bi_ppm character varying,
    ca_perc character varying,
    cd_ppm character varying,
    co_ppm character varying,
    cr_ppm character varying,
    cu_perc character varying,
    fe_perc character varying,
    ga_ppm character varying,
    k_perc character varying,
    la_ppm character varying,
    li_ppm character varying,
    mg_perc character varying,
    mn_ppm character varying,
    moisture character varying,
    mo_ppm character varying,
    na_perc character varying,
    nb_ppm character varying,
    ni_ppm character varying,
    pb_perc character varying,
    sb_ppm character varying,
    sc_ppm character varying,
    se_ppm character varying,
    sn_ppm character varying,
    sr_ppm character varying,
    ta_ppm character varying,
    te_ppm character varying,
    ti_perc character varying,
    v_ppm character varying,
    w_ppm character varying,
    y_ppm character varying,
    zn_perc character varying,
    datasource character varying
);


--
-- Name: tmp_bd_explo_ity_pour_entree_donnees_lab_ana_batches; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_bd_explo_ity_pour_entree_donnees_lab_ana_batches (
    opid character varying,
    batch_id character varying,
    labname character varying,
    expedition_id character varying,
    order_id character varying,
    description character varying,
    preparation character varying,
    process_labo character varying,
    scheme character varying,
    shipment_date character varying,
    sent_to_lab character varying,
    reception_date character varying,
    results_received character varying,
    lab_batches character varying,
    comments character varying,
    datasource character varying,
    samples_amount character varying
);


--
-- Name: tmp_bd_explo_ity_pour_entree_donnees_mousso_dh_collars; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_bd_explo_ity_pour_entree_donnees_mousso_dh_collars (
    id character varying,
    shid character varying,
    location character varying,
    profile character varying,
    srid character varying,
    x character varying,
    y character varying,
    z character varying,
    azim_ng character varying,
    azim_nm character varying,
    dip_hz character varying,
    dh_type character varying,
    date_start character varying,
    date_completed character varying,
    completed character varying,
    contractor character varying,
    geologist character varying,
    length character varying,
    len_destr character varying,
    len_pq character varying,
    len_hq character varying,
    len_nq character varying,
    len_bq character varying,
    nb_samples character varying,
    comments character varying,
    datasource character varying,
    numauto character varying,
    opid character varying,
    purpose character varying,
    x_local character varying,
    y_local character varying,
    z_local character varying
);


--
-- Name: tmp_bd_explo_ity_pour_entree_donnees_qc_sampling; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_bd_explo_ity_pour_entree_donnees_qc_sampling (
    sample_id character varying,
    qc_type character varying,
    comments character varying,
    opid character varying,
    batch_id character varying,
    refers_to character varying,
    datasource character varying
);


--
-- Name: tmp_bondoukou_geoch_sol; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_bondoukou_geoch_sol (
    grid_line character varying,
    grid_station character varying,
    sample_id character varying,
    au_ppb numeric,
    depth_cm numeric,
    soil_code character varying,
    soil_color character varying,
    alteration character varying,
    litho character varying,
    soil_description character varying,
    soil_occ character varying,
    topo character varying,
    slope character varying,
    slope_dir character varying,
    comments character varying,
    zone character varying,
    x numeric,
    y numeric,
    mapinfo_id numeric,
    z numeric
);


--
-- Name: tmp_bondoukou_sondages_collars; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_bondoukou_sondages_collars (
    datasource character varying,
    lieu_projet character varying,
    date character varying,
    geologue character varying,
    type character varying,
    holeid character varying,
    easting numeric,
    northing numeric,
    rl numeric,
    azimuth numeric,
    dip numeric,
    totdepth numeric
);


--
-- Name: tmp_bondoukou_sondages_sampling_grades; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_bondoukou_sondages_sampling_grades (
    datasource character varying,
    holeid character varying,
    depfrom numeric,
    depto numeric,
    length numeric,
    sample_id character varying,
    au_gt numeric
);


--
-- Name: tmp_bsorted; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_bsorted (
    id character varying,
    shid character varying,
    location character varying,
    profile character varying,
    srid character varying,
    x character varying,
    y character varying,
    z character varying,
    azim_ng character varying,
    azim_nm character varying,
    dip_hz character varying,
    dh_type character varying,
    date_start character varying,
    contractor character varying,
    geologist character varying,
    length character varying,
    len_destr character varying,
    len_pq character varying,
    len_hq character varying,
    len_nq character varying,
    len_bq character varying,
    nb_samples character varying,
    comments character varying,
    completed character varying,
    datasource character varying,
    date_completed character varying,
    opid character varying,
    purpose character varying,
    x_local character varying,
    y_local character varying,
    z_local character varying,
    accusum character varying,
    id_pject character varying,
    x_pject character varying,
    y_pject character varying,
    z_pject character varying
);


--
-- Name: tmp_bv130613_gravi_results; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_bv130613_gravi_results (
    a character varying,
    b character varying,
    c character varying
);


--
-- Name: tmp_cc; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_cc (
    id character varying,
    depto character varying,
    au3_ppm character varying,
    au4_ppm character varying,
    datasource character varying,
    opid character varying,
    depfrom character varying,
    core_loss_cm character varying,
    weight_kg character varying,
    sample_type character varying,
    sample_id character varying,
    comments character varying,
    batch_id character varying,
    au1_ppm character varying,
    au2_ppm character varying,
    au5_ppm character varying,
    au6_ppm character varying,
    ag_ppm character varying,
    as_ppm character varying,
    ba_ppm character varying,
    cu_perc character varying,
    pb_perc character varying,
    zn_perc character varying
);


--
-- Name: tmp_compil_deviations; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_compil_deviations (
    opid character varying,
    id character varying,
    device character varying,
    survey_name character varying,
    depto character varying,
    dip_hz character varying,
    azim_ng character varying,
    ghs_deg character varying,
    gtf_deg character varying,
    dls_m character varying,
    easting_m character varying,
    northing_m character varying,
    elevation_m character varying,
    updown_m character varying,
    leftright_m character varying,
    shortfall_m character varying,
    gravfield_g character varying,
    drift_check character varying,
    accumulated_roll_deg character varying,
    accumulated_roll_revolutions character varying,
    roll_to_station_deg character varying,
    roll_to_station_revolutions character varying,
    time_to_station_s character varying,
    temperature_c character varying,
    battery_v character varying,
    station_acc_g character varying,
    station_rate_deg_s character varying,
    station_quality_pc character varying,
    max_rate_deg_s character varying,
    motion_quality_pc character varying
);


--
-- Name: tmp_compil_ech_teneurs_polo_bd; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_compil_ech_teneurs_polo_bd (
    id character varying,
    depfrom character varying,
    depto character varying,
    au3_ppm character varying,
    au4_ppm character varying,
    au5_ppm character varying,
    datasource character varying,
    au6_ppm character varying,
    core_loss_cm character varying,
    weight_kg character varying,
    sample_type character varying,
    sample_id character varying,
    comments character varying,
    opid character varying
);


--
-- Name: tmp_compil_tetes_polo; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_compil_tetes_polo (
    indr character varying,
    azim_geo character varying,
    incl character varying,
    indc character varying,
    x character varying,
    y character varying,
    z character varying,
    longueur character varying,
    secteur character varying,
    type character varying,
    zoneproj character varying,
    date character varying,
    "time" character varying,
    datasource character varying,
    remarques character varying,
    numauto integer NOT NULL
);


--
-- Name: tmp_compil_tetes_polo_numauto_seq; Type: SEQUENCE; Schema: tmp_imports; Owner: -
--

CREATE SEQUENCE tmp_compil_tetes_polo_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: tmp_compil_tetes_polo_numauto_seq; Type: SEQUENCE OWNED BY; Schema: tmp_imports; Owner: -
--

ALTER SEQUENCE tmp_compil_tetes_polo_numauto_seq OWNED BY tmp_compil_tetes_polo.numauto;


--
-- Name: tmp_coordonnees_des_sondages_en_dessous; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_coordonnees_des_sondages_en_dessous (
    hole_id character varying,
    y character varying,
    x character varying,
    z character varying
);


--
-- Name: tmp_coordonnees_sondages; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_coordonnees_sondages (
    id character varying,
    x_local character varying,
    y_local character varying,
    z_local character varying
);


--
-- Name: tmp_daana; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_daana (
    indr_1 character varying,
    dir character varying,
    incl character varying,
    indc_1 character varying,
    x character varying,
    y character varying,
    z character varying,
    indr_2 character varying,
    depto character varying,
    or_ character varying,
    auto character varying,
    orto character varying,
    cod character varying,
    hor character varying,
    indc_2 character varying,
    xxxx character varying,
    yyyy character varying,
    zzzz character varying,
    datasource integer
);


--
-- Name: tmp_dadev; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_dadev (
    indr_1 character varying,
    dir_1 character varying,
    incl_1 character varying,
    indc character varying,
    xxxx_1 character varying,
    yyyy_1 character varying,
    zzzz_1 character varying,
    indr_2 character varying,
    depto character varying,
    dir_2 character varying,
    incl_2 character varying,
    xxxx_2 character varying,
    yyyy_2 character varying,
    zzzz_2 character varying,
    datasource integer
);


--
-- Name: tmp_dali_bsd; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_dali_bsd (
    indr character varying,
    depto character varying,
    lito character varying,
    alt character varying,
    text_1 character varying,
    text_2 character varying,
    xxxx character varying,
    yyyy character varying,
    zzzz character varying
);


--
-- Name: tmp_dalit; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_dalit (
    indr_1 character varying,
    dir character varying,
    incl character varying,
    indc character varying,
    x character varying,
    y character varying,
    z_1 character varying,
    indr_2 character varying,
    depto character varying,
    lito character varying,
    alt character varying,
    text character varying,
    xutm character varying,
    yutm character varying,
    z_2 character varying,
    datasource integer
);


--
-- Name: tmp_dalit_bsd; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_dalit_bsd (
    indr character varying,
    depto character varying,
    lito character varying,
    alt character varying,
    text_1 character varying,
    text_2 character varying,
    xxxx character varying,
    yyyy character varying,
    zzzz character varying
);


--
-- Name: tmp_dalit_hed; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_dalit_hed (
    indr character varying,
    dir character varying,
    incl character varying,
    indc character varying,
    xxxx character varying,
    yyyy character varying,
    zzzz character varying
);


--
-- Name: tmp_datafiletmp; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_datafiletmp (
    sample_id character varying,
    au_ppm character varying,
    au1_ppm character varying,
    au2_ppm character varying
);


--
-- Name: tmp_dd; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_dd (
    indr character varying,
    depfrom character varying,
    depto character varying,
    box character varying,
    datasource character varying
);


--
-- Name: tmp_def_sampling_grades_fields; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_def_sampling_grades_fields (
    opid character varying,
    grade_field character varying,
    scheme character varying,
    laboratory character varying,
    grade_determination_method character varying,
    comments character varying
);


--
-- Name: tmp_description_simplifiee; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_description_simplifiee (
    hole_id character varying,
    depfrom character varying,
    depto character varying,
    description character varying,
    code_litho character varying
);


--
-- Name: tmp_detnlim; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_detnlim (
    reference character varying,
    detn_limits character varying
);


--
-- Name: tmp_dh_collars; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_dh_collars (
    id character varying,
    shid character varying,
    location character varying,
    profile character varying,
    srid character varying,
    x character varying,
    y character varying,
    z character varying,
    azim_ng character varying,
    azim_nm character varying,
    dip_hz character varying,
    dh_type character varying,
    date_start character varying,
    contractor character varying,
    geologist character varying,
    length character varying,
    len_destr character varying,
    len_pq character varying,
    len_hq character varying,
    len_nq character varying,
    len_bq character varying,
    nb_samples character varying,
    comments character varying,
    completed character varying,
    datasource character varying,
    numauto character varying,
    date_completed character varying,
    opid character varying,
    purpose character varying,
    x_local character varying,
    y_local character varying,
    z_local character varying,
    accusum character varying,
    id_pject character varying,
    x_pject character varying,
    y_pject character varying,
    z_pject character varying
);


--
-- Name: tmp_dh_collars_duran_2012_10_19; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_dh_collars_duran_2012_10_19 (
    id character varying,
    shid character varying,
    location character varying,
    profile character varying,
    srid character varying,
    x character varying,
    y character varying,
    z character varying,
    azim_ng character varying,
    azim_nm character varying,
    dip_hz character varying,
    dh_type character varying,
    date_start character varying,
    contractor character varying,
    geologist character varying,
    length character varying,
    len_destr character varying,
    len_pq character varying,
    len_hq character varying,
    len_nq character varying,
    len_bq character varying,
    nb_samples character varying,
    comments character varying,
    completed character varying,
    datasource character varying,
    numauto character varying,
    date_completed character varying,
    opid character varying,
    purpose character varying,
    x_local character varying,
    y_local character varying,
    z_local character varying,
    accusum character varying,
    id_pject character varying,
    x_pject character varying,
    y_pject character varying,
    z_pject character varying
);


--
-- Name: tmp_dh_collars_maj; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_dh_collars_maj (
    id character varying,
    azim_ng character varying,
    dip_hz character varying,
    x character varying,
    y character varying,
    z character varying,
    length character varying,
    location character varying,
    dh_type character varying,
    srid character varying,
    date_completed character varying,
    date_start character varying,
    datasource character varying,
    comments character varying,
    opid character varying,
    completed character varying,
    shid character varying,
    profile character varying,
    azim_nm character varying,
    contractor character varying,
    geologist character varying,
    len_destr character varying,
    len_pq character varying,
    len_hq character varying,
    len_nq character varying,
    len_bq character varying,
    nb_samples character varying,
    purpose character varying,
    x_local character varying,
    y_local character varying,
    z_local character varying,
    accusum character varying,
    id_pject character varying,
    x_pject character varying,
    y_pject character varying,
    z_pject character varying,
    xxxx character varying
);


--
-- Name: tmp_dh_collars_modif; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_dh_collars_modif (
    id character varying,
    shid character varying,
    location character varying,
    profile character varying,
    srid character varying,
    x character varying,
    y character varying,
    z character varying,
    azim_ng character varying,
    azim_nm character varying,
    dip_hz character varying,
    dh_type character varying,
    date_start character varying,
    contractor character varying,
    geologist character varying,
    length character varying,
    len_destr character varying,
    len_pq character varying,
    len_hq character varying,
    len_nq character varying,
    len_bq character varying,
    nb_samples character varying,
    comments character varying,
    completed character varying,
    datasource character varying,
    date_completed character varying,
    opid character varying,
    purpose character varying,
    x_local character varying,
    y_local character varying,
    z_local character varying,
    accusum character varying,
    id_pject character varying,
    x_pject character varying,
    y_pject character varying,
    z_pject character varying
);


--
-- Name: tmp_dh_devia_append; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_dh_devia_append (
    id character varying,
    depto character varying,
    azim_nm character varying,
    dip_hz character varying,
    temperature character varying,
    magnetic character varying,
    date character varying,
    roll character varying,
    "time" character varying,
    comments character varying,
    opid character varying,
    numauto character varying,
    valid character varying,
    azim_ng character varying,
    datasource character varying,
    device character varying
);


--
-- Name: tmp_dh_litho; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_dh_litho (
    id character varying,
    depfrom character varying,
    depto character varying,
    description character varying,
    code1 character varying,
    code2 character varying,
    code3 character varying,
    code4 character varying,
    value1 character varying,
    value2 character varying,
    value3 character varying,
    value4 character varying,
    opid character varying,
    litho_simple character varying,
    colour character varying,
    datasource character varying
);


--
-- Name: tmp_dh_litho_append; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_dh_litho_append (
    id character varying,
    depfrom character varying,
    depto character varying,
    description character varying,
    code1 character varying,
    code2 character varying,
    code3 character varying,
    code4 character varying,
    value1 character varying,
    value2 character varying,
    value3 character varying,
    value4 character varying,
    opid character varying,
    litho_simple character varying,
    colour character varying,
    datasource character varying,
    description1 character varying,
    description2 character varying,
    value5 character varying,
    value6 character varying
);


--
-- Name: tmp_dh_litho_corr; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_dh_litho_corr (
    id character varying,
    depfrom character varying,
    depto character varying,
    description character varying,
    code1 character varying,
    code2 character varying,
    code3 character varying,
    code4 character varying,
    value1 character varying,
    value2 character varying,
    value3 character varying,
    value4 character varying,
    opid character varying,
    litho_simple character varying,
    colour character varying,
    datasource character varying,
    description1 character varying,
    description2 character varying,
    value5 character varying,
    value6 character varying
);


--
-- Name: tmp_dh_mineralised_intervals; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_dh_mineralised_intervals (
    id character varying,
    depfrom character varying,
    depto character varying,
    mine character varying,
    avau character varying,
    stva character varying,
    accu character varying,
    recu character varying,
    dens character varying,
    datasource character varying,
    comments character varying,
    opid character varying
);


--
-- Name: tmp_dh_sampling_grades; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_dh_sampling_grades (
    id character varying,
    depfrom character varying,
    depto character varying,
    core_loss_cm character varying,
    weight_kg character varying,
    sample_type character varying,
    sample_id character varying,
    comments character varying,
    opid character varying,
    batch_id character varying,
    datasource character varying,
    au1_ppm character varying,
    au2_ppm character varying,
    au3_ppm character varying,
    au4_ppm character varying,
    au5_ppm character varying,
    au6_ppm character varying,
    ph character varying,
    ag_ppm character varying,
    al_perc character varying,
    as_ppm character varying,
    ba_ppm character varying,
    bi_ppm character varying,
    ca_perc character varying,
    cd_ppm character varying,
    co_ppm character varying,
    cr_ppm character varying,
    cu_perc character varying,
    fe_perc character varying,
    ga_ppm character varying,
    k_perc character varying,
    la_ppm character varying,
    li_ppm character varying,
    mg_perc character varying,
    mn_ppm character varying,
    moisture character varying,
    mo_ppm character varying,
    na_perc character varying,
    nb_ppm character varying,
    ni_ppm character varying,
    pb_perc character varying,
    sb_ppm character varying,
    sc_ppm character varying,
    se_ppm character varying,
    sn_ppm character varying,
    sr_ppm character varying,
    ta_ppm character varying,
    te_ppm character varying,
    ti_perc character varying,
    v_ppm character varying,
    w_ppm character varying,
    y_ppm character varying,
    zn_perc character varying,
    th_ppm character varying,
    tl_ppm character varying,
    u_ppm character varying,
    au_specks character varying
);


--
-- Name: tmp_dh_sampling_grades_append; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_dh_sampling_grades_append (
    id character varying,
    depfrom character varying,
    depto character varying,
    core_loss_cm character varying,
    weight_kg character varying,
    sample_type character varying,
    sample_id character varying,
    comments character varying,
    opid character varying,
    batch_id character varying,
    datasource character varying,
    au1_ppm character varying,
    au2_ppm character varying,
    au3_ppm character varying,
    au4_ppm character varying,
    au5_ppm character varying,
    au6_ppm character varying,
    ph character varying,
    ag_ppm character varying,
    al_perc character varying,
    as_ppm character varying,
    ba_ppm character varying,
    bi_ppm character varying,
    ca_perc character varying,
    cd_ppm character varying,
    co_ppm character varying,
    cr_ppm character varying,
    cu_perc character varying,
    fe_perc character varying,
    ga_ppm character varying,
    k_perc character varying,
    la_ppm character varying,
    li_ppm character varying,
    mg_perc character varying,
    mn_ppm character varying,
    moisture character varying,
    mo_ppm character varying,
    na_perc character varying,
    nb_ppm character varying,
    ni_ppm character varying,
    pb_perc character varying,
    sb_ppm character varying,
    sc_ppm character varying,
    se_ppm character varying,
    sn_ppm character varying,
    sr_ppm character varying,
    ta_ppm character varying,
    te_ppm character varying,
    ti_perc character varying,
    v_ppm character varying,
    w_ppm character varying,
    y_ppm character varying,
    zn_perc character varying,
    th_ppm character varying,
    tl_ppm character varying,
    u_ppm character varying,
    au_specks character varying
);


--
-- Name: tmp_dh_tech; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_dh_tech (
    id character varying,
    depfrom character varying,
    depto character varying,
    drilled_len character varying,
    reco_len character varying,
    percent_reco character varying,
    rqd_len character varying,
    percent_rqd character varying,
    diam character varying,
    numauto character varying,
    datasource character varying,
    opid character varying,
    comments character varying,
    drillers_depto character varying,
    core_loss_cm character varying,
    joints_description character varying,
    nb_joints character varying
);


--
-- Name: tmp_dh_tech_charextended; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_dh_tech_charextended (
    id character varying,
    depfrom character varying,
    depto character varying,
    drilled_len character varying,
    reco_len character varying,
    percent_reco character varying,
    rqd_len character varying,
    percent_rqd character varying,
    diam character varying,
    datasource character varying,
    opid character varying,
    comments character varying,
    drillers_depto character varying,
    core_loss_cm character varying,
    joints_description character varying,
    nb_joints character varying
);


--
-- Name: tmp_donnees_sondages_ngosso_dh_sampling; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_donnees_sondages_ngosso_dh_sampling (
    id character varying,
    depfrom character varying,
    depto character varying,
    sample_type character varying,
    sample_id character varying,
    comments character varying,
    core_loss_cm character varying,
    weight_kg character varying,
    batch_id character varying,
    datasource character varying
);


--
-- Name: tmp_donnees_sondages_ngosso_dh_tech; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_donnees_sondages_ngosso_dh_tech (
    id character varying,
    depfrom character varying,
    depto character varying,
    drilled_len character varying,
    reco_len character varying,
    tmp_recup character varying,
    rqd_len character varying,
    diam character varying,
    comments character varying,
    drillers_depto character varying,
    core_loss_cm character varying,
    joints_description character varying,
    nb_joints character varying
);


--
-- Name: tmp_ee; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_ee (
    id character varying,
    shid character varying,
    xxxx character varying,
    yyyyy character varying,
    zzzzz character varying,
    inc character varying,
    numauto integer NOT NULL
);


--
-- Name: tmp_ee_numauto_seq; Type: SEQUENCE; Schema: tmp_imports; Owner: -
--

CREATE SEQUENCE tmp_ee_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: tmp_ee_numauto_seq; Type: SEQUENCE OWNED BY; Schema: tmp_imports; Owner: -
--

ALTER SEQUENCE tmp_ee_numauto_seq OWNED BY tmp_ee.numauto;


--
-- Name: tmp_eggs; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_eggs (
    a character varying,
    b character varying,
    c character varying
);


--
-- Name: tmp_entree_donnees_dh_tech; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_entree_donnees_dh_tech (
    id character varying,
    depfrom character varying,
    depto character varying,
    drillers_depto character varying,
    reco_len character varying,
    core_loss_cm character varying,
    diam character varying,
    rqd_len character varying,
    nb_joints character varying,
    joints_descript character varying,
    comments character varying,
    core_loss_chk character varying,
    percent_reco character varying,
    percent_rqd character varying,
    stick_cm character varying
);


--
-- Name: tmp_european_federation_geologists_members; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_european_federation_geologists_members (
    year character varying,
    no_ character varying,
    award_date_ character varying,
    surname character varying,
    first_name_ character varying,
    licensed_body_ character varying,
    country character varying
);


--
-- Name: tmp_exemple_fichier_lab_batches; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_exemple_fichier_lab_batches (
    batch_no character varying,
    client character varying,
    no_of_samples character varying,
    date_received character varying,
    date_completed character varying,
    project character varying,
    certificate_comments character varying,
    po_number character varying
);


--
-- Name: tmp_expedition_dd_morgan; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_expedition_dd_morgan (
    id_sondage character varying,
    numero_de_colis_sondage character varying,
    numeros_d_echantillons_contenus_dans_chaque_colis character varying,
    numero_d_echantillon_vide character varying,
    echantillon_dont_le_poids_inf_1_5_kg character varying,
    nombre_d_echantillons_par_colis_plus_vide character varying,
    poids_du_colis_kg character varying
);


--
-- Name: tmp_expedition_rc_ity_flat; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_expedition_rc_ity_flat (
    id character varying,
    colis_no character varying,
    samples_list character varying,
    missing_numbers character varying,
    samples_sup_1_5kg character varying,
    amount_samples_per_batch character varying,
    batch_weitht character varying
);


--
-- Name: tmp_export_geolpda_waypoints_descriptions; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_export_geolpda_waypoints_descriptions (
    opid character varying,
    year character varying,
    index character varying,
    obs_id character varying,
    waypoint_name character varying,
    x character varying,
    y character varying,
    z character varying,
    description character varying,
    srid character varying,
    geologist character varying,
    datasource character varying
);


--
-- Name: tmp_expédition_dd_ity_flat; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE "tmp_expédition_dd_ity_flat" (
    id_sondage character varying,
    numero_de_colis_sondage character varying,
    numeros_d_echantillons_contenus_dans_chaque_colis character varying,
    numero_d_echantillon_vide character varying,
    echantillon_dont_le_poids_inf_1_5_kg character varying,
    nombre_d_echantillons_par_colis_plus_vide character varying,
    poids_du_colis_kg character varying
);


--
-- Name: tmp_ff; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_ff (
    id character varying,
    dir character varying,
    incl character varying,
    xxxx character varying,
    yyyy character varying,
    zzzz character varying,
    indc character varying
);


--
-- Name: tmp_field_observations_struct_measures; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_field_observations_struct_measures (
    numauto character varying,
    opid character varying,
    obs_id character varying,
    measure_type character varying,
    structure_type character varying,
    north_ref character varying,
    direction character varying,
    dip character varying,
    dip_quadrant character varying,
    pitch character varying,
    pitch_quadrant character varying,
    movement character varying,
    valid character varying,
    comments character varying,
    description character varying
);


--
-- Name: tmp_flana; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_flana (
    indr_1 character varying,
    dir_utm character varying,
    incl character varying,
    indc_1 character varying,
    xutm29n character varying,
    yutm29n character varying,
    z character varying,
    indr_2 character varying,
    depto character varying,
    or_ character varying,
    au character varying,
    orto character varying,
    cod character varying,
    hor character varying,
    indc_2 character varying,
    xxxx character varying,
    yyyy character varying,
    zzzz character varying,
    numauto integer NOT NULL
);


--
-- Name: tmp_flana_numauto_seq; Type: SEQUENCE; Schema: tmp_imports; Owner: -
--

CREATE SEQUENCE tmp_flana_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: tmp_flana_numauto_seq; Type: SEQUENCE OWNED BY; Schema: tmp_imports; Owner: -
--

ALTER SEQUENCE tmp_flana_numauto_seq OWNED BY tmp_flana.numauto;


--
-- Name: tmp_fldev; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_fldev (
    indr_1 character varying,
    dir_1 character varying,
    incl_1 character varying,
    indc character varying,
    xxxx_1 character varying,
    yyyy_1 character varying,
    zzzz_1 character varying,
    indr_2 character varying,
    depto character varying,
    dir_2 character varying,
    incl_2 character varying,
    xxxx_2 character varying,
    yyyy_2 character varying,
    zzzz_2 character varying
);


--
-- Name: tmp_flepai; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_flepai (
    indr_1 character varying,
    dir character varying,
    incl character varying,
    c character varying,
    xxxx_1 character varying,
    yyyy_1 character varying,
    zzzz_1 character varying,
    indr_2 character varying,
    depto character varying,
    profondeur character varying,
    couvert character varying,
    gravillons character varying,
    arta character varying,
    arba character varying,
    sap character varying,
    sapr character varying,
    xxxx_2 character varying,
    yyyy_2 character varying,
    zzzz_2 character varying
);


--
-- Name: tmp_fllit; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_fllit (
    indr_1 character varying,
    dir character varying,
    incl character varying,
    indc character varying,
    xxxx_1 character varying,
    yyyy_1 character varying,
    zzzz_1 character varying,
    indr_2 character varying,
    depto character varying,
    lito character varying,
    alt character varying,
    text_1 character varying,
    text_2 character varying,
    xxxx_2 character varying,
    yyyy_2 character varying,
    zzzz_2 character varying
);


--
-- Name: tmp_flstru; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_flstru (
    indr_1 character varying,
    dir character varying,
    incl character varying,
    indc character varying,
    xutm character varying,
    y_utm character varying,
    z character varying,
    indr_2 character varying,
    depto character varying,
    dutm character varying,
    pend character varying,
    dmag character varying,
    description character varying,
    text character varying,
    xxxx character varying,
    yyyy character varying,
    zzzz character varying
);


--
-- Name: tmp_frm_assays_traite; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_frm_assays_traite (
    hole_id character varying,
    depfrom character varying,
    fepto character varying,
    autot_gt character varying,
    au_bleg_gt character varying,
    long character varying,
    long_pass character varying,
    ten_ponderee_mgt character varying,
    pass_miner character varying,
    accu_mgt character varying,
    rien character varying,
    commentaire character varying
);


--
-- Name: tmp_frm_collars; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_frm_collars (
    lieu_projet character varying,
    date character varying,
    geologue character varying,
    type character varying,
    hole_id character varying,
    easting character varying,
    northing character varying,
    rl character varying,
    azimuth character varying,
    dip character varying,
    totdepth character varying,
    nbech character varying,
    observations character varying
);


--
-- Name: tmp_frm_description_detailee; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_frm_description_detailee (
    hole_id character varying,
    depfrom character varying,
    depto character varying,
    description_lithologique character varying,
    rien character varying,
    rien2 character varying
);


--
-- Name: tmp_geolpda_picks; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_geolpda_picks (
    _id character varying,
    poiname character varying,
    poitime character varying,
    elevation character varying,
    poilat character varying,
    poilon character varying,
    photourl character varying,
    audiourl character varying,
    note character varying
);


--
-- Name: tmp_gg; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_gg (
    id character varying,
    indr character varying,
    prof character varying,
    diam character varying
);


--
-- Name: tmp_graph1; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_graph1 (
    id character varying,
    shid character varying,
    x character varying,
    y character varying
);


--
-- Name: tmp_interr1; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_interr1 (
    shid character varying,
    dept character varying,
    corequarte character varying,
    questions character varying,
    nom character varying,
    texture character varying,
    mineralogi character varying,
    metam_def character varying,
    mineralisa character varying,
    origine character varying
);


--
-- Name: tmp_ity9; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_ity9 (
    ind character varying,
    zone character varying,
    x character varying,
    y character varying,
    date character varying,
    "time" character varying,
    numauto integer NOT NULL
);


--
-- Name: tmp_ity9_numauto_seq; Type: SEQUENCE; Schema: tmp_imports; Owner: -
--

CREATE SEQUENCE tmp_ity9_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: tmp_ity9_numauto_seq; Type: SEQUENCE OWNED BY; Schema: tmp_imports; Owner: -
--

ALTER SEQUENCE tmp_ity9_numauto_seq OWNED BY tmp_ity9.numauto;


--
-- Name: tmp_ity_gpspolo_travaux_97et2004; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_ity_gpspolo_travaux_97et2004 (
    indr character varying,
    xutm29 character varying,
    yutm29 character varying,
    zzzz character varying,
    ttd character varying,
    azim character varying,
    incl character varying,
    zone character varying,
    datasource integer,
    numauto integer NOT NULL
);


--
-- Name: tmp_ity_gpspolo_travaux_97et2004_numauto_seq; Type: SEQUENCE; Schema: tmp_imports; Owner: -
--

CREATE SEQUENCE tmp_ity_gpspolo_travaux_97et2004_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: tmp_ity_gpspolo_travaux_97et2004_numauto_seq; Type: SEQUENCE OWNED BY; Schema: tmp_imports; Owner: -
--

ALTER SEQUENCE tmp_ity_gpspolo_travaux_97et2004_numauto_seq OWNED BY tmp_ity_gpspolo_travaux_97et2004.numauto;


--
-- Name: tmp_ity_mamsi_2011_10_17_ity_base_donne_tblassay_corrections1; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_ity_mamsi_2011_10_17_ity_base_donne_tblassay_corrections1 (
    opid character varying,
    datasource character varying,
    hole_id character varying,
    depth_from character varying,
    depth_to character varying,
    no_echantillon character varying,
    au__au4_ppm character varying,
    au_repeat__au4_ppm character varying,
    or___au3_ppm character varying,
    au_sgs1__au2_ppm character varying,
    rien character varying,
    qc_sampling_opid character varying,
    qc_samplingdatasource character varying,
    qc_type character varying,
    no_echantillon_dup character varying,
    au_dup character varying,
    refers_to character varying
);


--
-- Name: tmp_ity_mamsi_2011_10_17_ity_bd_assay_corr3_dh_sampling_grades; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_ity_mamsi_2011_10_17_ity_bd_assay_corr3_dh_sampling_grades (
    opid character varying,
    datasource character varying,
    hole_id character varying,
    depth_from character varying,
    depth_to character varying,
    no_echantillon character varying,
    au__au4_ppm character varying,
    au_repeat__au4_ppm character varying,
    or___au3_ppm character varying,
    au_sgs1__au2_ppm character varying
);


--
-- Name: tmp_ity_mamsi_2011_10_17_ity_bd_assay_corr3_lab_ana_results; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_ity_mamsi_2011_10_17_ity_bd_assay_corr3_lab_ana_results (
    opid character varying,
    datasource character varying,
    no_echantillon character varying,
    au__au4_ppm character varying,
    au_repeat__au4_ppm character varying,
    or___au3_ppm character varying,
    au_sgs1__au2_ppm character varying
);


--
-- Name: tmp_ity_mamsi_2011_10_17_ity_bd_assay_corr3_qc_sampling; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_ity_mamsi_2011_10_17_ity_bd_assay_corr3_qc_sampling (
    qc_sampling_opid character varying,
    qc_samplingdatasource character varying,
    qc_type character varying,
    no_echantillon_dup character varying,
    au_dup character varying,
    refers_to character varying
);


--
-- Name: tmp_itypuit_polo_analyses_au_cyan_ity; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_itypuit_polo_analyses_au_cyan_ity (
    indr character varying,
    depto character varying,
    au character varying,
    lith character varying,
    datasource integer
);


--
-- Name: tmp_itypuit_polo_analyses_au_cyan_ity2; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_itypuit_polo_analyses_au_cyan_ity2 (
    l character varying,
    indc character varying,
    indr character varying,
    depto character varying,
    or_ character varying,
    au character varying,
    datasource integer
);


--
-- Name: tmp_lab_ana_batches_expedition; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_lab_ana_batches_expedition (
    opid character varying,
    batch_id character varying,
    labname character varying,
    expedition_id character varying,
    order_id character varying,
    description character varying,
    preparation character varying,
    process_labo character varying,
    scheme character varying,
    shipment_date character varying,
    sent_to_lab character varying,
    reception_date character varying,
    results_received character varying,
    lab_batches character varying,
    comments character varying,
    datasource character varying,
    samples_amount character varying,
    sample_id_first character varying,
    sample_id_last character varying
);


--
-- Name: tmp_lab_ana_batches_expedition_append; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_lab_ana_batches_expedition_append (
    opid character varying,
    batch_id character varying,
    labname character varying,
    expedition_id character varying,
    order_id character varying,
    description character varying,
    preparation character varying,
    process_labo character varying,
    scheme character varying,
    shipment_date character varying,
    sent_to_lab character varying,
    reception_date character varying,
    results_received character varying,
    lab_batches character varying,
    comments character varying,
    datasource character varying,
    samples_amount character varying,
    sample_id_first character varying,
    sample_id_last character varying
);


--
-- Name: tmp_lab_ana_batches_reception; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_lab_ana_batches_reception (
    opid character varying,
    datasource character varying,
    jobno character varying,
    generic_txt_col1 character varying,
    generic_txt_col2 character varying,
    generic_txt_col3 character varying,
    generic_txt_col4 character varying
);


--
-- Name: tmp_lab_ana_qaqc_results; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_lab_ana_qaqc_results (
    opid character varying,
    jobno character varying,
    generic_txt_col1 character varying,
    generic_txt_col2 character varying,
    generic_txt_col3 character varying,
    generic_txt_col4 character varying,
    generic_txt_col5 character varying
);


--
-- Name: tmp_lab_ana_results; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_lab_ana_results (
    labname character varying,
    jobno character varying,
    orderno character varying,
    sample_id character varying,
    scheme character varying,
    analyte character varying,
    value character varying,
    db_update_timestamp character varying,
    value_num character varying,
    opid character varying,
    batch_id character varying,
    sampletype character varying,
    unit character varying,
    datasource character varying,
    numauto character varying,
    sample_id_lab character varying
);


--
-- Name: tmp_lab_ana_results_a_append; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_lab_ana_results_a_append (
    labname character varying,
    jobno character varying,
    orderno character varying,
    sample_id character varying,
    scheme character varying,
    analyte character varying,
    value character varying,
    db_update_timestamp character varying,
    value_num character varying,
    opid character varying,
    batch_id character varying,
    sampletype character varying,
    unit character varying,
    datasource character varying,
    xxxx character varying
);


--
-- Name: tmp_lex_datasource; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_lex_datasource (
    opid character varying,
    filename character varying,
    comments character varying,
    datasource_id character varying
);


--
-- Name: tmp_liste_echantillons; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_liste_echantillons (
    id character varying,
    depfrom character varying,
    depto character varying,
    sample_id character varying,
    weight character varying,
    qc character varying
);


--
-- Name: tmp_listing_programme_sondages_tontouo_etal_20120205_xyz_marec; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_listing_programme_sondages_tontouo_etal_20120205_xyz_marec (
    id character varying,
    x character varying,
    y character varying,
    z character varying,
    x_local character varying,
    y_local character varying,
    z_local character varying
);


--
-- Name: tmp_listing_programme_sondages_xyz_marec; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_listing_programme_sondages_xyz_marec (
    id character varying,
    x_local character varying,
    y_local character varying
);


--
-- Name: tmp_litho_synthese_pol_lit_base_sondage_1997; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_litho_synthese_pol_lit_base_sondage_1997 (
    indr character varying,
    depfrom character varying,
    depto character varying,
    text character varying,
    code character varying,
    po character varying,
    xxxx_2 character varying,
    yyyy_2 character varying,
    zzzz_2 character varying,
    datasource character varying
);


--
-- Name: tmp_lithoda; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_lithoda (
    indr_1 character varying,
    dir character varying,
    incl character varying,
    indc character varying,
    x character varying,
    y character varying,
    z_1 character varying,
    indr_2 character varying,
    depto character varying,
    lito character varying,
    alt character varying,
    text character varying,
    xutm character varying,
    yutm character varying,
    z_2 character varying
);


--
-- Name: tmp_localisation_et_caracter_des_rc_tontouo; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_localisation_et_caracter_des_rc_tontouo (
    nunmero_sondage character varying,
    type character varying,
    longueur character varying,
    azimut character varying,
    inclinaison character varying,
    xxx character varying,
    yyy character varying,
    zzz character varying
);


--
-- Name: tmp_logging_de_sondages_rcs231as507; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_logging_de_sondages_rcs231as507 (
    hole character varying,
    f_de_p character varying,
    code character varying,
    couleur character varying,
    lito character varying,
    xx character varying,
    yy character varying,
    zz character varying,
    az character varying,
    incl character varying,
    "altération" character varying,
    datasource integer
);


--
-- Name: tmp_logging_terrain_campagne_1997_ana; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_logging_terrain_campagne_1997_ana (
    controle_prof character varying,
    indr character varying,
    prof character varying,
    or_ character varying,
    au character varying,
    au2 character varying,
    orse character varying,
    ause character varying,
    ten_moy character varying,
    m character varying,
    potent_kg character varying,
    rien character varying,
    au_moy character varying,
    m_ character varying,
    datasource integer
);


--
-- Name: tmp_logging_terrain_campagne_1997_base_sondage; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_logging_terrain_campagne_1997_base_sondage (
    indr character varying,
    zoneproj character varying,
    x character varying,
    y character varying,
    eleva character varying,
    longueu character varying,
    azim_geo character varying,
    inclin character varying,
    secteur character varying,
    datasource integer,
    numauto integer NOT NULL
);


--
-- Name: tmp_logging_terrain_campagne_1997_base_sondage_numauto_seq; Type: SEQUENCE; Schema: tmp_imports; Owner: -
--

CREATE SEQUENCE tmp_logging_terrain_campagne_1997_base_sondage_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: tmp_logging_terrain_campagne_1997_base_sondage_numauto_seq; Type: SEQUENCE OWNED BY; Schema: tmp_imports; Owner: -
--

ALTER SEQUENCE tmp_logging_terrain_campagne_1997_base_sondage_numauto_seq OWNED BY tmp_logging_terrain_campagne_1997_base_sondage.numauto;


--
-- Name: tmp_logging_terrain_campagne_1997_caisses; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_logging_terrain_campagne_1997_caisses (
    indr character varying,
    depto character varying,
    box character varying,
    datasource integer
);


--
-- Name: tmp_logging_terrain_campagne_1997_diam; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_logging_terrain_campagne_1997_diam (
    num character varying,
    indr character varying,
    prof character varying,
    diam character varying,
    datasource integer
);


--
-- Name: tmp_logging_terrain_campagne_1997_fiche_tech; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_logging_terrain_campagne_1997_fiche_tech (
    sondages character varying,
    xxx character varying,
    yyy character varying,
    zzz character varying,
    prof_m character varying,
    az character varying,
    incl character varying,
    secteur character varying,
    datasource integer,
    numauto integer NOT NULL
);


--
-- Name: tmp_logging_terrain_campagne_1997_fiche_tech_numauto_seq; Type: SEQUENCE; Schema: tmp_imports; Owner: -
--

CREATE SEQUENCE tmp_logging_terrain_campagne_1997_fiche_tech_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: tmp_logging_terrain_campagne_1997_fiche_tech_numauto_seq; Type: SEQUENCE OWNED BY; Schema: tmp_imports; Owner: -
--

ALTER SEQUENCE tmp_logging_terrain_campagne_1997_fiche_tech_numauto_seq OWNED BY tmp_logging_terrain_campagne_1997_fiche_tech.numauto;


--
-- Name: tmp_logging_terrain_campagne_1997_lex2; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_logging_terrain_campagne_1997_lex2 (
    code character varying,
    description character varying,
    datasource integer
);


--
-- Name: tmp_logging_terrain_campagne_1997_litho; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_logging_terrain_campagne_1997_litho (
    controle character varying,
    indr character varying,
    prof character varying,
    code character varying,
    gen2 character varying,
    cohe character varying,
    sulf character varying,
    mx_sulf character varying,
    carb character varying,
    silic character varying,
    epid character varying,
    tourm character varying,
    text character varying,
    datasource integer
);


--
-- Name: tmp_logging_terrain_campagne_1997_mineralisation; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_logging_terrain_campagne_1997_mineralisation (
    num_sondage character varying,
    xx character varying,
    yy character varying,
    zz character varying,
    depfrom character varying,
    depto character varying,
    teneur_g_t character varying,
    moyenne character varying,
    litho character varying,
    datasource integer
);


--
-- Name: tmp_logging_terrain_campagne_1997_struct; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_logging_terrain_campagne_1997_struct (
    indr character varying,
    depto character varying,
    stru character varying,
    angl character varying,
    datasource integer,
    comment character varying
);


--
-- Name: tmp_logging_terrain_campagne_1997_tetes; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_logging_terrain_campagne_1997_tetes (
    indr character varying,
    xxxx character varying,
    yyyy character varying,
    zzzz character varying,
    ttd character varying,
    depto character varying,
    azim character varying,
    incl character varying,
    zone character varying,
    datasource integer
);


--
-- Name: tmp_logs_techniques; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_logs_techniques (
    indr character varying,
    depfrom character varying,
    depto character varying,
    diametre character varying,
    longueur_recuperee character varying,
    xxxx character varying,
    yyyy character varying,
    zzzz character varying,
    recu character varying,
    datasource character varying
);


--
-- Name: tmp_lots; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_lots (
    opid character varying,
    jobno character varying,
    generic_txt_col1 character varying,
    generic_txt_col2 character varying,
    generic_txt_col3 character varying,
    generic_txt_col4 character varying
);


--
-- Name: tmp_maj_polo_differences_tmp_imports_pol_ana_1129_1143; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_maj_polo_differences_tmp_imports_pol_ana_1129_1143 (
    a character varying,
    b character varying,
    c character varying,
    d character varying,
    e character varying,
    f character varying,
    g character varying,
    h character varying,
    i character varying,
    j character varying,
    k character varying,
    l character varying,
    m character varying,
    n character varying,
    o character varying,
    p character varying,
    q character varying,
    r character varying,
    s character varying,
    t character varying,
    u character varying,
    v character varying,
    w character varying,
    x character varying,
    y character varying,
    z character varying,
    aa character varying,
    ab character varying,
    ac character varying,
    ad character varying,
    ae character varying,
    af character varying,
    ag character varying,
    datasource integer
);


--
-- Name: tmp_mco_mont_ity_2012_10_; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_mco_mont_ity_2012_10_ (
    line character varying,
    x_1 character varying,
    y_1 character varying,
    z_1 character varying,
    x_2 character varying,
    y_2 character varying,
    z_2 character varying,
    coul character varying,
    numauto integer NOT NULL,
    xutm_1 numeric,
    yutm_1 numeric,
    zutm_1 numeric,
    xutm_2 numeric,
    yutm_2 numeric,
    zutm_2 numeric
);


--
-- Name: tmp_mco_mont_ity_2012_10__numauto_seq; Type: SEQUENCE; Schema: tmp_imports; Owner: -
--

CREATE SEQUENCE tmp_mco_mont_ity_2012_10__numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: tmp_mco_mont_ity_2012_10__numauto_seq; Type: SEQUENCE OWNED BY; Schema: tmp_imports; Owner: -
--

ALTER SEQUENCE tmp_mco_mont_ity_2012_10__numauto_seq OWNED BY tmp_mco_mont_ity_2012_10_.numauto;


--
-- Name: tmp_mesure_tropari; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_mesure_tropari (
    date character varying,
    id_forage character varying,
    prof character varying,
    azimut_ng character varying,
    incl character varying,
    mesure character varying,
    observation character varying
);


--
-- Name: tmp_modifs; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_modifs (
    labname character varying,
    jobno character varying,
    orderno character varying,
    sample_id character varying,
    scheme character varying,
    analyte character varying,
    value character varying,
    db_update_timestamp character varying,
    value_num character varying,
    opid character varying,
    batch_id character varying,
    sampletype character varying,
    unit character varying,
    datasource character varying,
    sample_id_lab character varying
);


--
-- Name: tmp_passes_mineralisees; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_passes_mineralisees (
    hole_id character varying,
    depfrom character varying,
    depto character varying,
    autot_gt character varying,
    au_bleg_gt character varying,
    long character varying,
    long_pass character varying,
    ten_ponderee_mgt character varying,
    pass_miner character varying,
    accum_mgt character varying,
    commentaire character varying
);


--
-- Name: tmp_plan_cme_; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_plan_cme_ (
    line character varying,
    x_1 character varying,
    y_1 character varying,
    z_1 character varying,
    x_2 character varying,
    y_2 character varying,
    z_2 character varying,
    coul character varying
);


--
-- Name: tmp_planl_; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_planl_ (
    line character varying,
    x_1 character varying,
    y_1 character varying,
    z_1 character varying,
    x_2 character varying,
    y_2 character varying,
    z_2 character varying,
    coul character varying,
    numauto integer NOT NULL,
    xutm_1 numeric,
    yutm_1 numeric,
    zutm_1 numeric,
    xutm_2 numeric,
    yutm_2 numeric,
    zutm_2 numeric
);


--
-- Name: tmp_planl__numauto_seq; Type: SEQUENCE; Schema: tmp_imports; Owner: -
--

CREATE SEQUENCE tmp_planl__numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: tmp_planl__numauto_seq; Type: SEQUENCE OWNED BY; Schema: tmp_imports; Owner: -
--

ALTER SEQUENCE tmp_planl__numauto_seq OWNED BY tmp_planl_.numauto;


--
-- Name: tmp_planl_mauvaises_lignes; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_planl_mauvaises_lignes (
    line character varying,
    x_1 character varying,
    y_1 character varying,
    z_1 character varying,
    x_2 character varying,
    y_2 character varying,
    z_2 character varying,
    coul character varying
);


--
-- Name: tmp_planp_; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_planp_ (
    x character varying,
    y character varying,
    z character varying,
    coul character varying,
    numauto integer NOT NULL,
    xutm numeric,
    yutm numeric,
    zutm numeric
);


--
-- Name: tmp_planp__numauto_seq; Type: SEQUENCE; Schema: tmp_imports; Owner: -
--

CREATE SEQUENCE tmp_planp__numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: tmp_planp__numauto_seq; Type: SEQUENCE OWNED BY; Schema: tmp_imports; Owner: -
--

ALTER SEQUENCE tmp_planp__numauto_seq OWNED BY tmp_planp_.numauto;


--
-- Name: tmp_qc_sampling; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_qc_sampling (
    sample_id character varying,
    qc_type character varying,
    comments character varying,
    opid character varying,
    batch_id character varying,
    refers_to character varying,
    datasource character varying
);


--
-- Name: tmp_qqq; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_qqq (
    indr_1 character varying,
    dir character varying,
    incl character varying,
    indc character varying,
    xxxx_1 character varying,
    yyyy_1 character varying,
    zzzz_1 character varying,
    indr_2 character varying,
    depto1 character varying,
    lito character varying,
    alt character varying,
    text_1 character varying,
    xxxx_2 character varying,
    yyyy_2 character varying,
    zzzz_2 character varying,
    datasource1 character varying,
    indr character varying,
    depto character varying,
    code character varying,
    "code_venant_de_datasource_1122_quand_différent" character varying,
    cohe character varying,
    sulf character varying,
    mx_sulf character varying,
    carb character varying,
    silic character varying,
    epid character varying,
    tourm character varying,
    text character varying,
    datasource character varying,
    questions character varying
);


--
-- Name: tmp_rangement_caisses; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_rangement_caisses (
    id_forage character varying,
    date character varying,
    holeid character varying,
    depfrom character varying,
    depto character varying,
    no_caisse character varying
);


--
-- Name: tmp_rdana; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_rdana (
    indr_1 character varying,
    dir_utm character varying,
    incl character varying,
    indc_1 character varying,
    xutm29n character varying,
    yutm29n character varying,
    z character varying,
    indr_2 character varying,
    depto character varying,
    or_ character varying,
    au character varying,
    orto character varying,
    cod character varying,
    hor character varying,
    indc_2 character varying,
    xxxx character varying,
    yyyy character varying,
    zzzz character varying,
    datasource integer
);


--
-- Name: tmp_resultats_veritas; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_resultats_veritas (
    sample_id character varying,
    au_ppm character varying,
    au1_ppm character varying,
    au2_ppm character varying
);


--
-- Name: tmp_resultats_veritas_0011; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_resultats_veritas_0011 (
    datasource character varying,
    sample_id character varying,
    au_ppm character varying,
    au1_ppm character varying,
    au2_ppm character varying,
    header character varying
);


--
-- Name: tmp_results_multi_elt; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_results_multi_elt (
    datasource character varying,
    qc character varying,
    sample_id character varying,
    type character varying,
    mo_ppm character varying,
    cu_perc character varying,
    pb_perc character varying,
    zn_perc character varying,
    ag_ppm character varying,
    ni_ppm character varying,
    co_ppm character varying,
    mn_ppm character varying,
    fe_perc character varying,
    as_ppm character varying,
    th_ppm character varying,
    sr_ppm character varying,
    cd_ppm character varying,
    sb_ppm character varying,
    bi_ppm character varying,
    v_ppm character varying,
    ca_perc character varying,
    p_perc character varying,
    la_ppm character varying,
    cr_ppm character varying,
    mg_perc character varying,
    ba_ppm character varying,
    ti_perc character varying,
    b_ppm character varying,
    al_perc character varying,
    na_perc character varying,
    k_perc character varying,
    w_ppm character varying,
    s_perc character varying,
    hg_ppm character varying,
    tl_ppm character varying,
    ga_ppm character varying,
    sc_ppm character varying,
    comments character varying
);


--
-- Name: tmp_sigminesfrance_indices; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_sigminesfrance_indices (
    "n°_de_fiche" character varying,
    nom_du_site character varying,
    production character varying,
    importance character varying,
    substance character varying,
    commune character varying,
    x character varying,
    y character varying,
    srid integer
);


--
-- Name: tmp_son97_xlw_ana; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_son97_xlw_ana (
    controle_prof character varying,
    indr character varying,
    prof character varying,
    or_ character varying,
    au character varying,
    orse character varying,
    ause character varying,
    datasource integer
);


--
-- Name: tmp_son97_xlw_caisses; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_son97_xlw_caisses (
    indr character varying,
    depto character varying,
    box character varying,
    datasource integer
);


--
-- Name: tmp_son97_xlw_diam; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_son97_xlw_diam (
    tt character varying,
    indr character varying,
    prof character varying,
    diam character varying,
    datasource integer
);


--
-- Name: tmp_son97_xlw_lex2; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_son97_xlw_lex2 (
    code character varying,
    description character varying,
    datasource integer
);


--
-- Name: tmp_son97_xlw_litho; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_son97_xlw_litho (
    controle character varying,
    indr character varying,
    prof character varying,
    code character varying,
    gen2 character varying,
    cohe character varying,
    text character varying,
    datasource integer
);


--
-- Name: tmp_son97_xlw_recup2; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_son97_xlw_recup2 (
    controle_prof character varying,
    indr character varying,
    profondeur character varying,
    diametre character varying,
    longueur_recuperee character varying,
    xxxx character varying,
    yyyy character varying,
    zzzz character varying,
    depto character varying,
    recu character varying,
    datasource integer
);


--
-- Name: tmp_son97_xlw_tetes; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_son97_xlw_tetes (
    indr character varying,
    xxxx character varying,
    yyyy character varying,
    zzzz character varying,
    ttd character varying,
    depto character varying,
    azim character varying,
    incl character varying,
    zone character varying,
    datasource integer
);


--
-- Name: tmp_sond_fores_avril_2012; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_sond_fores_avril_2012 (
    id character varying,
    x_local character varying,
    y_local character varying,
    z_local character varying
);


--
-- Name: tmp_sondages; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_sondages (
    numero character varying,
    sondage_ref character varying,
    coord_sys character varying,
    x character varying,
    y character varying,
    z character varying,
    srid character varying,
    the_geom character varying,
    long_recalc character varying,
    lat_recalc character varying
);


--
-- Name: tmp_sondages_dalit; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_sondages_dalit (
    indr_1 character varying,
    dir character varying,
    incl character varying,
    indc character varying,
    xxxx_1 character varying,
    yyyy_1 character varying,
    zzzz_1 character varying,
    indr_2 character varying,
    depto character varying,
    lito character varying,
    alt character varying,
    text_1 character varying,
    xxxx_2 character varying,
    yyyy_2 character varying,
    zzzz_2 character varying
);


--
-- Name: tmp_sondages_est_cavally_resume_fiche_tech; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_sondages_est_cavally_resume_fiche_tech (
    sondages character varying,
    xxx character varying,
    yyy character varying,
    zzz character varying,
    prof_m character varying,
    az character varying,
    incl character varying,
    secteur character varying,
    datasource integer
);


--
-- Name: tmp_sondages_est_cavally_resume_mineralisation; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_sondages_est_cavally_resume_mineralisation (
    num_sondage character varying,
    xx character varying,
    yy character varying,
    zz character varying,
    depfrom character varying,
    depto character varying,
    teneur_g_t character varying,
    moyenne character varying,
    litho character varying,
    datasource integer
);


--
-- Name: tmp_sondages_fores_smi_2012; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_sondages_fores_smi_2012 (
    id character varying,
    x character varying,
    y character varying,
    z character varying
);


--
-- Name: tmp_sondages_rc_mont_ity_topo_marec; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_sondages_rc_mont_ity_topo_marec (
    id character varying,
    x character varying,
    y character varying,
    z character varying
);


--
-- Name: tmp_stock1; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_stock1 (
    reference_article character varying,
    designation_article character varying,
    emplacement_principal character varying,
    depot character varying,
    qte_stock_reel character varying,
    cmup_unitaire character varying,
    montant_stock__cmup_ character varying,
    qte_a_terme character varying
);


--
-- Name: tmp_suivi_sondages_1997_v1_ana; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_suivi_sondages_1997_v1_ana (
    controle_prof character varying,
    indr character varying,
    prof character varying,
    or_ character varying,
    au character varying,
    orse character varying,
    ause character varying
);


--
-- Name: tmp_suivi_sondages_1997_v1_diam; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_suivi_sondages_1997_v1_diam (
    i character varying,
    indr character varying,
    prof character varying,
    diam character varying
);


--
-- Name: tmp_suivi_sondages_1997_v1_lex2; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_suivi_sondages_1997_v1_lex2 (
    code character varying,
    description character varying
);


--
-- Name: tmp_suivi_sondages_1997_v1_litho; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_suivi_sondages_1997_v1_litho (
    controle character varying,
    indr character varying,
    prof character varying,
    code character varying,
    gen2 character varying,
    cohe character varying,
    text character varying
);


--
-- Name: tmp_suivi_sondages_1997_v1_tetes; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_suivi_sondages_1997_v1_tetes (
    indr character varying,
    xutm character varying,
    yutm character varying,
    z character varying,
    ttd character varying,
    depto character varying,
    azim character varying,
    incl character varying,
    zone character varying,
    numauto integer NOT NULL
);


--
-- Name: tmp_suivi_sondages_1997_v1_tetes_numauto_seq; Type: SEQUENCE; Schema: tmp_imports; Owner: -
--

CREATE SEQUENCE tmp_suivi_sondages_1997_v1_tetes_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: tmp_suivi_sondages_1997_v1_tetes_numauto_seq; Type: SEQUENCE OWNED BY; Schema: tmp_imports; Owner: -
--

ALTER SEQUENCE tmp_suivi_sondages_1997_v1_tetes_numauto_seq OWNED BY tmp_suivi_sondages_1997_v1_tetes.numauto;


--
-- Name: tmp_surface_samples_grades; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_surface_samples_grades (
    opid character varying,
    sample_id character varying,
    x character varying,
    y character varying,
    z character varying,
    srid character varying,
    description character varying,
    sample_type character varying,
    outcrop_id character varying,
    trend character varying,
    dip character varying,
    length_m character varying,
    width_m character varying,
    au1_ppm character varying,
    au2_ppm character varying,
    ag1_ character varying,
    ag2_ character varying,
    cu1_ character varying,
    cu2_ character varying,
    as_ character varying,
    pb_ character varying,
    zn_ character varying,
    k2o_ character varying,
    ba_ character varying,
    sio2_ character varying,
    al2x_ character varying,
    fe2x_ character varying,
    mno_ character varying,
    tio2_ character varying,
    p2o5_ character varying,
    cao_ character varying,
    mgo_ character varying,
    mo_ character varying,
    sn_ character varying,
    sb_ character varying,
    w_ character varying,
    bi_ character varying,
    zr_ character varying,
    li_ character varying,
    b_ character varying,
    v_ character varying,
    cr_ character varying,
    ni_ character varying,
    co_ character varying,
    sr_ character varying,
    y_ character varying,
    la_ character varying,
    ce_ character varying,
    nb_ character varying,
    be_ character varying,
    cd_ character varying,
    spp2 character varying,
    datasource_id character varying
);


--
-- Name: tmp_tmp; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_tmp (
    hole_id character varying,
    depth_from character varying,
    depth_to character varying,
    color character varying,
    id character varying,
    depfrom character varying,
    depto character varying,
    description character varying,
    description_corr character varying,
    code1 character varying,
    code2 character varying,
    code3 character varying,
    code4 character varying,
    value1 character varying,
    value2 character varying,
    value3 character varying,
    value4 character varying,
    opid character varying,
    litho_simple character varying,
    colour character varying,
    numauto character varying,
    datasource character varying
);


--
-- Name: tmp_tmp_2013_09_26_lab_ana_batches_reception_recorr; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_tmp_2013_09_26_lab_ana_batches_reception_recorr (
    opid character varying,
    jobno character varying,
    datasource character varying,
    labname character varying,
    client character varying,
    validated character varying,
    job_number character varying,
    number_of_samples character varying,
    project character varying,
    shipment_id character varying,
    p_o_number character varying,
    received character varying,
    certificate_comments character varying
);


--
-- Name: tmp_tmp_2013_09_26_lab_ana_batches_reception_recorr_; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_tmp_2013_09_26_lab_ana_batches_reception_recorr_ (
    opid character varying,
    jobno character varying,
    datasource character varying,
    labname character varying,
    client character varying,
    validated character varying,
    validated_pabon character varying,
    job_number character varying,
    number_of_samples character varying,
    project character varying,
    shipment_id character varying,
    p_o_number character varying,
    received character varying,
    received_pabon character varying,
    info_suppl_json character varying,
    certificate_comments character varying
);


--
-- Name: tmp_tmp_bdexplo_smi_2013_08_14_lab_ana_batches_reception_corr; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_tmp_bdexplo_smi_2013_08_14_lab_ana_batches_reception_corr (
    opid character varying,
    jobno character varying,
    datasource character varying,
    labname character varying,
    client character varying,
    validated character varying,
    job_number character varying,
    number_of_samples character varying,
    project character varying,
    shipment_id character varying,
    p_o_number character varying,
    received character varying,
    certificate_comments character varying
);


--
-- Name: tmp_tmp_bdexplo_smi_2013_08_14_lab_ana_batches_reception_corr_m; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_tmp_bdexplo_smi_2013_08_14_lab_ana_batches_reception_corr_m (
    opid character varying,
    jobno character varying,
    datasource character varying,
    labname character varying,
    client character varying,
    validated character varying,
    job_number character varying,
    number_of_samples character varying,
    project character varying,
    shipment_id character varying,
    p_o_number character varying,
    received character varying,
    certificate_comments character varying,
    info_suppl_json character varying
);


--
-- Name: tmp_tmp_entree_ech; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_tmp_entree_ech (
    id character varying,
    depfrom character varying,
    depto character varying,
    aaa character varying,
    bbb character varying,
    poids character varying,
    sample_id character varying,
    coreloss character varying,
    sample_type character varying
);


--
-- Name: tmp_tmp_field_observations_struct_measures; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_tmp_field_observations_struct_measures (
    opid character varying,
    obs_id character varying,
    measure_type character varying,
    structure_type character varying,
    north_ref character varying,
    direction character varying,
    dip character varying,
    dip_quadrant character varying,
    pitch character varying,
    pitch_quadrant character varying,
    movement character varying,
    valid character varying,
    comments character varying,
    numauto character varying
);


--
-- Name: tmp_tmp_litho; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_tmp_litho (
    id character varying,
    depfrom character varying,
    depto character varying,
    description character varying,
    code_litho character varying,
    vide character varying,
    remblai character varying,
    terre_vege character varying,
    laterite character varying,
    depo_divers_al_col character varying,
    saprolite character varying,
    roche character varying
);


--
-- Name: tmp_tmp_merge_dhsampl_tblassay_preexmtity; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_tmp_merge_dhsampl_tblassay_preexmtity (
    opid character varying,
    datasource character varying,
    id character varying,
    depfrom character varying,
    depto character varying,
    sample_type character varying,
    sample_id character varying,
    comments character varying,
    au1_ppm character varying,
    au2_ppm character varying,
    au3_ppm character varying,
    au4_ppm character varying,
    au5_ppm character varying,
    au6_ppm character varying,
    ph character varying,
    ag_ppm character varying,
    al_perc character varying,
    as_ppm character varying,
    ba_ppm character varying,
    bi_ppm character varying,
    ca_perc character varying,
    cd_ppm character varying,
    co_ppm character varying,
    cr_ppm character varying,
    cu_perc character varying,
    fe_perc character varying,
    ga_ppm character varying,
    k_perc character varying,
    la_ppm character varying,
    li_ppm character varying,
    mg_perc character varying,
    mn_ppm character varying,
    moisture character varying,
    mo_ppm character varying,
    na_perc character varying,
    nb_ppm character varying,
    ni_ppm character varying,
    pb_perc character varying,
    sb_ppm character varying,
    sc_ppm character varying,
    se_ppm character varying,
    sn_ppm character varying,
    sr_ppm character varying,
    ta_ppm character varying,
    te_ppm character varying,
    ti_perc character varying,
    v_ppm character varying,
    w_ppm character varying,
    y_ppm character varying,
    zn_perc character varying
);


--
-- Name: tmp_tmp_pertes_carottes; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_tmp_pertes_carottes (
    opid character varying,
    id character varying,
    depfrom character varying,
    depto character varying,
    core_loss_ character varying,
    comments character varying
);


--
-- Name: tmp_tmp_sampling_summary; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_tmp_sampling_summary (
    start_date character varying,
    id character varying,
    azim_ng character varying,
    dip_hz character varying,
    prevu character varying,
    length character varying,
    nb_samples_original character varying,
    nb_samples_dupl character varying,
    nb_samples_blanc character varying,
    nb_samples_vide character varying,
    nb_samples_remblai character varying,
    nb_samples_total character varying
);


--
-- Name: tmp_tmp_sondages_prevus_maille_carree_80m; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_tmp_sondages_prevus_maille_carree_80m (
    id character varying,
    x character varying,
    y character varying,
    numauto integer NOT NULL
);


--
-- Name: tmp_tmp_sondages_prevus_maille_carree_80m_numauto_seq; Type: SEQUENCE; Schema: tmp_imports; Owner: -
--

CREATE SEQUENCE tmp_tmp_sondages_prevus_maille_carree_80m_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: tmp_tmp_sondages_prevus_maille_carree_80m_numauto_seq; Type: SEQUENCE OWNED BY; Schema: tmp_imports; Owner: -
--

ALTER SEQUENCE tmp_tmp_sondages_prevus_maille_carree_80m_numauto_seq OWNED BY tmp_tmp_sondages_prevus_maille_carree_80m.numauto;


--
-- Name: tmp_tmp_tetes; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_tmp_tetes (
    id character varying,
    x character varying,
    y character varying,
    comments character varying,
    opid character varying,
    srid character varying,
    location character varying,
    contractor character varying
);


--
-- Name: tmp_tmp_tous_resultats_acme_lab_ana_batches_reception; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_tmp_tous_resultats_acme_lab_ana_batches_reception (
    enbd character varying,
    opid character varying,
    datasource character varying,
    jobno character varying,
    generic_txt_col1 character varying,
    generic_txt_col2 character varying,
    generic_txt_col3 character varying,
    generic_txt_col4 character varying
);


--
-- Name: tmp_tmp_tous_resultats_acme_lab_ana_results_multi_elt; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_tmp_tous_resultats_acme_lab_ana_results_multi_elt (
    datasource character varying,
    qc character varying,
    sample_id character varying,
    analyte_unit character varying,
    mo_ppm character varying,
    cu_ppm character varying,
    cu_perc character varying,
    pb_ppm character varying,
    pb_perc character varying,
    zn_ppm character varying,
    zn_perc character varying,
    ag_ppm character varying,
    ni_ppm character varying,
    co_ppm character varying,
    mn_ppm character varying,
    fe_perc character varying,
    as_ppm character varying,
    th_ppm character varying,
    sr_ppm character varying,
    cd_ppm character varying,
    sb_ppm character varying,
    bi_ppm character varying,
    v_ppm character varying,
    ca_perc character varying,
    p_perc character varying,
    la_ppm character varying,
    cr_ppm character varying,
    mg_perc character varying,
    ba_ppm character varying,
    ti_perc character varying,
    b_ppm character varying,
    al_perc character varying,
    na_perc character varying,
    k_perc character varying,
    w_ppm character varying,
    s_perc character varying,
    hg_ppm character varying,
    tl_ppm character varying,
    ga_ppm character varying,
    sc_ppm character varying,
    comments character varying
);


--
-- Name: tmp_tmp_tous_resultats_acme_lex_datasource; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_tmp_tous_resultats_acme_lex_datasource (
    opid character varying,
    filename character varying,
    comments character varying,
    datasource_id character varying
);


--
-- Name: tmp_tmp_tous_resultats_veritas_lab_ana_batches_expedition; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_tmp_tous_resultats_veritas_lab_ana_batches_expedition (
    opid character varying,
    batch_id character varying,
    labname character varying,
    expedition_id character varying,
    order_id character varying,
    description character varying,
    preparation character varying,
    process_labo character varying,
    scheme character varying,
    shipment_date character varying,
    sent_to_lab character varying,
    reception_date character varying,
    results_received character varying,
    lab_batches character varying,
    comments character varying,
    datasource character varying,
    samples_amount character varying,
    sample_id_first character varying,
    sample_id_last character varying
);


--
-- Name: tmp_tmp_tous_resultats_veritas_lab_ana_batches_reception; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_tmp_tous_resultats_veritas_lab_ana_batches_reception (
    enbd character varying,
    opid character varying,
    datasource character varying,
    jobno character varying,
    generic_txt_col1 character varying,
    generic_txt_col2 character varying,
    generic_txt_col3 character varying,
    generic_txt_col4 character varying
);


--
-- Name: tmp_tmp_tous_resultats_veritas_lab_ana_results; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_tmp_tous_resultats_veritas_lab_ana_results (
    enbd character varying,
    opid character varying,
    datasource character varying,
    jobno character varying,
    labname character varying,
    scheme character varying,
    sample_id character varying,
    au character varying,
    au1 character varying,
    au2 character varying
);


--
-- Name: tmp_tmp_tous_resultats_veritas_lab_qaqc; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_tmp_tous_resultats_veritas_lab_qaqc (
    opid character varying,
    datasource character varying,
    jobno character varying,
    generic_txt_col1 character varying,
    generic_txt_col2 character varying,
    generic_txt_col3 character varying,
    generic_txt_col4 character varying,
    generic_txt_col5 character varying
);


--
-- Name: tmp_tmp_xyz_marec_a_a_passer_en_utm; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_tmp_xyz_marec_a_a_passer_en_utm (
    opid character varying,
    id character varying,
    x character varying,
    y character varying,
    z character varying,
    x_local character varying,
    y_local character varying,
    z_local character varying
);


--
-- Name: tmp_tmpdescriptions; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_tmpdescriptions (
    obs_id character varying,
    description character varying
);


--
-- Name: tmp_topo_points; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_topo_points (
    location character varying,
    num character varying,
    x character varying,
    y character varying,
    z character varying,
    prof character varying,
    id character varying,
    datasource character varying,
    opid character varying,
    x_local character varying,
    y_local character varying,
    z_local character varying
);


--
-- Name: tmp_tr_au; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_tr_au (
    gid character varying,
    shid character varying,
    sample character varying,
    x character varying,
    yfrom character varying,
    yto character varying,
    zto character varying,
    zgraph character varying,
    depf character varying,
    dept character varying,
    codlitho character varying,
    mine character varying,
    sampleast character varying,
    auw1 character varying,
    auw2 character varying,
    auw character varying,
    aue1 character varying,
    aue2 character varying,
    aue character varying,
    auavg character varying,
    curieux character varying
);


--
-- Name: tmp_tt; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_tt (
    opid character varying,
    year character varying,
    obs_id character varying,
    date character varying,
    waypoint_name character varying,
    x character varying,
    y character varying,
    z character varying,
    description character varying,
    code_litho character varying,
    code_unit character varying,
    srid character varying,
    geologist character varying,
    icon_descr character varying,
    comments character varying,
    sample_id character varying,
    datasource character varying,
    numauto character varying,
    photos character varying,
    audio character varying,
    timestamp_epoch_ms character varying,
    device character varying,
    "time" character varying
);


--
-- Name: tmp_tt_120804_tn_dh_sampling_grades; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_tt_120804_tn_dh_sampling_grades (
    id character varying,
    depfrom character varying,
    depto character varying,
    core_loss_cm character varying,
    weight_kg character varying,
    sample_type character varying,
    sample_id character varying,
    comments character varying,
    opid character varying,
    batch_id character varying,
    datasource character varying,
    au1_ppm character varying,
    au2_ppm character varying,
    au3_ppm character varying,
    au4_ppm character varying,
    au5_ppm character varying,
    au6_ppm character varying
);


--
-- Name: tmp_tt_field_observations_okz_restaure; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_tt_field_observations_okz_restaure (
    opid character varying,
    year character varying,
    obs_id character varying,
    date character varying,
    waypoint_name character varying,
    x character varying,
    y character varying,
    z character varying,
    description character varying,
    code_litho character varying,
    code_unit character varying,
    srid character varying,
    geologist character varying,
    icon_descr character varying,
    comments character varying,
    sample_id character varying,
    datasource character varying,
    numauto character varying,
    photos character varying,
    audio character varying,
    timestamp_epoch_ms character varying,
    db_update_timestamp character varying,
    username character varying
);


--
-- Name: tmp_tt_gps_wpt_; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_tt_gps_wpt_ (
    description character varying,
    opid character varying,
    year character varying,
    obs_id character varying,
    date character varying,
    "time" character varying,
    waypoint_name character varying,
    x character varying,
    y character varying,
    z character varying,
    srid character varying,
    geologist character varying,
    device character varying,
    icon_descr character varying,
    comments character varying,
    sample_id character varying,
    datasource character varying,
    photos character varying,
    audio character varying,
    timestamp_epoch_ms character varying
);


--
-- Name: tmp_tt_lab_ana_batches_reception; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_tt_lab_ana_batches_reception (
    opid character varying,
    jobno character varying,
    generic_txt_col1 character varying,
    generic_txt_col2 character varying,
    generic_txt_col3 character varying,
    generic_txt_col4 character varying,
    numauto character varying,
    datasource character varying,
    labname character varying,
    client character varying,
    validated character varying,
    number_of_samples character varying,
    project character varying,
    shipment_id character varying,
    p_o_number character varying,
    received character varying,
    job_number character varying
);


--
-- Name: tmp_tt_pierre_nettoye_uploader_wpt; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_tt_pierre_nettoye_uploader_wpt (
    h character varying,
    idnt character varying,
    latitude character varying,
    longitude character varying,
    date character varying,
    "time" character varying,
    alt character varying,
    description character varying,
    proximity character varying,
    symbol character varying,
    lat_dd numeric,
    lon_dd numeric,
    numauto integer NOT NULL,
    year integer,
    date_iso character varying
);


--
-- Name: tmp_tt_pierre_nettoye_uploader_wpt_numauto_seq; Type: SEQUENCE; Schema: tmp_imports; Owner: -
--

CREATE SEQUENCE tmp_tt_pierre_nettoye_uploader_wpt_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: tmp_tt_pierre_nettoye_uploader_wpt_numauto_seq; Type: SEQUENCE OWNED BY; Schema: tmp_imports; Owner: -
--

ALTER SEQUENCE tmp_tt_pierre_nettoye_uploader_wpt_numauto_seq OWNED BY tmp_tt_pierre_nettoye_uploader_wpt.numauto;


--
-- Name: tmp_tt_pierre_nettoye_uploader_wpt_points; Type: VIEW; Schema: tmp_imports; Owner: -
--

CREATE VIEW tmp_tt_pierre_nettoye_uploader_wpt_points AS
    SELECT tmp_tt_pierre_nettoye_uploader_wpt.h, tmp_tt_pierre_nettoye_uploader_wpt.idnt, tmp_tt_pierre_nettoye_uploader_wpt.latitude, tmp_tt_pierre_nettoye_uploader_wpt.longitude, tmp_tt_pierre_nettoye_uploader_wpt.date, tmp_tt_pierre_nettoye_uploader_wpt."time", tmp_tt_pierre_nettoye_uploader_wpt.alt, tmp_tt_pierre_nettoye_uploader_wpt.description, tmp_tt_pierre_nettoye_uploader_wpt.proximity, tmp_tt_pierre_nettoye_uploader_wpt.symbol, tmp_tt_pierre_nettoye_uploader_wpt.lat_dd, tmp_tt_pierre_nettoye_uploader_wpt.lon_dd, tmp_tt_pierre_nettoye_uploader_wpt.numauto, public.geomfromewkt((((('SRID=4326; POINT('::text || tmp_tt_pierre_nettoye_uploader_wpt.lon_dd) || ' '::text) || tmp_tt_pierre_nettoye_uploader_wpt.lat_dd) || ')'::text)) AS geomfromewkt FROM tmp_tt_pierre_nettoye_uploader_wpt;


--
-- Name: tmp_tt_pts_gps_mdb_copie; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_tt_pts_gps_mdb_copie (
    no character varying,
    idnt character varying,
    latitude character varying,
    longitude character varying,
    date character varying,
    "time" character varying,
    alt character varying,
    descriptio character varying,
    proximity character varying,
    symbol__ character varying,
    mapinfo_id character varying,
    lat_dd numeric,
    lon_dd numeric,
    numauto integer NOT NULL
);


--
-- Name: tmp_tt_pts_gps_mdb_copie_numauto_seq; Type: SEQUENCE; Schema: tmp_imports; Owner: -
--

CREATE SEQUENCE tmp_tt_pts_gps_mdb_copie_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: tmp_tt_pts_gps_mdb_copie_numauto_seq; Type: SEQUENCE OWNED BY; Schema: tmp_imports; Owner: -
--

ALTER SEQUENCE tmp_tt_pts_gps_mdb_copie_numauto_seq OWNED BY tmp_tt_pts_gps_mdb_copie.numauto;


--
-- Name: tmp_tt_pts_gps_mdb_copie_points; Type: VIEW; Schema: tmp_imports; Owner: -
--

CREATE VIEW tmp_tt_pts_gps_mdb_copie_points AS
    SELECT tmp_tt_pts_gps_mdb_copie.no, tmp_tt_pts_gps_mdb_copie.idnt, tmp_tt_pts_gps_mdb_copie.latitude, tmp_tt_pts_gps_mdb_copie.longitude, tmp_tt_pts_gps_mdb_copie.date, tmp_tt_pts_gps_mdb_copie."time", tmp_tt_pts_gps_mdb_copie.alt, tmp_tt_pts_gps_mdb_copie.descriptio, tmp_tt_pts_gps_mdb_copie.proximity, tmp_tt_pts_gps_mdb_copie.symbol__, tmp_tt_pts_gps_mdb_copie.mapinfo_id, tmp_tt_pts_gps_mdb_copie.lat_dd, tmp_tt_pts_gps_mdb_copie.lon_dd, tmp_tt_pts_gps_mdb_copie.numauto, public.geomfromewkt((((('SRID=4326; POINT('::text || tmp_tt_pts_gps_mdb_copie.lon_dd) || ' '::text) || tmp_tt_pts_gps_mdb_copie.lat_dd) || ')'::text)) AS geomfromewkt FROM tmp_tt_pts_gps_mdb_copie;


--
-- Name: tmp_tt_pts_gps_mdb_fichiers; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_tt_pts_gps_mdb_fichiers (
    r character varying,
    datum character varying,
    idx character varying,
    da character varying,
    df character varying,
    dx character varying,
    dy character varying,
    coordinate_system character varying,
    no character varying,
    nomfichier character varying,
    date character varying,
    software_name_version character varying,
    taille character varying,
    dz character varying
);


--
-- Name: tmp_tt_pts_gps_mdb_fsdrg; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_tt_pts_gps_mdb_fsdrg (
    no character varying,
    idnt character varying,
    lat_ns character varying,
    latitude character varying,
    lon_eo character varying,
    longitude character varying,
    date character varying,
    "time" character varying,
    alt character varying,
    descriptio character varying,
    proximity character varying,
    symbol__ character varying,
    mapinfo_id character varying
);


--
-- Name: tmp_tt_pts_gps_mdb_points_latlong; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_tt_pts_gps_mdb_points_latlong (
    idnt character varying,
    "time" character varying,
    alt character varying,
    descriptio character varying,
    symbol__ character varying,
    no character varying,
    date character varying,
    lat_ns character varying,
    lon_eo character varying,
    latitude character varying,
    longitude character varying,
    lat_dd numeric,
    lon_dd numeric,
    numauto integer NOT NULL,
    year integer,
    date_iso date
);


--
-- Name: tmp_tt_pts_gps_mdb_points_latlong_numauto_seq; Type: SEQUENCE; Schema: tmp_imports; Owner: -
--

CREATE SEQUENCE tmp_tt_pts_gps_mdb_points_latlong_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: tmp_tt_pts_gps_mdb_points_latlong_numauto_seq; Type: SEQUENCE OWNED BY; Schema: tmp_imports; Owner: -
--

ALTER SEQUENCE tmp_tt_pts_gps_mdb_points_latlong_numauto_seq OWNED BY tmp_tt_pts_gps_mdb_points_latlong.numauto;


--
-- Name: tmp_tt_pts_gps_mdb_points_latlong_points; Type: VIEW; Schema: tmp_imports; Owner: -
--

CREATE VIEW tmp_tt_pts_gps_mdb_points_latlong_points AS
    SELECT tmp_tt_pts_gps_mdb_points_latlong.idnt, tmp_tt_pts_gps_mdb_points_latlong."time", tmp_tt_pts_gps_mdb_points_latlong.alt, tmp_tt_pts_gps_mdb_points_latlong.descriptio, tmp_tt_pts_gps_mdb_points_latlong.symbol__, tmp_tt_pts_gps_mdb_points_latlong.no, tmp_tt_pts_gps_mdb_points_latlong.date, tmp_tt_pts_gps_mdb_points_latlong.lat_ns, tmp_tt_pts_gps_mdb_points_latlong.lon_eo, tmp_tt_pts_gps_mdb_points_latlong.latitude, tmp_tt_pts_gps_mdb_points_latlong.longitude, tmp_tt_pts_gps_mdb_points_latlong.lat_dd, tmp_tt_pts_gps_mdb_points_latlong.lon_dd, tmp_tt_pts_gps_mdb_points_latlong.numauto, public.geomfromewkt((((('SRID=4326 ;POINT ('::text || tmp_tt_pts_gps_mdb_points_latlong.lon_dd) || ' '::text) || tmp_tt_pts_gps_mdb_points_latlong.lat_dd) || ')'::text)) AS geomfromewkt FROM tmp_tt_pts_gps_mdb_points_latlong;


--
-- Name: tmp_tt_pts_gps_mdb_sdqrfgadzrg; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_tt_pts_gps_mdb_sdqrfgadzrg (
    no character varying,
    idnt character varying,
    latitude character varying,
    longitude character varying,
    date character varying,
    "time" character varying,
    alt character varying,
    descriptio character varying,
    proximity character varying,
    symbol__ character varying,
    mapinfo_id character varying,
    lat_dd numeric,
    lon_dd numeric,
    numauto integer NOT NULL
);


--
-- Name: tmp_tt_pts_gps_mdb_sdqrfgadzrg_numauto_seq; Type: SEQUENCE; Schema: tmp_imports; Owner: -
--

CREATE SEQUENCE tmp_tt_pts_gps_mdb_sdqrfgadzrg_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: tmp_tt_pts_gps_mdb_sdqrfgadzrg_numauto_seq; Type: SEQUENCE OWNED BY; Schema: tmp_imports; Owner: -
--

ALTER SEQUENCE tmp_tt_pts_gps_mdb_sdqrfgadzrg_numauto_seq OWNED BY tmp_tt_pts_gps_mdb_sdqrfgadzrg.numauto;


--
-- Name: tmp_tt_pts_gps_mdb_sdqrfgadzrg_points; Type: VIEW; Schema: tmp_imports; Owner: -
--

CREATE VIEW tmp_tt_pts_gps_mdb_sdqrfgadzrg_points AS
    SELECT tmp_tt_pts_gps_mdb_sdqrfgadzrg.no, tmp_tt_pts_gps_mdb_sdqrfgadzrg.idnt, tmp_tt_pts_gps_mdb_sdqrfgadzrg.latitude, tmp_tt_pts_gps_mdb_sdqrfgadzrg.longitude, tmp_tt_pts_gps_mdb_sdqrfgadzrg.date, tmp_tt_pts_gps_mdb_sdqrfgadzrg."time", tmp_tt_pts_gps_mdb_sdqrfgadzrg.alt, tmp_tt_pts_gps_mdb_sdqrfgadzrg.descriptio, tmp_tt_pts_gps_mdb_sdqrfgadzrg.proximity, tmp_tt_pts_gps_mdb_sdqrfgadzrg.symbol__, tmp_tt_pts_gps_mdb_sdqrfgadzrg.mapinfo_id, tmp_tt_pts_gps_mdb_sdqrfgadzrg.lat_dd, tmp_tt_pts_gps_mdb_sdqrfgadzrg.lon_dd, tmp_tt_pts_gps_mdb_sdqrfgadzrg.numauto, public.geomfromewkt((((('SRID=4326; POINT('::text || tmp_tt_pts_gps_mdb_sdqrfgadzrg.lon_dd) || ' '::text) || tmp_tt_pts_gps_mdb_sdqrfgadzrg.lat_dd) || ')'::text)) AS geomfromewkt FROM tmp_tt_pts_gps_mdb_sdqrfgadzrg;


--
-- Name: tmp_tt_pts_gps_mdb_vireendb; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_tt_pts_gps_mdb_vireendb (
    no character varying,
    idnt character varying,
    lat_ns character varying,
    latitude character varying,
    lon_eo character varying,
    longitude character varying,
    date character varying,
    "time" character varying,
    alt character varying,
    descriptio character varying,
    proximity character varying,
    symbol__ character varying,
    mapinfo_id character varying,
    lat_dd numeric,
    lon_dd numeric,
    numauto integer NOT NULL
);


--
-- Name: tmp_tt_pts_gps_mdb_vireendb_numauto_seq; Type: SEQUENCE; Schema: tmp_imports; Owner: -
--

CREATE SEQUENCE tmp_tt_pts_gps_mdb_vireendb_numauto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: tmp_tt_pts_gps_mdb_vireendb_numauto_seq; Type: SEQUENCE OWNED BY; Schema: tmp_imports; Owner: -
--

ALTER SEQUENCE tmp_tt_pts_gps_mdb_vireendb_numauto_seq OWNED BY tmp_tt_pts_gps_mdb_vireendb.numauto;


--
-- Name: tmp_tt_pts_gps_mdb_vireendb_points; Type: VIEW; Schema: tmp_imports; Owner: -
--

CREATE VIEW tmp_tt_pts_gps_mdb_vireendb_points AS
    SELECT tmp_tt_pts_gps_mdb_vireendb.no, tmp_tt_pts_gps_mdb_vireendb.idnt, tmp_tt_pts_gps_mdb_vireendb.lat_ns, tmp_tt_pts_gps_mdb_vireendb.latitude, tmp_tt_pts_gps_mdb_vireendb.lon_eo, tmp_tt_pts_gps_mdb_vireendb.longitude, tmp_tt_pts_gps_mdb_vireendb.date, tmp_tt_pts_gps_mdb_vireendb."time", tmp_tt_pts_gps_mdb_vireendb.alt, tmp_tt_pts_gps_mdb_vireendb.descriptio, tmp_tt_pts_gps_mdb_vireendb.proximity, tmp_tt_pts_gps_mdb_vireendb.symbol__, tmp_tt_pts_gps_mdb_vireendb.mapinfo_id, tmp_tt_pts_gps_mdb_vireendb.lat_dd, tmp_tt_pts_gps_mdb_vireendb.lon_dd, tmp_tt_pts_gps_mdb_vireendb.numauto, public.geomfromewkt((((('SRID=4326 ;POINT ('::text || tmp_tt_pts_gps_mdb_vireendb.lon_dd) || ' '::text) || tmp_tt_pts_gps_mdb_vireendb.lat_dd) || ')'::text)) AS geomfromewkt FROM tmp_tt_pts_gps_mdb_vireendb;


--
-- Name: tmp_tt_shift_reports_121022_smi_explo_suivi_sondages_; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_tt_shift_reports_121022_smi_explo_suivi_sondages_ (
    date character varying,
    shift character varying,
    rig character varying,
    id character varying,
    planned_depth character varying,
    drilled_length_during_shift character varying,
    tool character varying,
    reco_m character varying,
    gen_value_1_standby_afm character varying,
    gen_value_2_standby_sfm character varying,
    gen_value_3_moving character varying,
    gen_value_4_standby_meteo character varying,
    observation character varying,
    no character varying,
    opid character varying
);


--
-- Name: tmp_tt_son97_xlw_caisses; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_tt_son97_xlw_caisses (
    indr character varying,
    depfrom character varying,
    depto character varying,
    box character varying,
    datasource character varying
);


--
-- Name: tmp_ttd_ajouter__; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_ttd_ajouter__ (
    id character varying,
    depfrom character varying,
    depto character varying,
    sample_id character varying,
    au_als_fa_avg_grade character varying,
    au_sgs_tot_avg_grade character varying,
    au_smi_cy_avg_grade character varying,
    au_smi_tot_avg_grade character varying,
    datasource integer
);


--
-- Name: tmp_ttd_diff__; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_ttd_diff__ (
    id character varying,
    depfrom character varying,
    depto character varying,
    sample_id character varying,
    au_als_fa_avg_grade character varying,
    au_sgs_tot_avg_grade character varying,
    au_smi_cy_avg_grade character varying,
    au_smi_tot_avg_grade character varying,
    datasource integer
);


--
-- Name: tmp_u; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_u (
    indr character varying,
    depfrom character varying,
    depto character varying,
    box character varying,
    datasource character varying
);


--
-- Name: tmp_waypoints_descriptions; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_waypoints_descriptions (
    index character varying,
    name character varying,
    num_corr character varying,
    date character varying,
    opid character varying,
    latitude character varying,
    longitude character varying,
    description character varying,
    icon_descr character varying,
    alt_meters character varying,
    rq character varying,
    obs_id character varying
);


--
-- Name: tmp_waypoints_descriptions_bricolage; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_waypoints_descriptions_bricolage (
    obs_id character varying,
    year character varying,
    date character varying,
    opid character varying,
    index character varying,
    name character varying,
    latitude character varying,
    longitude character varying,
    alt_meters character varying,
    description character varying,
    icon_descr character varying,
    comments character varying,
    sample_id character varying
);


--
-- Name: tmp_xtr_bdexploy_dh_collars; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_xtr_bdexploy_dh_collars (
    id character varying,
    shid character varying,
    location character varying,
    profile character varying,
    srid character varying,
    x character varying,
    y character varying,
    z character varying,
    azim_ng character varying,
    azim_nm character varying,
    dip_hz character varying,
    dh_type character varying,
    date_start character varying,
    contractor character varying,
    geologist character varying,
    length character varying,
    len_destr character varying,
    len_pq character varying,
    len_hq character varying,
    len_nq character varying,
    len_bq character varying,
    nb_samples character varying,
    comments character varying,
    completed character varying,
    datasource character varying,
    numauto character varying,
    date_completed character varying,
    opid character varying,
    purpose character varying,
    x_local character varying,
    y_local character varying,
    z_local character varying,
    accusum character varying,
    id_pject character varying,
    x_pject character varying,
    y_pject character varying,
    z_pject character varying
);


--
-- Name: tmp_z; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_z (
    indr_1 character varying,
    dir character varying,
    incl character varying,
    x character varying,
    y character varying,
    z character varying,
    depto character varying,
    fond character varying,
    allo character varying,
    lg character varying,
    clar character varying,
    arta character varying,
    arba character varying,
    sap character varying,
    xutm character varying,
    yutm character varying,
    zutm character varying
);


--
-- Name: tmp_zeroo; Type: TABLE; Schema: tmp_imports; Owner: -; Tablespace: 
--

CREATE TABLE tmp_zeroo (
    labname character varying,
    jobno character varying,
    orderno character varying,
    sample_id character varying,
    scheme character varying,
    analyte character varying,
    value character varying,
    db_update_timestamp character varying,
    value_num character varying,
    opid character varying,
    batch_id character varying,
    sampletype character varying,
    unit character varying,
    datasource character varying,
    sample_id_lab character varying
);


SET search_path = pierre, pg_catalog;

--
-- Name: numauto; Type: DEFAULT; Schema: pierre; Owner: -
--

ALTER TABLE ONLY dh_collars_lengths ALTER COLUMN numauto SET DEFAULT nextval('dh_collars_lengths_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: pierre; Owner: -
--

ALTER TABLE ONLY grid ALTER COLUMN numauto SET DEFAULT nextval('grid_numauto_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: pierre; Owner: -
--

ALTER TABLE ONLY layer_styles ALTER COLUMN id SET DEFAULT nextval('layer_styles_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: pierre; Owner: -
--

ALTER TABLE ONLY point ALTER COLUMN id SET DEFAULT nextval('point_id_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: pierre; Owner: -
--

ALTER TABLE ONLY rock_ana ALTER COLUMN numauto SET DEFAULT nextval('hammer_ana_numauto_seq'::regclass);


--
-- Name: num; Type: DEFAULT; Schema: pierre; Owner: -
--

ALTER TABLE ONLY sections_array ALTER COLUMN num SET DEFAULT nextval('sections_array_num_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: pierre; Owner: -
--

ALTER TABLE ONLY sections_definition ALTER COLUMN id SET DEFAULT nextval('sections_definition_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: pierre; Owner: -
--

ALTER TABLE ONLY tmp_xy ALTER COLUMN id SET DEFAULT nextval('tmp_xy_id_seq'::regclass);


SET search_path = public, pg_catalog;

--
-- Name: gid; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ancient_workings ALTER COLUMN gid SET DEFAULT nextval('ancient_workings_gid_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ancient_workings ALTER COLUMN numauto SET DEFAULT nextval('ancient_workings_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY baselines ALTER COLUMN numauto SET DEFAULT nextval('baselines_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY dh_collars ALTER COLUMN numauto SET DEFAULT nextval('dh_collars_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY dh_core_boxes ALTER COLUMN numauto SET DEFAULT nextval('dh_core_boxes_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY dh_density ALTER COLUMN numauto SET DEFAULT nextval('dh_density_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY dh_devia ALTER COLUMN numauto SET DEFAULT nextval('dh_devia_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY dh_followup ALTER COLUMN numauto SET DEFAULT nextval('dh_followup_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY dh_litho ALTER COLUMN numauto SET DEFAULT nextval('dh_litho_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY dh_mineralised_intervals ALTER COLUMN numauto SET DEFAULT nextval('dh_mine_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY dh_quicklog ALTER COLUMN numauto SET DEFAULT nextval('dh_quicklog_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY dh_sampling_bottle_roll ALTER COLUMN numauto SET DEFAULT nextval('dh_sampling_bottle_roll_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY dh_sampling_grades ALTER COLUMN numauto SET DEFAULT nextval('dh_sampling_grades_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY dh_struct_measures ALTER COLUMN numauto SET DEFAULT nextval('dh_struct_measures_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY dh_tech ALTER COLUMN numauto SET DEFAULT nextval('dh_tech_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY dh_thinsections ALTER COLUMN numauto SET DEFAULT nextval('dh_thinsections_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY doc_bdexplo_table_categories ALTER COLUMN numauto SET DEFAULT nextval('doc_bdexplo_table_categories_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY doc_bdexplo_tables_descriptions ALTER COLUMN numauto SET DEFAULT nextval('doc_bdexplo_tables_descriptions_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY field_observations ALTER COLUMN numauto SET DEFAULT nextval('field_observations_numauto_seq2'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY field_observations_struct_measures ALTER COLUMN numauto SET DEFAULT nextval('field_observations_struct_measures_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY field_photos ALTER COLUMN numauto SET DEFAULT nextval('field_photos_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY formations_group_lithos ALTER COLUMN numauto SET DEFAULT nextval('formations_group_lithos_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY geoch_ana ALTER COLUMN numauto SET DEFAULT nextval('geoch_ana_numauto_seq'::regclass);


--
-- Name: sampl_index; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY geoch_sampling ALTER COLUMN sampl_index SET DEFAULT nextval('geoch_sampling_sampl_index_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY geoch_sampling ALTER COLUMN numauto SET DEFAULT nextval('geoch_sampling_numauto_seq'::regclass);


--
-- Name: sampl_index; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY geoch_sampling_grades ALTER COLUMN sampl_index SET DEFAULT nextval('geoch_sampling_sampl_index_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY geoch_sampling_grades ALTER COLUMN numauto SET DEFAULT nextval('geoch_sampling_grades_numauto_seq'::regclass);


--
-- Name: db_update_timestamp; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY geoch_sampling_grades ALTER COLUMN db_update_timestamp SET DEFAULT now();


--
-- Name: username; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY geoch_sampling_grades ALTER COLUMN username SET DEFAULT "current_user"();


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY gpy_mag_ground ALTER COLUMN numauto SET DEFAULT nextval('gpy_mag_ground_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY grade_ctrl ALTER COLUMN numauto SET DEFAULT nextval('preex_sampling_numauto_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY index_geo_documentation ALTER COLUMN id SET DEFAULT nextval('index_geo_documentation_id_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY index_geo_documentation ALTER COLUMN numauto SET DEFAULT nextval('index_geo_documentation_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY lab_ana_batches_expedition ALTER COLUMN numauto SET DEFAULT nextval('lab_ana_batches_expedition_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY lab_ana_batches_reception ALTER COLUMN numauto SET DEFAULT nextval('lab_ana_batches_reception_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY lab_ana_columns_definition ALTER COLUMN numauto SET DEFAULT nextval('lab_ana_columns_definition_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY lab_ana_qaqc_results ALTER COLUMN numauto SET DEFAULT nextval('lab_ana_qaqc_results_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY lab_ana_results ALTER COLUMN numauto SET DEFAULT nextval('lab_ana_results_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY lex_codes ALTER COLUMN numauto SET DEFAULT nextval('lex_codes_numauto_seq'::regclass);


--
-- Name: datasource_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY lex_datasource ALTER COLUMN datasource_id SET DEFAULT nextval('lex_datasource_datasource_id_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY lex_datasource ALTER COLUMN numauto SET DEFAULT nextval('lex_datasource_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY lex_standard ALTER COLUMN numauto SET DEFAULT nextval('lex_standard_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY licences ALTER COLUMN numauto SET DEFAULT nextval('licences_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY mag_declination ALTER COLUMN numauto SET DEFAULT nextval('mag_declination_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY operation_active ALTER COLUMN numauto SET DEFAULT nextval('operation_active_numauto_seq'::regclass);


--
-- Name: opid; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY operations ALTER COLUMN opid SET DEFAULT nextval('operations_opid_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY operations ALTER COLUMN numauto SET DEFAULT nextval('operations_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY qc_sampling ALTER COLUMN numauto SET DEFAULT nextval('qc_sampling_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY qc_standards ALTER COLUMN numauto SET DEFAULT nextval('qc_standards_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY shift_reports ALTER COLUMN numauto SET DEFAULT nextval('shift_reports_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY surface_samples_grades ALTER COLUMN numauto SET DEFAULT nextval('surface_samples_grades_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY survey_lines ALTER COLUMN numauto SET DEFAULT nextval('survey_lines_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY topo_points ALTER COLUMN numauto SET DEFAULT nextval('topo_points_numauto_seq'::regclass);


SET search_path = tmp_imports, pg_catalog;

--
-- Name: numauto; Type: DEFAULT; Schema: tmp_imports; Owner: -
--

ALTER TABLE ONLY bondoukou_alain_lambert_coor ALTER COLUMN numauto SET DEFAULT nextval('bondoukou_alain_lambert_coor_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: tmp_imports; Owner: -
--

ALTER TABLE ONLY bondoukou_alain_lambert_vx_tvx ALTER COLUMN numauto SET DEFAULT nextval('bondoukou_alain_lambert_vx_tvx_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: tmp_imports; Owner: -
--

ALTER TABLE ONLY lab_ana_batches_reception_ity ALTER COLUMN numauto SET DEFAULT nextval('lab_ana_batches_reception_ity_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: tmp_imports; Owner: -
--

ALTER TABLE ONLY pol_ana ALTER COLUMN numauto SET DEFAULT nextval('pol_ana_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: tmp_imports; Owner: -
--

ALTER TABLE ONLY pol_collets ALTER COLUMN numauto SET DEFAULT nextval('pol_collets_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: tmp_imports; Owner: -
--

ALTER TABLE ONLY pol_dev ALTER COLUMN numauto SET DEFAULT nextval('pol_dev_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: tmp_imports; Owner: -
--

ALTER TABLE ONLY pol_epai ALTER COLUMN numauto SET DEFAULT nextval('pol_epai_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: tmp_imports; Owner: -
--

ALTER TABLE ONLY pol_lit ALTER COLUMN numauto SET DEFAULT nextval('pol_lit_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: tmp_imports; Owner: -
--

ALTER TABLE ONLY pol_stru_orig_convention_dipdir ALTER COLUMN numauto SET DEFAULT nextval('pol_stru_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: tmp_imports; Owner: -
--

ALTER TABLE ONLY tmp_anasondo ALTER COLUMN numauto SET DEFAULT nextval('tmp_anasondo_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: tmp_imports; Owner: -
--

ALTER TABLE ONLY tmp_compil_tetes_polo ALTER COLUMN numauto SET DEFAULT nextval('tmp_compil_tetes_polo_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: tmp_imports; Owner: -
--

ALTER TABLE ONLY tmp_ee ALTER COLUMN numauto SET DEFAULT nextval('tmp_ee_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: tmp_imports; Owner: -
--

ALTER TABLE ONLY tmp_flana ALTER COLUMN numauto SET DEFAULT nextval('tmp_flana_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: tmp_imports; Owner: -
--

ALTER TABLE ONLY tmp_ity9 ALTER COLUMN numauto SET DEFAULT nextval('tmp_ity9_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: tmp_imports; Owner: -
--

ALTER TABLE ONLY tmp_ity_gpspolo_travaux_97et2004 ALTER COLUMN numauto SET DEFAULT nextval('tmp_ity_gpspolo_travaux_97et2004_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: tmp_imports; Owner: -
--

ALTER TABLE ONLY tmp_logging_terrain_campagne_1997_base_sondage ALTER COLUMN numauto SET DEFAULT nextval('tmp_logging_terrain_campagne_1997_base_sondage_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: tmp_imports; Owner: -
--

ALTER TABLE ONLY tmp_logging_terrain_campagne_1997_fiche_tech ALTER COLUMN numauto SET DEFAULT nextval('tmp_logging_terrain_campagne_1997_fiche_tech_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: tmp_imports; Owner: -
--

ALTER TABLE ONLY tmp_mco_mont_ity_2012_10_ ALTER COLUMN numauto SET DEFAULT nextval('tmp_mco_mont_ity_2012_10__numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: tmp_imports; Owner: -
--

ALTER TABLE ONLY tmp_planl_ ALTER COLUMN numauto SET DEFAULT nextval('tmp_planl__numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: tmp_imports; Owner: -
--

ALTER TABLE ONLY tmp_planp_ ALTER COLUMN numauto SET DEFAULT nextval('tmp_planp__numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: tmp_imports; Owner: -
--

ALTER TABLE ONLY tmp_suivi_sondages_1997_v1_tetes ALTER COLUMN numauto SET DEFAULT nextval('tmp_suivi_sondages_1997_v1_tetes_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: tmp_imports; Owner: -
--

ALTER TABLE ONLY tmp_tmp_sondages_prevus_maille_carree_80m ALTER COLUMN numauto SET DEFAULT nextval('tmp_tmp_sondages_prevus_maille_carree_80m_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: tmp_imports; Owner: -
--

ALTER TABLE ONLY tmp_tt_pierre_nettoye_uploader_wpt ALTER COLUMN numauto SET DEFAULT nextval('tmp_tt_pierre_nettoye_uploader_wpt_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: tmp_imports; Owner: -
--

ALTER TABLE ONLY tmp_tt_pts_gps_mdb_copie ALTER COLUMN numauto SET DEFAULT nextval('tmp_tt_pts_gps_mdb_copie_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: tmp_imports; Owner: -
--

ALTER TABLE ONLY tmp_tt_pts_gps_mdb_points_latlong ALTER COLUMN numauto SET DEFAULT nextval('tmp_tt_pts_gps_mdb_points_latlong_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: tmp_imports; Owner: -
--

ALTER TABLE ONLY tmp_tt_pts_gps_mdb_sdqrfgadzrg ALTER COLUMN numauto SET DEFAULT nextval('tmp_tt_pts_gps_mdb_sdqrfgadzrg_numauto_seq'::regclass);


--
-- Name: numauto; Type: DEFAULT; Schema: tmp_imports; Owner: -
--

ALTER TABLE ONLY tmp_tt_pts_gps_mdb_vireendb ALTER COLUMN numauto SET DEFAULT nextval('tmp_tt_pts_gps_mdb_vireendb_numauto_seq'::regclass);


SET search_path = pierre, pg_catalog;

--
-- Name: dh_collars_lengths_pkey; Type: CONSTRAINT; Schema: pierre; Owner: -; Tablespace: 
--

ALTER TABLE ONLY dh_collars_lengths
    ADD CONSTRAINT dh_collars_lengths_pkey PRIMARY KEY (numauto);


--
-- Name: grid_pkey; Type: CONSTRAINT; Schema: pierre; Owner: -; Tablespace: 
--

ALTER TABLE ONLY grid
    ADD CONSTRAINT grid_pkey PRIMARY KEY (numauto);


--
-- Name: hammer_ana_pkey; Type: CONSTRAINT; Schema: pierre; Owner: -; Tablespace: 
--

ALTER TABLE ONLY rock_ana
    ADD CONSTRAINT hammer_ana_pkey PRIMARY KEY (numauto);


--
-- Name: hammer_sampling_pkey; Type: CONSTRAINT; Schema: pierre; Owner: -; Tablespace: 
--

ALTER TABLE ONLY rock_sampling
    ADD CONSTRAINT hammer_sampling_pkey PRIMARY KEY (hammer_index);


--
-- Name: layer_styles_pkey; Type: CONSTRAINT; Schema: pierre; Owner: -; Tablespace: 
--

ALTER TABLE ONLY layer_styles
    ADD CONSTRAINT layer_styles_pkey PRIMARY KEY (id);


--
-- Name: point_pkey; Type: CONSTRAINT; Schema: pierre; Owner: -; Tablespace: 
--

ALTER TABLE ONLY point
    ADD CONSTRAINT point_pkey PRIMARY KEY (id);


--
-- Name: program_pkey; Type: CONSTRAINT; Schema: pierre; Owner: -; Tablespace: 
--

ALTER TABLE ONLY program
    ADD CONSTRAINT program_pkey PRIMARY KEY (gid);


--
-- Name: sections_array_pkey; Type: CONSTRAINT; Schema: pierre; Owner: -; Tablespace: 
--

ALTER TABLE ONLY sections_array
    ADD CONSTRAINT sections_array_pkey PRIMARY KEY (num);


--
-- Name: sections_definition_pkey; Type: CONSTRAINT; Schema: pierre; Owner: -; Tablespace: 
--

ALTER TABLE ONLY sections_definition
    ADD CONSTRAINT sections_definition_pkey PRIMARY KEY (id);


--
-- Name: tmp_programme_sondages_pkey; Type: CONSTRAINT; Schema: pierre; Owner: -; Tablespace: 
--

ALTER TABLE ONLY tmp_programme_sondages
    ADD CONSTRAINT tmp_programme_sondages_pkey PRIMARY KEY (num);


--
-- Name: tmp_xy_id; Type: CONSTRAINT; Schema: pierre; Owner: -; Tablespace: 
--

ALTER TABLE ONLY tmp_xy
    ADD CONSTRAINT tmp_xy_id PRIMARY KEY (id);


SET search_path = public, pg_catalog;

--
-- Name: ancient_workings_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ancient_workings
    ADD CONSTRAINT ancient_workings_pkey PRIMARY KEY (gid);


--
-- Name: baselines_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY baselines
    ADD CONSTRAINT baselines_pkey PRIMARY KEY (numauto);


--
-- Name: dh_collars_numauto_key; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY dh_collars
    ADD CONSTRAINT dh_collars_numauto_key UNIQUE (numauto);


--
-- Name: dh_core_boxes_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY dh_core_boxes
    ADD CONSTRAINT dh_core_boxes_pkey PRIMARY KEY (numauto);


--
-- Name: dh_density_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY dh_density
    ADD CONSTRAINT dh_density_pkey PRIMARY KEY (numauto);


--
-- Name: dh_devia_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY dh_devia
    ADD CONSTRAINT dh_devia_pkey PRIMARY KEY (numauto);


--
-- Name: dh_followup_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY dh_followup
    ADD CONSTRAINT dh_followup_pkey PRIMARY KEY (numauto);


--
-- Name: dh_litho_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY dh_litho
    ADD CONSTRAINT dh_litho_pkey PRIMARY KEY (numauto);


--
-- Name: dh_mine_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY dh_mineralised_intervals
    ADD CONSTRAINT dh_mine_pkey PRIMARY KEY (numauto);


--
-- Name: dh_quicklog_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY dh_quicklog
    ADD CONSTRAINT dh_quicklog_pkey PRIMARY KEY (numauto);


--
-- Name: dh_sampling_bottle_roll_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY dh_sampling_bottle_roll
    ADD CONSTRAINT dh_sampling_bottle_roll_pkey PRIMARY KEY (numauto);


--
-- Name: dh_sampling_grades_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY dh_sampling_grades
    ADD CONSTRAINT dh_sampling_grades_pkey PRIMARY KEY (numauto);


--
-- Name: dh_struct_measures_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY dh_struct_measures
    ADD CONSTRAINT dh_struct_measures_pkey PRIMARY KEY (numauto);


--
-- Name: dh_tech_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY dh_tech
    ADD CONSTRAINT dh_tech_pkey PRIMARY KEY (numauto);


--
-- Name: dh_thinsections_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY dh_thinsections
    ADD CONSTRAINT dh_thinsections_pkey PRIMARY KEY (numauto);


--
-- Name: doc_bdexplo_table_categories_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY doc_bdexplo_table_categories
    ADD CONSTRAINT doc_bdexplo_table_categories_pkey PRIMARY KEY (category);


--
-- Name: doc_bdexplo_tables_descriptions_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY doc_bdexplo_tables_descriptions
    ADD CONSTRAINT doc_bdexplo_tables_descriptions_pkey PRIMARY KEY (tablename);


--
-- Name: fichette_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY shift_reports
    ADD CONSTRAINT fichette_pkey PRIMARY KEY (opid, no_fichette);


--
-- Name: field_observations_pkey1; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY field_observations
    ADD CONSTRAINT field_observations_pkey1 PRIMARY KEY (numauto);


--
-- Name: field_observations_struct_measures_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY field_observations_struct_measures
    ADD CONSTRAINT field_observations_struct_measures_pkey PRIMARY KEY (numauto);


--
-- Name: field_photos_id; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY field_photos
    ADD CONSTRAINT field_photos_id PRIMARY KEY (pho_id);


--
-- Name: formations_group_lithos_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY formations_group_lithos
    ADD CONSTRAINT formations_group_lithos_pkey PRIMARY KEY (numauto);


--
-- Name: geoch_ana_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY geoch_ana
    ADD CONSTRAINT geoch_ana_pkey PRIMARY KEY (numauto);


--
-- Name: geoch_sampling_grades_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY geoch_sampling_grades
    ADD CONSTRAINT geoch_sampling_grades_pkey PRIMARY KEY (numauto);


--
-- Name: geoch_sampling_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY geoch_sampling
    ADD CONSTRAINT geoch_sampling_pkey PRIMARY KEY (sampl_index);


--
-- Name: geometry_columns_pk; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY geometry_columns
    ADD CONSTRAINT geometry_columns_pk PRIMARY KEY (f_table_catalog, f_table_schema, f_table_name, f_geometry_column);


--
-- Name: gpy_mag_ground_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY gpy_mag_ground
    ADD CONSTRAINT gpy_mag_ground_pkey PRIMARY KEY (numauto);


--
-- Name: index_geo_documentation_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY index_geo_documentation
    ADD CONSTRAINT index_geo_documentation_pkey PRIMARY KEY (numauto);


--
-- Name: lab_ana_batches_expedition_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY lab_ana_batches_expedition
    ADD CONSTRAINT lab_ana_batches_expedition_pkey PRIMARY KEY (numauto);


--
-- Name: lab_ana_batches_reception_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY lab_ana_batches_reception
    ADD CONSTRAINT lab_ana_batches_reception_pkey PRIMARY KEY (numauto);


--
-- Name: lab_ana_columns_definition_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY lab_ana_columns_definition
    ADD CONSTRAINT lab_ana_columns_definition_pkey PRIMARY KEY (numauto);


--
-- Name: lab_ana_qaqc_results_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY lab_ana_qaqc_results
    ADD CONSTRAINT lab_ana_qaqc_results_pkey PRIMARY KEY (numauto);


--
-- Name: lex_codes_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY lex_codes
    ADD CONSTRAINT lex_codes_pkey PRIMARY KEY (numauto);


--
-- Name: lex_datasource_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY lex_datasource
    ADD CONSTRAINT lex_datasource_pkey PRIMARY KEY (numauto);


--
-- Name: lex_qc_qc_id_key; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY qc_standards
    ADD CONSTRAINT lex_qc_qc_id_key UNIQUE (qc_id);


--
-- Name: lex_standard_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY lex_standard
    ADD CONSTRAINT lex_standard_pkey PRIMARY KEY (numauto);


--
-- Name: mag_declination_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY mag_declination
    ADD CONSTRAINT mag_declination_pkey PRIMARY KEY (numauto);


--
-- Name: numauto_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY surface_samples_grades
    ADD CONSTRAINT numauto_pkey PRIMARY KEY (numauto);


--
-- Name: opid; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY operations
    ADD CONSTRAINT opid PRIMARY KEY (opid);


--
-- Name: opid_id; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY dh_collars
    ADD CONSTRAINT opid_id PRIMARY KEY (opid, id);


--
-- Name: opid_unique; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY operation_active
    ADD CONSTRAINT opid_unique UNIQUE (opid);


--
-- Name: preex_sampling_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY grade_ctrl
    ADD CONSTRAINT preex_sampling_pkey PRIMARY KEY (numauto);


--
-- Name: qc_sampling_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY qc_sampling
    ADD CONSTRAINT qc_sampling_pkey PRIMARY KEY (numauto);


--
-- Name: qc_standards_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY qc_standards
    ADD CONSTRAINT qc_standards_pkey PRIMARY KEY (numauto);


--
-- Name: spatial_ref_sys_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY spatial_ref_sys
    ADD CONSTRAINT spatial_ref_sys_pkey PRIMARY KEY (srid);


--
-- Name: survey_lines_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY survey_lines
    ADD CONSTRAINT survey_lines_pkey PRIMARY KEY (numauto);


--
-- Name: topo_points_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY topo_points
    ADD CONSTRAINT topo_points_pkey PRIMARY KEY (numauto);


SET search_path = tmp_imports, pg_catalog;

--
-- Name: bondoukou_alain_lambert_coor_pkey; Type: CONSTRAINT; Schema: tmp_imports; Owner: -; Tablespace: 
--

ALTER TABLE ONLY bondoukou_alain_lambert_coor
    ADD CONSTRAINT bondoukou_alain_lambert_coor_pkey PRIMARY KEY (numauto);


--
-- Name: bondoukou_alain_lambert_vx_tvx_pkey; Type: CONSTRAINT; Schema: tmp_imports; Owner: -; Tablespace: 
--

ALTER TABLE ONLY bondoukou_alain_lambert_vx_tvx
    ADD CONSTRAINT bondoukou_alain_lambert_vx_tvx_pkey PRIMARY KEY (numauto);


--
-- Name: lab_ana_batches_reception_ity_pkey; Type: CONSTRAINT; Schema: tmp_imports; Owner: -; Tablespace: 
--

ALTER TABLE ONLY lab_ana_batches_reception_ity
    ADD CONSTRAINT lab_ana_batches_reception_ity_pkey PRIMARY KEY (numauto);


--
-- Name: pol_ana_pkey; Type: CONSTRAINT; Schema: tmp_imports; Owner: -; Tablespace: 
--

ALTER TABLE ONLY pol_ana
    ADD CONSTRAINT pol_ana_pkey PRIMARY KEY (numauto);


--
-- Name: pol_collets_pkey; Type: CONSTRAINT; Schema: tmp_imports; Owner: -; Tablespace: 
--

ALTER TABLE ONLY pol_collets
    ADD CONSTRAINT pol_collets_pkey PRIMARY KEY (numauto);


--
-- Name: pol_dev_pkey; Type: CONSTRAINT; Schema: tmp_imports; Owner: -; Tablespace: 
--

ALTER TABLE ONLY pol_dev
    ADD CONSTRAINT pol_dev_pkey PRIMARY KEY (numauto);


--
-- Name: pol_epai_pkey; Type: CONSTRAINT; Schema: tmp_imports; Owner: -; Tablespace: 
--

ALTER TABLE ONLY pol_epai
    ADD CONSTRAINT pol_epai_pkey PRIMARY KEY (numauto);


--
-- Name: pol_lit_pkey; Type: CONSTRAINT; Schema: tmp_imports; Owner: -; Tablespace: 
--

ALTER TABLE ONLY pol_lit
    ADD CONSTRAINT pol_lit_pkey PRIMARY KEY (numauto);


--
-- Name: pol_stru_pkey; Type: CONSTRAINT; Schema: tmp_imports; Owner: -; Tablespace: 
--

ALTER TABLE ONLY pol_stru_orig_convention_dipdir
    ADD CONSTRAINT pol_stru_pkey PRIMARY KEY (numauto);


--
-- Name: tmp_anasondo_pkey; Type: CONSTRAINT; Schema: tmp_imports; Owner: -; Tablespace: 
--

ALTER TABLE ONLY tmp_anasondo
    ADD CONSTRAINT tmp_anasondo_pkey PRIMARY KEY (numauto);


--
-- Name: tmp_compil_tetes_polo_pkey; Type: CONSTRAINT; Schema: tmp_imports; Owner: -; Tablespace: 
--

ALTER TABLE ONLY tmp_compil_tetes_polo
    ADD CONSTRAINT tmp_compil_tetes_polo_pkey PRIMARY KEY (numauto);


--
-- Name: tmp_ee_pkey; Type: CONSTRAINT; Schema: tmp_imports; Owner: -; Tablespace: 
--

ALTER TABLE ONLY tmp_ee
    ADD CONSTRAINT tmp_ee_pkey PRIMARY KEY (numauto);


--
-- Name: tmp_flana_pkey; Type: CONSTRAINT; Schema: tmp_imports; Owner: -; Tablespace: 
--

ALTER TABLE ONLY tmp_flana
    ADD CONSTRAINT tmp_flana_pkey PRIMARY KEY (numauto);


--
-- Name: tmp_ity9_pkey; Type: CONSTRAINT; Schema: tmp_imports; Owner: -; Tablespace: 
--

ALTER TABLE ONLY tmp_ity9
    ADD CONSTRAINT tmp_ity9_pkey PRIMARY KEY (numauto);


--
-- Name: tmp_ity_gpspolo_travaux_97et2004_pkey; Type: CONSTRAINT; Schema: tmp_imports; Owner: -; Tablespace: 
--

ALTER TABLE ONLY tmp_ity_gpspolo_travaux_97et2004
    ADD CONSTRAINT tmp_ity_gpspolo_travaux_97et2004_pkey PRIMARY KEY (numauto);


--
-- Name: tmp_logging_terrain_campagne_1997_base_sondage_pkey; Type: CONSTRAINT; Schema: tmp_imports; Owner: -; Tablespace: 
--

ALTER TABLE ONLY tmp_logging_terrain_campagne_1997_base_sondage
    ADD CONSTRAINT tmp_logging_terrain_campagne_1997_base_sondage_pkey PRIMARY KEY (numauto);


--
-- Name: tmp_logging_terrain_campagne_1997_fiche_tech_pkey; Type: CONSTRAINT; Schema: tmp_imports; Owner: -; Tablespace: 
--

ALTER TABLE ONLY tmp_logging_terrain_campagne_1997_fiche_tech
    ADD CONSTRAINT tmp_logging_terrain_campagne_1997_fiche_tech_pkey PRIMARY KEY (numauto);


--
-- Name: tmp_mco_mont_ity_2012_10__numauto_key; Type: CONSTRAINT; Schema: tmp_imports; Owner: -; Tablespace: 
--

ALTER TABLE ONLY tmp_mco_mont_ity_2012_10_
    ADD CONSTRAINT tmp_mco_mont_ity_2012_10__numauto_key UNIQUE (numauto);


--
-- Name: tmp_planl__numauto_key; Type: CONSTRAINT; Schema: tmp_imports; Owner: -; Tablespace: 
--

ALTER TABLE ONLY tmp_planl_
    ADD CONSTRAINT tmp_planl__numauto_key UNIQUE (numauto);


--
-- Name: tmp_planp__numauto_key; Type: CONSTRAINT; Schema: tmp_imports; Owner: -; Tablespace: 
--

ALTER TABLE ONLY tmp_planp_
    ADD CONSTRAINT tmp_planp__numauto_key UNIQUE (numauto);


--
-- Name: tmp_suivi_sondages_1997_v1_tetes_pkey; Type: CONSTRAINT; Schema: tmp_imports; Owner: -; Tablespace: 
--

ALTER TABLE ONLY tmp_suivi_sondages_1997_v1_tetes
    ADD CONSTRAINT tmp_suivi_sondages_1997_v1_tetes_pkey PRIMARY KEY (numauto);


--
-- Name: tmp_tt_pierre_nettoye_uploader_wpt_pkey; Type: CONSTRAINT; Schema: tmp_imports; Owner: -; Tablespace: 
--

ALTER TABLE ONLY tmp_tt_pierre_nettoye_uploader_wpt
    ADD CONSTRAINT tmp_tt_pierre_nettoye_uploader_wpt_pkey PRIMARY KEY (numauto);


--
-- Name: tmp_tt_pts_gps_mdb_copie_pkey; Type: CONSTRAINT; Schema: tmp_imports; Owner: -; Tablespace: 
--

ALTER TABLE ONLY tmp_tt_pts_gps_mdb_copie
    ADD CONSTRAINT tmp_tt_pts_gps_mdb_copie_pkey PRIMARY KEY (numauto);


--
-- Name: tmp_tt_pts_gps_mdb_points_latlong_pkey; Type: CONSTRAINT; Schema: tmp_imports; Owner: -; Tablespace: 
--

ALTER TABLE ONLY tmp_tt_pts_gps_mdb_points_latlong
    ADD CONSTRAINT tmp_tt_pts_gps_mdb_points_latlong_pkey PRIMARY KEY (numauto);


--
-- Name: tmp_tt_pts_gps_mdb_sdqrfgadzrg_pkey; Type: CONSTRAINT; Schema: tmp_imports; Owner: -; Tablespace: 
--

ALTER TABLE ONLY tmp_tt_pts_gps_mdb_sdqrfgadzrg
    ADD CONSTRAINT tmp_tt_pts_gps_mdb_sdqrfgadzrg_pkey PRIMARY KEY (numauto);


--
-- Name: tmp_tt_pts_gps_mdb_vireendb_pkey; Type: CONSTRAINT; Schema: tmp_imports; Owner: -; Tablespace: 
--

ALTER TABLE ONLY tmp_tt_pts_gps_mdb_vireendb
    ADD CONSTRAINT tmp_tt_pts_gps_mdb_vireendb_pkey PRIMARY KEY (numauto);


SET search_path = public, pg_catalog;

--
-- Name: ancient_workings_the_geom_gist; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ancient_workings_the_geom_gist ON ancient_workings USING gist (the_geom);


--
-- Name: dh_collars_id; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX dh_collars_id ON dh_collars USING btree (id);


--
-- Name: dh_litho_id_depto; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX dh_litho_id_depto ON dh_litho USING btree (id, depto);


--
-- Name: id_depto_dh_mine; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX id_depto_dh_mine ON dh_mineralised_intervals USING btree (id, depto);


--
-- Name: id_depto_dh_tech; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX id_depto_dh_tech ON dh_tech USING btree (id, depto);


--
-- Name: id_preex_sampling; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX id_preex_sampling ON grade_ctrl USING btree (id);


--
-- Name: qc_sampling_sample_id; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX qc_sampling_sample_id ON qc_sampling USING btree (sample_id);


--
-- Name: sampl_index_geoch_ana; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX sampl_index_geoch_ana ON geoch_ana USING btree (sampl_index);


--
-- Name: sampl_index_geoch_sampling; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX sampl_index_geoch_sampling ON geoch_sampling USING btree (sampl_index);


--
-- Name: xyz_preex_sampling; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX xyz_preex_sampling ON grade_ctrl USING btree (x, y, z);


--
-- Name: field_observations_points_del; Type: RULE; Schema: public; Owner: -
--

CREATE RULE field_observations_points_del AS ON DELETE TO field_observations_points DO INSTEAD DELETE FROM field_observations WHERE (field_observations.numauto = old.numauto);


--
-- Name: field_observations_points_ins_geom; Type: RULE; Schema: public; Owner: -
--

CREATE RULE field_observations_points_ins_geom AS ON INSERT TO field_observations_points WHERE (((new.x IS NULL) AND (new.y IS NULL)) AND (new.geomfromewkt IS NOT NULL)) DO INSTEAD INSERT INTO field_observations (opid, year, obs_id, date, waypoint_name, x, y, z, description, code_litho, code_unit, srid, geologist, icon_descr, comments, sample_id, datasource, photos, audio, timestamp_epoch_ms) VALUES (new.opid, new.year, new.obs_id, new.date, new.waypoint_name, st_x(new.geomfromewkt), st_y(new.geomfromewkt), st_z(new.geomfromewkt), new.description, new.code_litho, new.code_unit, new.srid, new.geologist, new.icon_descr, new.comments, new.sample_id, new.datasource, new.photos, new.audio, new.timestamp_epoch_ms);


--
-- Name: field_observations_points_ins_xy; Type: RULE; Schema: public; Owner: -
--

CREATE RULE field_observations_points_ins_xy AS ON INSERT TO field_observations_points WHERE (((new.x IS NOT NULL) AND (new.y IS NOT NULL)) AND (new.geomfromewkt IS NULL)) DO INSTEAD INSERT INTO field_observations (opid, year, obs_id, date, waypoint_name, x, y, z, description, code_litho, code_unit, srid, geologist, icon_descr, comments, sample_id, datasource, photos, audio, timestamp_epoch_ms) VALUES (new.opid, new.year, new.obs_id, new.date, new.waypoint_name, new.x, new.y, new.z, new.description, new.code_litho, new.code_unit, new.srid, new.geologist, new.icon_descr, new.comments, new.sample_id, new.datasource, new.photos, new.audio, new.timestamp_epoch_ms);


--
-- Name: field_observations_points_upd; Type: RULE; Schema: public; Owner: -
--

CREATE RULE field_observations_points_upd AS ON UPDATE TO field_observations_points DO INSTEAD UPDATE field_observations SET opid = new.opid, year = new.year, obs_id = new.obs_id, date = new.date, waypoint_name = new.waypoint_name, x = new.x, y = new.y, z = new.z, description = new.description, code_litho = new.code_litho, code_unit = new.code_unit, srid = new.srid, geologist = new.geologist, icon_descr = new.icon_descr, comments = new.comments, sample_id = new.sample_id, datasource = new.datasource, photos = new.photos, audio = new.audio, timestamp_epoch_ms = new.timestamp_epoch_ms WHERE (field_observations.numauto = old.numauto);


SET search_path = pierre, pg_catalog;

--
-- Name: sections_definition_change; Type: TRIGGER; Schema: pierre; Owner: -
--

CREATE TRIGGER sections_definition_change AFTER INSERT OR UPDATE ON sections_definition FOR EACH ROW EXECUTE PROCEDURE public.generate_cross_sections_array();


SET search_path = public, pg_catalog;

--
-- Name: lab_ana_results_insert; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER lab_ana_results_insert AFTER INSERT ON lab_ana_results FOR EACH STATEMENT EXECUTE PROCEDURE lab_ana_results_sample_id_default_value_num();


--
-- Name: dh_collars_opid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY dh_collars
    ADD CONSTRAINT dh_collars_opid_fkey FOREIGN KEY (opid) REFERENCES operations(opid) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dh_core_boxes_opid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY dh_core_boxes
    ADD CONSTRAINT dh_core_boxes_opid_fkey FOREIGN KEY (opid, id) REFERENCES dh_collars(opid, id) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dh_density_opid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY dh_density
    ADD CONSTRAINT dh_density_opid_fkey FOREIGN KEY (opid, id) REFERENCES dh_collars(opid, id) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dh_devia_opid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY dh_devia
    ADD CONSTRAINT dh_devia_opid_fkey FOREIGN KEY (opid, id) REFERENCES dh_collars(opid, id) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dh_followup_opid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY dh_followup
    ADD CONSTRAINT dh_followup_opid_fkey FOREIGN KEY (opid, id) REFERENCES dh_collars(opid, id) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dh_litho_opid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY dh_litho
    ADD CONSTRAINT dh_litho_opid_fkey FOREIGN KEY (opid, id) REFERENCES dh_collars(opid, id) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dh_mineralised_intervals_opid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY dh_mineralised_intervals
    ADD CONSTRAINT dh_mineralised_intervals_opid_fkey FOREIGN KEY (opid, id) REFERENCES dh_collars(opid, id) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dh_quicklog_opid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY dh_quicklog
    ADD CONSTRAINT dh_quicklog_opid_fkey FOREIGN KEY (opid, id) REFERENCES dh_collars(opid, id) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dh_sampling_bottle_roll_opid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY dh_sampling_bottle_roll
    ADD CONSTRAINT dh_sampling_bottle_roll_opid_fkey FOREIGN KEY (opid, id) REFERENCES dh_collars(opid, id) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dh_sampling_grades_opid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY dh_sampling_grades
    ADD CONSTRAINT dh_sampling_grades_opid_fkey FOREIGN KEY (opid, id) REFERENCES dh_collars(opid, id) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dh_struct_measures_opid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY dh_struct_measures
    ADD CONSTRAINT dh_struct_measures_opid_fkey FOREIGN KEY (opid, id) REFERENCES dh_collars(opid, id) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dh_tech_opid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY dh_tech
    ADD CONSTRAINT dh_tech_opid_fkey FOREIGN KEY (opid, id) REFERENCES dh_collars(opid, id) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dh_thinsections_opid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY dh_thinsections
    ADD CONSTRAINT dh_thinsections_opid_fkey FOREIGN KEY (opid, id) REFERENCES dh_collars(opid, id) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: doc_bdexplo_tables_descriptions_category_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY doc_bdexplo_tables_descriptions
    ADD CONSTRAINT doc_bdexplo_tables_descriptions_category_fkey FOREIGN KEY (category) REFERENCES doc_bdexplo_table_categories(category) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: mag_declination_opid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY mag_declination
    ADD CONSTRAINT mag_declination_opid_fkey FOREIGN KEY (opid) REFERENCES operations(opid) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: occurrences_opid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY occurrences
    ADD CONSTRAINT occurrences_opid_fkey FOREIGN KEY (opid) REFERENCES operations(opid) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: shift_reports_opid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY shift_reports
    ADD CONSTRAINT shift_reports_opid_fkey FOREIGN KEY (opid, id) REFERENCES dh_collars(opid, id) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: public; Type: ACL; Schema: -; Owner: -
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;
GRANT ALL ON SCHEMA public TO data_admin WITH GRANT OPTION;


--
-- Name: box2d_in(cstring); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION box2d_in(cstring) FROM PUBLIC;
REVOKE ALL ON FUNCTION box2d_in(cstring) FROM postgres;
GRANT ALL ON FUNCTION box2d_in(cstring) TO postgres;
GRANT ALL ON FUNCTION box2d_in(cstring) TO PUBLIC;
GRANT ALL ON FUNCTION box2d_in(cstring) TO data_admin WITH GRANT OPTION;


--
-- Name: box2d_out(box2d); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION box2d_out(box2d) FROM PUBLIC;
REVOKE ALL ON FUNCTION box2d_out(box2d) FROM postgres;
GRANT ALL ON FUNCTION box2d_out(box2d) TO postgres;
GRANT ALL ON FUNCTION box2d_out(box2d) TO PUBLIC;
GRANT ALL ON FUNCTION box2d_out(box2d) TO data_admin WITH GRANT OPTION;


--
-- Name: box3d_in(cstring); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION box3d_in(cstring) FROM PUBLIC;
REVOKE ALL ON FUNCTION box3d_in(cstring) FROM postgres;
GRANT ALL ON FUNCTION box3d_in(cstring) TO postgres;
GRANT ALL ON FUNCTION box3d_in(cstring) TO PUBLIC;
GRANT ALL ON FUNCTION box3d_in(cstring) TO data_admin WITH GRANT OPTION;


--
-- Name: box3d_out(box3d); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION box3d_out(box3d) FROM PUBLIC;
REVOKE ALL ON FUNCTION box3d_out(box3d) FROM postgres;
GRANT ALL ON FUNCTION box3d_out(box3d) TO postgres;
GRANT ALL ON FUNCTION box3d_out(box3d) TO PUBLIC;
GRANT ALL ON FUNCTION box3d_out(box3d) TO data_admin WITH GRANT OPTION;


--
-- Name: box3d_extent_in(cstring); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION box3d_extent_in(cstring) FROM PUBLIC;
REVOKE ALL ON FUNCTION box3d_extent_in(cstring) FROM postgres;
GRANT ALL ON FUNCTION box3d_extent_in(cstring) TO postgres;
GRANT ALL ON FUNCTION box3d_extent_in(cstring) TO PUBLIC;
GRANT ALL ON FUNCTION box3d_extent_in(cstring) TO data_admin WITH GRANT OPTION;


--
-- Name: box3d_extent_out(box3d_extent); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION box3d_extent_out(box3d_extent) FROM PUBLIC;
REVOKE ALL ON FUNCTION box3d_extent_out(box3d_extent) FROM postgres;
GRANT ALL ON FUNCTION box3d_extent_out(box3d_extent) TO postgres;
GRANT ALL ON FUNCTION box3d_extent_out(box3d_extent) TO PUBLIC;
GRANT ALL ON FUNCTION box3d_extent_out(box3d_extent) TO data_admin WITH GRANT OPTION;


--
-- Name: chip_in(cstring); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION chip_in(cstring) FROM PUBLIC;
REVOKE ALL ON FUNCTION chip_in(cstring) FROM postgres;
GRANT ALL ON FUNCTION chip_in(cstring) TO postgres;
GRANT ALL ON FUNCTION chip_in(cstring) TO PUBLIC;
GRANT ALL ON FUNCTION chip_in(cstring) TO data_admin WITH GRANT OPTION;


--
-- Name: chip_out(chip); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION chip_out(chip) FROM PUBLIC;
REVOKE ALL ON FUNCTION chip_out(chip) FROM postgres;
GRANT ALL ON FUNCTION chip_out(chip) TO postgres;
GRANT ALL ON FUNCTION chip_out(chip) TO PUBLIC;
GRANT ALL ON FUNCTION chip_out(chip) TO data_admin WITH GRANT OPTION;


--
-- Name: geography_analyze(internal); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geography_analyze(internal) FROM PUBLIC;
REVOKE ALL ON FUNCTION geography_analyze(internal) FROM postgres;
GRANT ALL ON FUNCTION geography_analyze(internal) TO postgres;
GRANT ALL ON FUNCTION geography_analyze(internal) TO PUBLIC;
GRANT ALL ON FUNCTION geography_analyze(internal) TO data_admin WITH GRANT OPTION;


--
-- Name: geography_in(cstring, oid, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geography_in(cstring, oid, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION geography_in(cstring, oid, integer) FROM postgres;
GRANT ALL ON FUNCTION geography_in(cstring, oid, integer) TO postgres;
GRANT ALL ON FUNCTION geography_in(cstring, oid, integer) TO PUBLIC;
GRANT ALL ON FUNCTION geography_in(cstring, oid, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: geography_out(geography); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geography_out(geography) FROM PUBLIC;
REVOKE ALL ON FUNCTION geography_out(geography) FROM postgres;
GRANT ALL ON FUNCTION geography_out(geography) TO postgres;
GRANT ALL ON FUNCTION geography_out(geography) TO PUBLIC;
GRANT ALL ON FUNCTION geography_out(geography) TO data_admin WITH GRANT OPTION;


--
-- Name: geography_typmod_in(cstring[]); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geography_typmod_in(cstring[]) FROM PUBLIC;
REVOKE ALL ON FUNCTION geography_typmod_in(cstring[]) FROM postgres;
GRANT ALL ON FUNCTION geography_typmod_in(cstring[]) TO postgres;
GRANT ALL ON FUNCTION geography_typmod_in(cstring[]) TO PUBLIC;
GRANT ALL ON FUNCTION geography_typmod_in(cstring[]) TO data_admin WITH GRANT OPTION;


--
-- Name: geography_typmod_out(integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geography_typmod_out(integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION geography_typmod_out(integer) FROM postgres;
GRANT ALL ON FUNCTION geography_typmod_out(integer) TO postgres;
GRANT ALL ON FUNCTION geography_typmod_out(integer) TO PUBLIC;
GRANT ALL ON FUNCTION geography_typmod_out(integer) TO data_admin WITH GRANT OPTION;


--
-- Name: geometry_analyze(internal); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geometry_analyze(internal) FROM PUBLIC;
REVOKE ALL ON FUNCTION geometry_analyze(internal) FROM postgres;
GRANT ALL ON FUNCTION geometry_analyze(internal) TO postgres;
GRANT ALL ON FUNCTION geometry_analyze(internal) TO PUBLIC;
GRANT ALL ON FUNCTION geometry_analyze(internal) TO data_admin WITH GRANT OPTION;


--
-- Name: geometry_in(cstring); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geometry_in(cstring) FROM PUBLIC;
REVOKE ALL ON FUNCTION geometry_in(cstring) FROM postgres;
GRANT ALL ON FUNCTION geometry_in(cstring) TO postgres;
GRANT ALL ON FUNCTION geometry_in(cstring) TO PUBLIC;
GRANT ALL ON FUNCTION geometry_in(cstring) TO data_admin WITH GRANT OPTION;


--
-- Name: geometry_out(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geometry_out(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION geometry_out(geometry) FROM postgres;
GRANT ALL ON FUNCTION geometry_out(geometry) TO postgres;
GRANT ALL ON FUNCTION geometry_out(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION geometry_out(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: geometry_recv(internal); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geometry_recv(internal) FROM PUBLIC;
REVOKE ALL ON FUNCTION geometry_recv(internal) FROM postgres;
GRANT ALL ON FUNCTION geometry_recv(internal) TO postgres;
GRANT ALL ON FUNCTION geometry_recv(internal) TO PUBLIC;
GRANT ALL ON FUNCTION geometry_recv(internal) TO data_admin WITH GRANT OPTION;


--
-- Name: geometry_send(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geometry_send(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION geometry_send(geometry) FROM postgres;
GRANT ALL ON FUNCTION geometry_send(geometry) TO postgres;
GRANT ALL ON FUNCTION geometry_send(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION geometry_send(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: gidx_in(cstring); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION gidx_in(cstring) FROM PUBLIC;
REVOKE ALL ON FUNCTION gidx_in(cstring) FROM postgres;
GRANT ALL ON FUNCTION gidx_in(cstring) TO postgres;
GRANT ALL ON FUNCTION gidx_in(cstring) TO PUBLIC;
GRANT ALL ON FUNCTION gidx_in(cstring) TO data_admin WITH GRANT OPTION;


--
-- Name: gidx_out(gidx); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION gidx_out(gidx) FROM PUBLIC;
REVOKE ALL ON FUNCTION gidx_out(gidx) FROM postgres;
GRANT ALL ON FUNCTION gidx_out(gidx) TO postgres;
GRANT ALL ON FUNCTION gidx_out(gidx) TO PUBLIC;
GRANT ALL ON FUNCTION gidx_out(gidx) TO data_admin WITH GRANT OPTION;


--
-- Name: pgis_abs_in(cstring); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION pgis_abs_in(cstring) FROM PUBLIC;
REVOKE ALL ON FUNCTION pgis_abs_in(cstring) FROM postgres;
GRANT ALL ON FUNCTION pgis_abs_in(cstring) TO postgres;
GRANT ALL ON FUNCTION pgis_abs_in(cstring) TO PUBLIC;
GRANT ALL ON FUNCTION pgis_abs_in(cstring) TO data_admin WITH GRANT OPTION;


--
-- Name: pgis_abs_out(pgis_abs); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION pgis_abs_out(pgis_abs) FROM PUBLIC;
REVOKE ALL ON FUNCTION pgis_abs_out(pgis_abs) FROM postgres;
GRANT ALL ON FUNCTION pgis_abs_out(pgis_abs) TO postgres;
GRANT ALL ON FUNCTION pgis_abs_out(pgis_abs) TO PUBLIC;
GRANT ALL ON FUNCTION pgis_abs_out(pgis_abs) TO data_admin WITH GRANT OPTION;


--
-- Name: spheroid_in(cstring); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION spheroid_in(cstring) FROM PUBLIC;
REVOKE ALL ON FUNCTION spheroid_in(cstring) FROM postgres;
GRANT ALL ON FUNCTION spheroid_in(cstring) TO postgres;
GRANT ALL ON FUNCTION spheroid_in(cstring) TO PUBLIC;
GRANT ALL ON FUNCTION spheroid_in(cstring) TO data_admin WITH GRANT OPTION;


--
-- Name: spheroid_out(spheroid); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION spheroid_out(spheroid) FROM PUBLIC;
REVOKE ALL ON FUNCTION spheroid_out(spheroid) FROM postgres;
GRANT ALL ON FUNCTION spheroid_out(spheroid) TO postgres;
GRANT ALL ON FUNCTION spheroid_out(spheroid) TO PUBLIC;
GRANT ALL ON FUNCTION spheroid_out(spheroid) TO data_admin WITH GRANT OPTION;


--
-- Name: _st_asgeojson(integer, geometry, integer, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION _st_asgeojson(integer, geometry, integer, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION _st_asgeojson(integer, geometry, integer, integer) FROM postgres;
GRANT ALL ON FUNCTION _st_asgeojson(integer, geometry, integer, integer) TO postgres;
GRANT ALL ON FUNCTION _st_asgeojson(integer, geometry, integer, integer) TO PUBLIC;
GRANT ALL ON FUNCTION _st_asgeojson(integer, geometry, integer, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: _st_asgeojson(integer, geography, integer, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION _st_asgeojson(integer, geography, integer, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION _st_asgeojson(integer, geography, integer, integer) FROM postgres;
GRANT ALL ON FUNCTION _st_asgeojson(integer, geography, integer, integer) TO postgres;
GRANT ALL ON FUNCTION _st_asgeojson(integer, geography, integer, integer) TO PUBLIC;
GRANT ALL ON FUNCTION _st_asgeojson(integer, geography, integer, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: _st_asgml(integer, geometry, integer, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION _st_asgml(integer, geometry, integer, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION _st_asgml(integer, geometry, integer, integer) FROM postgres;
GRANT ALL ON FUNCTION _st_asgml(integer, geometry, integer, integer) TO postgres;
GRANT ALL ON FUNCTION _st_asgml(integer, geometry, integer, integer) TO PUBLIC;
GRANT ALL ON FUNCTION _st_asgml(integer, geometry, integer, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: _st_asgml(integer, geography, integer, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION _st_asgml(integer, geography, integer, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION _st_asgml(integer, geography, integer, integer) FROM postgres;
GRANT ALL ON FUNCTION _st_asgml(integer, geography, integer, integer) TO postgres;
GRANT ALL ON FUNCTION _st_asgml(integer, geography, integer, integer) TO PUBLIC;
GRANT ALL ON FUNCTION _st_asgml(integer, geography, integer, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: _st_askml(integer, geometry, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION _st_askml(integer, geometry, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION _st_askml(integer, geometry, integer) FROM postgres;
GRANT ALL ON FUNCTION _st_askml(integer, geometry, integer) TO postgres;
GRANT ALL ON FUNCTION _st_askml(integer, geometry, integer) TO PUBLIC;
GRANT ALL ON FUNCTION _st_askml(integer, geometry, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: _st_askml(integer, geography, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION _st_askml(integer, geography, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION _st_askml(integer, geography, integer) FROM postgres;
GRANT ALL ON FUNCTION _st_askml(integer, geography, integer) TO postgres;
GRANT ALL ON FUNCTION _st_askml(integer, geography, integer) TO PUBLIC;
GRANT ALL ON FUNCTION _st_askml(integer, geography, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: _st_bestsrid(geography); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION _st_bestsrid(geography) FROM PUBLIC;
REVOKE ALL ON FUNCTION _st_bestsrid(geography) FROM postgres;
GRANT ALL ON FUNCTION _st_bestsrid(geography) TO postgres;
GRANT ALL ON FUNCTION _st_bestsrid(geography) TO PUBLIC;
GRANT ALL ON FUNCTION _st_bestsrid(geography) TO data_admin WITH GRANT OPTION;


--
-- Name: _st_bestsrid(geography, geography); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION _st_bestsrid(geography, geography) FROM PUBLIC;
REVOKE ALL ON FUNCTION _st_bestsrid(geography, geography) FROM postgres;
GRANT ALL ON FUNCTION _st_bestsrid(geography, geography) TO postgres;
GRANT ALL ON FUNCTION _st_bestsrid(geography, geography) TO PUBLIC;
GRANT ALL ON FUNCTION _st_bestsrid(geography, geography) TO data_admin WITH GRANT OPTION;


--
-- Name: _st_buffer(geometry, double precision, cstring); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION _st_buffer(geometry, double precision, cstring) FROM PUBLIC;
REVOKE ALL ON FUNCTION _st_buffer(geometry, double precision, cstring) FROM postgres;
GRANT ALL ON FUNCTION _st_buffer(geometry, double precision, cstring) TO postgres;
GRANT ALL ON FUNCTION _st_buffer(geometry, double precision, cstring) TO PUBLIC;
GRANT ALL ON FUNCTION _st_buffer(geometry, double precision, cstring) TO data_admin WITH GRANT OPTION;


--
-- Name: _st_contains(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION _st_contains(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION _st_contains(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION _st_contains(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION _st_contains(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION _st_contains(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: _st_containsproperly(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION _st_containsproperly(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION _st_containsproperly(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION _st_containsproperly(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION _st_containsproperly(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION _st_containsproperly(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: _st_coveredby(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION _st_coveredby(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION _st_coveredby(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION _st_coveredby(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION _st_coveredby(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION _st_coveredby(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: _st_covers(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION _st_covers(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION _st_covers(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION _st_covers(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION _st_covers(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION _st_covers(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: _st_covers(geography, geography); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION _st_covers(geography, geography) FROM PUBLIC;
REVOKE ALL ON FUNCTION _st_covers(geography, geography) FROM postgres;
GRANT ALL ON FUNCTION _st_covers(geography, geography) TO postgres;
GRANT ALL ON FUNCTION _st_covers(geography, geography) TO PUBLIC;
GRANT ALL ON FUNCTION _st_covers(geography, geography) TO data_admin WITH GRANT OPTION;


--
-- Name: _st_crosses(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION _st_crosses(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION _st_crosses(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION _st_crosses(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION _st_crosses(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION _st_crosses(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: _st_dfullywithin(geometry, geometry, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION _st_dfullywithin(geometry, geometry, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION _st_dfullywithin(geometry, geometry, double precision) FROM postgres;
GRANT ALL ON FUNCTION _st_dfullywithin(geometry, geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION _st_dfullywithin(geometry, geometry, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION _st_dfullywithin(geometry, geometry, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: _st_distance(geography, geography, double precision, boolean); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION _st_distance(geography, geography, double precision, boolean) FROM PUBLIC;
REVOKE ALL ON FUNCTION _st_distance(geography, geography, double precision, boolean) FROM postgres;
GRANT ALL ON FUNCTION _st_distance(geography, geography, double precision, boolean) TO postgres;
GRANT ALL ON FUNCTION _st_distance(geography, geography, double precision, boolean) TO PUBLIC;
GRANT ALL ON FUNCTION _st_distance(geography, geography, double precision, boolean) TO data_admin WITH GRANT OPTION;


--
-- Name: _st_dumppoints(geometry, integer[]); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION _st_dumppoints(the_geom geometry, cur_path integer[]) FROM PUBLIC;
REVOKE ALL ON FUNCTION _st_dumppoints(the_geom geometry, cur_path integer[]) FROM postgres;
GRANT ALL ON FUNCTION _st_dumppoints(the_geom geometry, cur_path integer[]) TO postgres;
GRANT ALL ON FUNCTION _st_dumppoints(the_geom geometry, cur_path integer[]) TO PUBLIC;
GRANT ALL ON FUNCTION _st_dumppoints(the_geom geometry, cur_path integer[]) TO data_admin WITH GRANT OPTION;


--
-- Name: _st_dwithin(geometry, geometry, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION _st_dwithin(geometry, geometry, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION _st_dwithin(geometry, geometry, double precision) FROM postgres;
GRANT ALL ON FUNCTION _st_dwithin(geometry, geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION _st_dwithin(geometry, geometry, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION _st_dwithin(geometry, geometry, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: _st_dwithin(geography, geography, double precision, boolean); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION _st_dwithin(geography, geography, double precision, boolean) FROM PUBLIC;
REVOKE ALL ON FUNCTION _st_dwithin(geography, geography, double precision, boolean) FROM postgres;
GRANT ALL ON FUNCTION _st_dwithin(geography, geography, double precision, boolean) TO postgres;
GRANT ALL ON FUNCTION _st_dwithin(geography, geography, double precision, boolean) TO PUBLIC;
GRANT ALL ON FUNCTION _st_dwithin(geography, geography, double precision, boolean) TO data_admin WITH GRANT OPTION;


--
-- Name: _st_equals(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION _st_equals(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION _st_equals(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION _st_equals(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION _st_equals(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION _st_equals(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: _st_expand(geography, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION _st_expand(geography, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION _st_expand(geography, double precision) FROM postgres;
GRANT ALL ON FUNCTION _st_expand(geography, double precision) TO postgres;
GRANT ALL ON FUNCTION _st_expand(geography, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION _st_expand(geography, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: _st_intersects(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION _st_intersects(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION _st_intersects(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION _st_intersects(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION _st_intersects(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION _st_intersects(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: _st_linecrossingdirection(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION _st_linecrossingdirection(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION _st_linecrossingdirection(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION _st_linecrossingdirection(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION _st_linecrossingdirection(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION _st_linecrossingdirection(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: _st_longestline(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION _st_longestline(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION _st_longestline(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION _st_longestline(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION _st_longestline(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION _st_longestline(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: _st_maxdistance(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION _st_maxdistance(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION _st_maxdistance(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION _st_maxdistance(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION _st_maxdistance(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION _st_maxdistance(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: _st_orderingequals(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION _st_orderingequals(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION _st_orderingequals(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION _st_orderingequals(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION _st_orderingequals(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION _st_orderingequals(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: _st_overlaps(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION _st_overlaps(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION _st_overlaps(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION _st_overlaps(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION _st_overlaps(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION _st_overlaps(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: _st_pointoutside(geography); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION _st_pointoutside(geography) FROM PUBLIC;
REVOKE ALL ON FUNCTION _st_pointoutside(geography) FROM postgres;
GRANT ALL ON FUNCTION _st_pointoutside(geography) TO postgres;
GRANT ALL ON FUNCTION _st_pointoutside(geography) TO PUBLIC;
GRANT ALL ON FUNCTION _st_pointoutside(geography) TO data_admin WITH GRANT OPTION;


--
-- Name: _st_touches(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION _st_touches(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION _st_touches(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION _st_touches(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION _st_touches(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION _st_touches(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: _st_within(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION _st_within(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION _st_within(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION _st_within(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION _st_within(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION _st_within(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: addauth(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION addauth(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION addauth(text) FROM postgres;
GRANT ALL ON FUNCTION addauth(text) TO postgres;
GRANT ALL ON FUNCTION addauth(text) TO PUBLIC;
GRANT ALL ON FUNCTION addauth(text) TO data_admin WITH GRANT OPTION;


--
-- Name: addbbox(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION addbbox(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION addbbox(geometry) FROM postgres;
GRANT ALL ON FUNCTION addbbox(geometry) TO postgres;
GRANT ALL ON FUNCTION addbbox(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION addbbox(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: addgeometrycolumn(character varying, character varying, integer, character varying, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION addgeometrycolumn(character varying, character varying, integer, character varying, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION addgeometrycolumn(character varying, character varying, integer, character varying, integer) FROM postgres;
GRANT ALL ON FUNCTION addgeometrycolumn(character varying, character varying, integer, character varying, integer) TO postgres;
GRANT ALL ON FUNCTION addgeometrycolumn(character varying, character varying, integer, character varying, integer) TO PUBLIC;
GRANT ALL ON FUNCTION addgeometrycolumn(character varying, character varying, integer, character varying, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: addgeometrycolumn(character varying, character varying, character varying, integer, character varying, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION addgeometrycolumn(character varying, character varying, character varying, integer, character varying, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION addgeometrycolumn(character varying, character varying, character varying, integer, character varying, integer) FROM postgres;
GRANT ALL ON FUNCTION addgeometrycolumn(character varying, character varying, character varying, integer, character varying, integer) TO postgres;
GRANT ALL ON FUNCTION addgeometrycolumn(character varying, character varying, character varying, integer, character varying, integer) TO PUBLIC;
GRANT ALL ON FUNCTION addgeometrycolumn(character varying, character varying, character varying, integer, character varying, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: addgeometrycolumn(character varying, character varying, character varying, character varying, integer, character varying, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION addgeometrycolumn(character varying, character varying, character varying, character varying, integer, character varying, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION addgeometrycolumn(character varying, character varying, character varying, character varying, integer, character varying, integer) FROM postgres;
GRANT ALL ON FUNCTION addgeometrycolumn(character varying, character varying, character varying, character varying, integer, character varying, integer) TO postgres;
GRANT ALL ON FUNCTION addgeometrycolumn(character varying, character varying, character varying, character varying, integer, character varying, integer) TO PUBLIC;
GRANT ALL ON FUNCTION addgeometrycolumn(character varying, character varying, character varying, character varying, integer, character varying, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: addpoint(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION addpoint(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION addpoint(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION addpoint(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION addpoint(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION addpoint(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: addpoint(geometry, geometry, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION addpoint(geometry, geometry, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION addpoint(geometry, geometry, integer) FROM postgres;
GRANT ALL ON FUNCTION addpoint(geometry, geometry, integer) TO postgres;
GRANT ALL ON FUNCTION addpoint(geometry, geometry, integer) TO PUBLIC;
GRANT ALL ON FUNCTION addpoint(geometry, geometry, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision) FROM postgres;
GRANT ALL ON FUNCTION affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision) FROM postgres;
GRANT ALL ON FUNCTION affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: area(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION area(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION area(geometry) FROM postgres;
GRANT ALL ON FUNCTION area(geometry) TO postgres;
GRANT ALL ON FUNCTION area(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION area(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: area2d(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION area2d(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION area2d(geometry) FROM postgres;
GRANT ALL ON FUNCTION area2d(geometry) TO postgres;
GRANT ALL ON FUNCTION area2d(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION area2d(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: asbinary(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION asbinary(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION asbinary(geometry) FROM postgres;
GRANT ALL ON FUNCTION asbinary(geometry) TO postgres;
GRANT ALL ON FUNCTION asbinary(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION asbinary(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: asbinary(geometry, text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION asbinary(geometry, text) FROM PUBLIC;
REVOKE ALL ON FUNCTION asbinary(geometry, text) FROM postgres;
GRANT ALL ON FUNCTION asbinary(geometry, text) TO postgres;
GRANT ALL ON FUNCTION asbinary(geometry, text) TO PUBLIC;
GRANT ALL ON FUNCTION asbinary(geometry, text) TO data_admin WITH GRANT OPTION;


--
-- Name: asewkb(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION asewkb(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION asewkb(geometry) FROM postgres;
GRANT ALL ON FUNCTION asewkb(geometry) TO postgres;
GRANT ALL ON FUNCTION asewkb(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION asewkb(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: asewkb(geometry, text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION asewkb(geometry, text) FROM PUBLIC;
REVOKE ALL ON FUNCTION asewkb(geometry, text) FROM postgres;
GRANT ALL ON FUNCTION asewkb(geometry, text) TO postgres;
GRANT ALL ON FUNCTION asewkb(geometry, text) TO PUBLIC;
GRANT ALL ON FUNCTION asewkb(geometry, text) TO data_admin WITH GRANT OPTION;


--
-- Name: asewkt(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION asewkt(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION asewkt(geometry) FROM postgres;
GRANT ALL ON FUNCTION asewkt(geometry) TO postgres;
GRANT ALL ON FUNCTION asewkt(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION asewkt(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: asgml(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION asgml(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION asgml(geometry) FROM postgres;
GRANT ALL ON FUNCTION asgml(geometry) TO postgres;
GRANT ALL ON FUNCTION asgml(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION asgml(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: asgml(geometry, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION asgml(geometry, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION asgml(geometry, integer) FROM postgres;
GRANT ALL ON FUNCTION asgml(geometry, integer) TO postgres;
GRANT ALL ON FUNCTION asgml(geometry, integer) TO PUBLIC;
GRANT ALL ON FUNCTION asgml(geometry, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: ashexewkb(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION ashexewkb(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION ashexewkb(geometry) FROM postgres;
GRANT ALL ON FUNCTION ashexewkb(geometry) TO postgres;
GRANT ALL ON FUNCTION ashexewkb(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION ashexewkb(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: ashexewkb(geometry, text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION ashexewkb(geometry, text) FROM PUBLIC;
REVOKE ALL ON FUNCTION ashexewkb(geometry, text) FROM postgres;
GRANT ALL ON FUNCTION ashexewkb(geometry, text) TO postgres;
GRANT ALL ON FUNCTION ashexewkb(geometry, text) TO PUBLIC;
GRANT ALL ON FUNCTION ashexewkb(geometry, text) TO data_admin WITH GRANT OPTION;


--
-- Name: askml(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION askml(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION askml(geometry) FROM postgres;
GRANT ALL ON FUNCTION askml(geometry) TO postgres;
GRANT ALL ON FUNCTION askml(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION askml(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: askml(geometry, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION askml(geometry, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION askml(geometry, integer) FROM postgres;
GRANT ALL ON FUNCTION askml(geometry, integer) TO postgres;
GRANT ALL ON FUNCTION askml(geometry, integer) TO PUBLIC;
GRANT ALL ON FUNCTION askml(geometry, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: askml(integer, geometry, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION askml(integer, geometry, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION askml(integer, geometry, integer) FROM postgres;
GRANT ALL ON FUNCTION askml(integer, geometry, integer) TO postgres;
GRANT ALL ON FUNCTION askml(integer, geometry, integer) TO PUBLIC;
GRANT ALL ON FUNCTION askml(integer, geometry, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: assvg(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION assvg(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION assvg(geometry) FROM postgres;
GRANT ALL ON FUNCTION assvg(geometry) TO postgres;
GRANT ALL ON FUNCTION assvg(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION assvg(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: assvg(geometry, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION assvg(geometry, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION assvg(geometry, integer) FROM postgres;
GRANT ALL ON FUNCTION assvg(geometry, integer) TO postgres;
GRANT ALL ON FUNCTION assvg(geometry, integer) TO PUBLIC;
GRANT ALL ON FUNCTION assvg(geometry, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: assvg(geometry, integer, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION assvg(geometry, integer, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION assvg(geometry, integer, integer) FROM postgres;
GRANT ALL ON FUNCTION assvg(geometry, integer, integer) TO postgres;
GRANT ALL ON FUNCTION assvg(geometry, integer, integer) TO PUBLIC;
GRANT ALL ON FUNCTION assvg(geometry, integer, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: astext(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION astext(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION astext(geometry) FROM postgres;
GRANT ALL ON FUNCTION astext(geometry) TO postgres;
GRANT ALL ON FUNCTION astext(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION astext(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: azimuth(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION azimuth(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION azimuth(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION azimuth(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION azimuth(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION azimuth(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: bdmpolyfromtext(text, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION bdmpolyfromtext(text, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION bdmpolyfromtext(text, integer) FROM postgres;
GRANT ALL ON FUNCTION bdmpolyfromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION bdmpolyfromtext(text, integer) TO PUBLIC;
GRANT ALL ON FUNCTION bdmpolyfromtext(text, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: bdpolyfromtext(text, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION bdpolyfromtext(text, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION bdpolyfromtext(text, integer) FROM postgres;
GRANT ALL ON FUNCTION bdpolyfromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION bdpolyfromtext(text, integer) TO PUBLIC;
GRANT ALL ON FUNCTION bdpolyfromtext(text, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: boundary(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION boundary(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION boundary(geometry) FROM postgres;
GRANT ALL ON FUNCTION boundary(geometry) TO postgres;
GRANT ALL ON FUNCTION boundary(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION boundary(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: box(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION box(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION box(geometry) FROM postgres;
GRANT ALL ON FUNCTION box(geometry) TO postgres;
GRANT ALL ON FUNCTION box(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION box(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: box(box3d); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION box(box3d) FROM PUBLIC;
REVOKE ALL ON FUNCTION box(box3d) FROM postgres;
GRANT ALL ON FUNCTION box(box3d) TO postgres;
GRANT ALL ON FUNCTION box(box3d) TO PUBLIC;
GRANT ALL ON FUNCTION box(box3d) TO data_admin WITH GRANT OPTION;


--
-- Name: box2d(box3d_extent); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION box2d(box3d_extent) FROM PUBLIC;
REVOKE ALL ON FUNCTION box2d(box3d_extent) FROM postgres;
GRANT ALL ON FUNCTION box2d(box3d_extent) TO postgres;
GRANT ALL ON FUNCTION box2d(box3d_extent) TO PUBLIC;
GRANT ALL ON FUNCTION box2d(box3d_extent) TO data_admin WITH GRANT OPTION;


--
-- Name: box2d(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION box2d(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION box2d(geometry) FROM postgres;
GRANT ALL ON FUNCTION box2d(geometry) TO postgres;
GRANT ALL ON FUNCTION box2d(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION box2d(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: box2d(box3d); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION box2d(box3d) FROM PUBLIC;
REVOKE ALL ON FUNCTION box2d(box3d) FROM postgres;
GRANT ALL ON FUNCTION box2d(box3d) TO postgres;
GRANT ALL ON FUNCTION box2d(box3d) TO PUBLIC;
GRANT ALL ON FUNCTION box2d(box3d) TO data_admin WITH GRANT OPTION;


--
-- Name: box3d(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION box3d(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION box3d(geometry) FROM postgres;
GRANT ALL ON FUNCTION box3d(geometry) TO postgres;
GRANT ALL ON FUNCTION box3d(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION box3d(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: box3d(box2d); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION box3d(box2d) FROM PUBLIC;
REVOKE ALL ON FUNCTION box3d(box2d) FROM postgres;
GRANT ALL ON FUNCTION box3d(box2d) TO postgres;
GRANT ALL ON FUNCTION box3d(box2d) TO PUBLIC;
GRANT ALL ON FUNCTION box3d(box2d) TO data_admin WITH GRANT OPTION;


--
-- Name: box3d_extent(box3d_extent); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION box3d_extent(box3d_extent) FROM PUBLIC;
REVOKE ALL ON FUNCTION box3d_extent(box3d_extent) FROM postgres;
GRANT ALL ON FUNCTION box3d_extent(box3d_extent) TO postgres;
GRANT ALL ON FUNCTION box3d_extent(box3d_extent) TO PUBLIC;
GRANT ALL ON FUNCTION box3d_extent(box3d_extent) TO data_admin WITH GRANT OPTION;


--
-- Name: box3dtobox(box3d); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION box3dtobox(box3d) FROM PUBLIC;
REVOKE ALL ON FUNCTION box3dtobox(box3d) FROM postgres;
GRANT ALL ON FUNCTION box3dtobox(box3d) TO postgres;
GRANT ALL ON FUNCTION box3dtobox(box3d) TO PUBLIC;
GRANT ALL ON FUNCTION box3dtobox(box3d) TO data_admin WITH GRANT OPTION;


--
-- Name: buffer(geometry, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION buffer(geometry, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION buffer(geometry, double precision) FROM postgres;
GRANT ALL ON FUNCTION buffer(geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION buffer(geometry, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION buffer(geometry, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: buffer(geometry, double precision, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION buffer(geometry, double precision, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION buffer(geometry, double precision, integer) FROM postgres;
GRANT ALL ON FUNCTION buffer(geometry, double precision, integer) TO postgres;
GRANT ALL ON FUNCTION buffer(geometry, double precision, integer) TO PUBLIC;
GRANT ALL ON FUNCTION buffer(geometry, double precision, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: buildarea(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION buildarea(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION buildarea(geometry) FROM postgres;
GRANT ALL ON FUNCTION buildarea(geometry) TO postgres;
GRANT ALL ON FUNCTION buildarea(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION buildarea(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: bytea(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION bytea(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION bytea(geometry) FROM postgres;
GRANT ALL ON FUNCTION bytea(geometry) TO postgres;
GRANT ALL ON FUNCTION bytea(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION bytea(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: centroid(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION centroid(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION centroid(geometry) FROM postgres;
GRANT ALL ON FUNCTION centroid(geometry) TO postgres;
GRANT ALL ON FUNCTION centroid(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION centroid(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: checkauth(text, text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION checkauth(text, text) FROM PUBLIC;
REVOKE ALL ON FUNCTION checkauth(text, text) FROM postgres;
GRANT ALL ON FUNCTION checkauth(text, text) TO postgres;
GRANT ALL ON FUNCTION checkauth(text, text) TO PUBLIC;
GRANT ALL ON FUNCTION checkauth(text, text) TO data_admin WITH GRANT OPTION;


--
-- Name: checkauth(text, text, text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION checkauth(text, text, text) FROM PUBLIC;
REVOKE ALL ON FUNCTION checkauth(text, text, text) FROM postgres;
GRANT ALL ON FUNCTION checkauth(text, text, text) TO postgres;
GRANT ALL ON FUNCTION checkauth(text, text, text) TO PUBLIC;
GRANT ALL ON FUNCTION checkauth(text, text, text) TO data_admin WITH GRANT OPTION;


--
-- Name: checkauthtrigger(); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION checkauthtrigger() FROM PUBLIC;
REVOKE ALL ON FUNCTION checkauthtrigger() FROM postgres;
GRANT ALL ON FUNCTION checkauthtrigger() TO postgres;
GRANT ALL ON FUNCTION checkauthtrigger() TO PUBLIC;
GRANT ALL ON FUNCTION checkauthtrigger() TO data_admin WITH GRANT OPTION;


--
-- Name: collect(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION collect(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION collect(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION collect(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION collect(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION collect(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: combine_bbox(box2d, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION combine_bbox(box2d, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION combine_bbox(box2d, geometry) FROM postgres;
GRANT ALL ON FUNCTION combine_bbox(box2d, geometry) TO postgres;
GRANT ALL ON FUNCTION combine_bbox(box2d, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION combine_bbox(box2d, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: combine_bbox(box3d_extent, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION combine_bbox(box3d_extent, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION combine_bbox(box3d_extent, geometry) FROM postgres;
GRANT ALL ON FUNCTION combine_bbox(box3d_extent, geometry) TO postgres;
GRANT ALL ON FUNCTION combine_bbox(box3d_extent, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION combine_bbox(box3d_extent, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: combine_bbox(box3d, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION combine_bbox(box3d, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION combine_bbox(box3d, geometry) FROM postgres;
GRANT ALL ON FUNCTION combine_bbox(box3d, geometry) TO postgres;
GRANT ALL ON FUNCTION combine_bbox(box3d, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION combine_bbox(box3d, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: compression(chip); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION compression(chip) FROM PUBLIC;
REVOKE ALL ON FUNCTION compression(chip) FROM postgres;
GRANT ALL ON FUNCTION compression(chip) TO postgres;
GRANT ALL ON FUNCTION compression(chip) TO PUBLIC;
GRANT ALL ON FUNCTION compression(chip) TO data_admin WITH GRANT OPTION;


--
-- Name: contains(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION contains(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION contains(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION contains(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION contains(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION contains(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: convexhull(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION convexhull(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION convexhull(geometry) FROM postgres;
GRANT ALL ON FUNCTION convexhull(geometry) TO postgres;
GRANT ALL ON FUNCTION convexhull(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION convexhull(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: crosses(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION crosses(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION crosses(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION crosses(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION crosses(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION crosses(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: datatype(chip); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION datatype(chip) FROM PUBLIC;
REVOKE ALL ON FUNCTION datatype(chip) FROM postgres;
GRANT ALL ON FUNCTION datatype(chip) TO postgres;
GRANT ALL ON FUNCTION datatype(chip) TO PUBLIC;
GRANT ALL ON FUNCTION datatype(chip) TO data_admin WITH GRANT OPTION;


--
-- Name: difference(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION difference(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION difference(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION difference(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION difference(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION difference(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: dimension(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION dimension(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION dimension(geometry) FROM postgres;
GRANT ALL ON FUNCTION dimension(geometry) TO postgres;
GRANT ALL ON FUNCTION dimension(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION dimension(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: disablelongtransactions(); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION disablelongtransactions() FROM PUBLIC;
REVOKE ALL ON FUNCTION disablelongtransactions() FROM postgres;
GRANT ALL ON FUNCTION disablelongtransactions() TO postgres;
GRANT ALL ON FUNCTION disablelongtransactions() TO PUBLIC;
GRANT ALL ON FUNCTION disablelongtransactions() TO data_admin WITH GRANT OPTION;


--
-- Name: disjoint(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION disjoint(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION disjoint(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION disjoint(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION disjoint(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION disjoint(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: distance(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION distance(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION distance(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION distance(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION distance(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION distance(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: distance_sphere(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION distance_sphere(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION distance_sphere(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION distance_sphere(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION distance_sphere(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION distance_sphere(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: distance_spheroid(geometry, geometry, spheroid); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION distance_spheroid(geometry, geometry, spheroid) FROM PUBLIC;
REVOKE ALL ON FUNCTION distance_spheroid(geometry, geometry, spheroid) FROM postgres;
GRANT ALL ON FUNCTION distance_spheroid(geometry, geometry, spheroid) TO postgres;
GRANT ALL ON FUNCTION distance_spheroid(geometry, geometry, spheroid) TO PUBLIC;
GRANT ALL ON FUNCTION distance_spheroid(geometry, geometry, spheroid) TO data_admin WITH GRANT OPTION;


--
-- Name: dropbbox(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION dropbbox(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION dropbbox(geometry) FROM postgres;
GRANT ALL ON FUNCTION dropbbox(geometry) TO postgres;
GRANT ALL ON FUNCTION dropbbox(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION dropbbox(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: dropgeometrycolumn(character varying, character varying); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION dropgeometrycolumn(character varying, character varying) FROM PUBLIC;
REVOKE ALL ON FUNCTION dropgeometrycolumn(character varying, character varying) FROM postgres;
GRANT ALL ON FUNCTION dropgeometrycolumn(character varying, character varying) TO postgres;
GRANT ALL ON FUNCTION dropgeometrycolumn(character varying, character varying) TO PUBLIC;
GRANT ALL ON FUNCTION dropgeometrycolumn(character varying, character varying) TO data_admin WITH GRANT OPTION;


--
-- Name: dropgeometrycolumn(character varying, character varying, character varying); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION dropgeometrycolumn(character varying, character varying, character varying) FROM PUBLIC;
REVOKE ALL ON FUNCTION dropgeometrycolumn(character varying, character varying, character varying) FROM postgres;
GRANT ALL ON FUNCTION dropgeometrycolumn(character varying, character varying, character varying) TO postgres;
GRANT ALL ON FUNCTION dropgeometrycolumn(character varying, character varying, character varying) TO PUBLIC;
GRANT ALL ON FUNCTION dropgeometrycolumn(character varying, character varying, character varying) TO data_admin WITH GRANT OPTION;


--
-- Name: dropgeometrycolumn(character varying, character varying, character varying, character varying); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION dropgeometrycolumn(character varying, character varying, character varying, character varying) FROM PUBLIC;
REVOKE ALL ON FUNCTION dropgeometrycolumn(character varying, character varying, character varying, character varying) FROM postgres;
GRANT ALL ON FUNCTION dropgeometrycolumn(character varying, character varying, character varying, character varying) TO postgres;
GRANT ALL ON FUNCTION dropgeometrycolumn(character varying, character varying, character varying, character varying) TO PUBLIC;
GRANT ALL ON FUNCTION dropgeometrycolumn(character varying, character varying, character varying, character varying) TO data_admin WITH GRANT OPTION;


--
-- Name: dropgeometrytable(character varying); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION dropgeometrytable(character varying) FROM PUBLIC;
REVOKE ALL ON FUNCTION dropgeometrytable(character varying) FROM postgres;
GRANT ALL ON FUNCTION dropgeometrytable(character varying) TO postgres;
GRANT ALL ON FUNCTION dropgeometrytable(character varying) TO PUBLIC;
GRANT ALL ON FUNCTION dropgeometrytable(character varying) TO data_admin WITH GRANT OPTION;


--
-- Name: dropgeometrytable(character varying, character varying); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION dropgeometrytable(character varying, character varying) FROM PUBLIC;
REVOKE ALL ON FUNCTION dropgeometrytable(character varying, character varying) FROM postgres;
GRANT ALL ON FUNCTION dropgeometrytable(character varying, character varying) TO postgres;
GRANT ALL ON FUNCTION dropgeometrytable(character varying, character varying) TO PUBLIC;
GRANT ALL ON FUNCTION dropgeometrytable(character varying, character varying) TO data_admin WITH GRANT OPTION;


--
-- Name: dropgeometrytable(character varying, character varying, character varying); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION dropgeometrytable(character varying, character varying, character varying) FROM PUBLIC;
REVOKE ALL ON FUNCTION dropgeometrytable(character varying, character varying, character varying) FROM postgres;
GRANT ALL ON FUNCTION dropgeometrytable(character varying, character varying, character varying) TO postgres;
GRANT ALL ON FUNCTION dropgeometrytable(character varying, character varying, character varying) TO PUBLIC;
GRANT ALL ON FUNCTION dropgeometrytable(character varying, character varying, character varying) TO data_admin WITH GRANT OPTION;


--
-- Name: dump(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION dump(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION dump(geometry) FROM postgres;
GRANT ALL ON FUNCTION dump(geometry) TO postgres;
GRANT ALL ON FUNCTION dump(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION dump(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: dumprings(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION dumprings(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION dumprings(geometry) FROM postgres;
GRANT ALL ON FUNCTION dumprings(geometry) TO postgres;
GRANT ALL ON FUNCTION dumprings(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION dumprings(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: enablelongtransactions(); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION enablelongtransactions() FROM PUBLIC;
REVOKE ALL ON FUNCTION enablelongtransactions() FROM postgres;
GRANT ALL ON FUNCTION enablelongtransactions() TO postgres;
GRANT ALL ON FUNCTION enablelongtransactions() TO PUBLIC;
GRANT ALL ON FUNCTION enablelongtransactions() TO data_admin WITH GRANT OPTION;


--
-- Name: endpoint(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION endpoint(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION endpoint(geometry) FROM postgres;
GRANT ALL ON FUNCTION endpoint(geometry) TO postgres;
GRANT ALL ON FUNCTION endpoint(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION endpoint(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: envelope(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION envelope(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION envelope(geometry) FROM postgres;
GRANT ALL ON FUNCTION envelope(geometry) TO postgres;
GRANT ALL ON FUNCTION envelope(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION envelope(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: equals(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION equals(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION equals(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION equals(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION equals(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION equals(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: estimated_extent(text, text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION estimated_extent(text, text) FROM PUBLIC;
REVOKE ALL ON FUNCTION estimated_extent(text, text) FROM postgres;
GRANT ALL ON FUNCTION estimated_extent(text, text) TO postgres;
GRANT ALL ON FUNCTION estimated_extent(text, text) TO PUBLIC;
GRANT ALL ON FUNCTION estimated_extent(text, text) TO data_admin WITH GRANT OPTION;


--
-- Name: estimated_extent(text, text, text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION estimated_extent(text, text, text) FROM PUBLIC;
REVOKE ALL ON FUNCTION estimated_extent(text, text, text) FROM postgres;
GRANT ALL ON FUNCTION estimated_extent(text, text, text) TO postgres;
GRANT ALL ON FUNCTION estimated_extent(text, text, text) TO PUBLIC;
GRANT ALL ON FUNCTION estimated_extent(text, text, text) TO data_admin WITH GRANT OPTION;


--
-- Name: expand(box3d, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION expand(box3d, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION expand(box3d, double precision) FROM postgres;
GRANT ALL ON FUNCTION expand(box3d, double precision) TO postgres;
GRANT ALL ON FUNCTION expand(box3d, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION expand(box3d, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: expand(box2d, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION expand(box2d, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION expand(box2d, double precision) FROM postgres;
GRANT ALL ON FUNCTION expand(box2d, double precision) TO postgres;
GRANT ALL ON FUNCTION expand(box2d, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION expand(box2d, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: expand(geometry, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION expand(geometry, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION expand(geometry, double precision) FROM postgres;
GRANT ALL ON FUNCTION expand(geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION expand(geometry, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION expand(geometry, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: exteriorring(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION exteriorring(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION exteriorring(geometry) FROM postgres;
GRANT ALL ON FUNCTION exteriorring(geometry) TO postgres;
GRANT ALL ON FUNCTION exteriorring(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION exteriorring(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: factor(chip); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION factor(chip) FROM PUBLIC;
REVOKE ALL ON FUNCTION factor(chip) FROM postgres;
GRANT ALL ON FUNCTION factor(chip) TO postgres;
GRANT ALL ON FUNCTION factor(chip) TO PUBLIC;
GRANT ALL ON FUNCTION factor(chip) TO data_admin WITH GRANT OPTION;


--
-- Name: find_extent(text, text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION find_extent(text, text) FROM PUBLIC;
REVOKE ALL ON FUNCTION find_extent(text, text) FROM postgres;
GRANT ALL ON FUNCTION find_extent(text, text) TO postgres;
GRANT ALL ON FUNCTION find_extent(text, text) TO PUBLIC;
GRANT ALL ON FUNCTION find_extent(text, text) TO data_admin WITH GRANT OPTION;


--
-- Name: find_extent(text, text, text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION find_extent(text, text, text) FROM PUBLIC;
REVOKE ALL ON FUNCTION find_extent(text, text, text) FROM postgres;
GRANT ALL ON FUNCTION find_extent(text, text, text) TO postgres;
GRANT ALL ON FUNCTION find_extent(text, text, text) TO PUBLIC;
GRANT ALL ON FUNCTION find_extent(text, text, text) TO data_admin WITH GRANT OPTION;


--
-- Name: find_srid(character varying, character varying, character varying); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION find_srid(character varying, character varying, character varying) FROM PUBLIC;
REVOKE ALL ON FUNCTION find_srid(character varying, character varying, character varying) FROM postgres;
GRANT ALL ON FUNCTION find_srid(character varying, character varying, character varying) TO postgres;
GRANT ALL ON FUNCTION find_srid(character varying, character varying, character varying) TO PUBLIC;
GRANT ALL ON FUNCTION find_srid(character varying, character varying, character varying) TO data_admin WITH GRANT OPTION;


--
-- Name: fix_geometry_columns(); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION fix_geometry_columns() FROM PUBLIC;
REVOKE ALL ON FUNCTION fix_geometry_columns() FROM postgres;
GRANT ALL ON FUNCTION fix_geometry_columns() TO postgres;
GRANT ALL ON FUNCTION fix_geometry_columns() TO PUBLIC;
GRANT ALL ON FUNCTION fix_geometry_columns() TO data_admin WITH GRANT OPTION;


--
-- Name: force_2d(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION force_2d(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION force_2d(geometry) FROM postgres;
GRANT ALL ON FUNCTION force_2d(geometry) TO postgres;
GRANT ALL ON FUNCTION force_2d(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION force_2d(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: force_3d(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION force_3d(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION force_3d(geometry) FROM postgres;
GRANT ALL ON FUNCTION force_3d(geometry) TO postgres;
GRANT ALL ON FUNCTION force_3d(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION force_3d(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: force_3dm(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION force_3dm(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION force_3dm(geometry) FROM postgres;
GRANT ALL ON FUNCTION force_3dm(geometry) TO postgres;
GRANT ALL ON FUNCTION force_3dm(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION force_3dm(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: force_3dz(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION force_3dz(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION force_3dz(geometry) FROM postgres;
GRANT ALL ON FUNCTION force_3dz(geometry) TO postgres;
GRANT ALL ON FUNCTION force_3dz(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION force_3dz(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: force_4d(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION force_4d(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION force_4d(geometry) FROM postgres;
GRANT ALL ON FUNCTION force_4d(geometry) TO postgres;
GRANT ALL ON FUNCTION force_4d(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION force_4d(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: force_collection(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION force_collection(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION force_collection(geometry) FROM postgres;
GRANT ALL ON FUNCTION force_collection(geometry) TO postgres;
GRANT ALL ON FUNCTION force_collection(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION force_collection(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: forcerhr(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION forcerhr(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION forcerhr(geometry) FROM postgres;
GRANT ALL ON FUNCTION forcerhr(geometry) TO postgres;
GRANT ALL ON FUNCTION forcerhr(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION forcerhr(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: generate_cross_sections_array(); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION generate_cross_sections_array() FROM PUBLIC;
REVOKE ALL ON FUNCTION generate_cross_sections_array() FROM postgres;
GRANT ALL ON FUNCTION generate_cross_sections_array() TO postgres;
GRANT ALL ON FUNCTION generate_cross_sections_array() TO PUBLIC;
GRANT ALL ON FUNCTION generate_cross_sections_array() TO data_admin WITH GRANT OPTION;


--
-- Name: geography(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geography(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION geography(geometry) FROM postgres;
GRANT ALL ON FUNCTION geography(geometry) TO postgres;
GRANT ALL ON FUNCTION geography(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION geography(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: geography(geography, integer, boolean); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geography(geography, integer, boolean) FROM PUBLIC;
REVOKE ALL ON FUNCTION geography(geography, integer, boolean) FROM postgres;
GRANT ALL ON FUNCTION geography(geography, integer, boolean) TO postgres;
GRANT ALL ON FUNCTION geography(geography, integer, boolean) TO PUBLIC;
GRANT ALL ON FUNCTION geography(geography, integer, boolean) TO data_admin WITH GRANT OPTION;


--
-- Name: geography_cmp(geography, geography); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geography_cmp(geography, geography) FROM PUBLIC;
REVOKE ALL ON FUNCTION geography_cmp(geography, geography) FROM postgres;
GRANT ALL ON FUNCTION geography_cmp(geography, geography) TO postgres;
GRANT ALL ON FUNCTION geography_cmp(geography, geography) TO PUBLIC;
GRANT ALL ON FUNCTION geography_cmp(geography, geography) TO data_admin WITH GRANT OPTION;


--
-- Name: geography_eq(geography, geography); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geography_eq(geography, geography) FROM PUBLIC;
REVOKE ALL ON FUNCTION geography_eq(geography, geography) FROM postgres;
GRANT ALL ON FUNCTION geography_eq(geography, geography) TO postgres;
GRANT ALL ON FUNCTION geography_eq(geography, geography) TO PUBLIC;
GRANT ALL ON FUNCTION geography_eq(geography, geography) TO data_admin WITH GRANT OPTION;


--
-- Name: geography_ge(geography, geography); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geography_ge(geography, geography) FROM PUBLIC;
REVOKE ALL ON FUNCTION geography_ge(geography, geography) FROM postgres;
GRANT ALL ON FUNCTION geography_ge(geography, geography) TO postgres;
GRANT ALL ON FUNCTION geography_ge(geography, geography) TO PUBLIC;
GRANT ALL ON FUNCTION geography_ge(geography, geography) TO data_admin WITH GRANT OPTION;


--
-- Name: geography_gist_compress(internal); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geography_gist_compress(internal) FROM PUBLIC;
REVOKE ALL ON FUNCTION geography_gist_compress(internal) FROM postgres;
GRANT ALL ON FUNCTION geography_gist_compress(internal) TO postgres;
GRANT ALL ON FUNCTION geography_gist_compress(internal) TO PUBLIC;
GRANT ALL ON FUNCTION geography_gist_compress(internal) TO data_admin WITH GRANT OPTION;


--
-- Name: geography_gist_consistent(internal, geometry, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geography_gist_consistent(internal, geometry, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION geography_gist_consistent(internal, geometry, integer) FROM postgres;
GRANT ALL ON FUNCTION geography_gist_consistent(internal, geometry, integer) TO postgres;
GRANT ALL ON FUNCTION geography_gist_consistent(internal, geometry, integer) TO PUBLIC;
GRANT ALL ON FUNCTION geography_gist_consistent(internal, geometry, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: geography_gist_decompress(internal); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geography_gist_decompress(internal) FROM PUBLIC;
REVOKE ALL ON FUNCTION geography_gist_decompress(internal) FROM postgres;
GRANT ALL ON FUNCTION geography_gist_decompress(internal) TO postgres;
GRANT ALL ON FUNCTION geography_gist_decompress(internal) TO PUBLIC;
GRANT ALL ON FUNCTION geography_gist_decompress(internal) TO data_admin WITH GRANT OPTION;


--
-- Name: geography_gist_join_selectivity(internal, oid, internal, smallint); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geography_gist_join_selectivity(internal, oid, internal, smallint) FROM PUBLIC;
REVOKE ALL ON FUNCTION geography_gist_join_selectivity(internal, oid, internal, smallint) FROM postgres;
GRANT ALL ON FUNCTION geography_gist_join_selectivity(internal, oid, internal, smallint) TO postgres;
GRANT ALL ON FUNCTION geography_gist_join_selectivity(internal, oid, internal, smallint) TO PUBLIC;
GRANT ALL ON FUNCTION geography_gist_join_selectivity(internal, oid, internal, smallint) TO data_admin WITH GRANT OPTION;


--
-- Name: geography_gist_penalty(internal, internal, internal); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geography_gist_penalty(internal, internal, internal) FROM PUBLIC;
REVOKE ALL ON FUNCTION geography_gist_penalty(internal, internal, internal) FROM postgres;
GRANT ALL ON FUNCTION geography_gist_penalty(internal, internal, internal) TO postgres;
GRANT ALL ON FUNCTION geography_gist_penalty(internal, internal, internal) TO PUBLIC;
GRANT ALL ON FUNCTION geography_gist_penalty(internal, internal, internal) TO data_admin WITH GRANT OPTION;


--
-- Name: geography_gist_picksplit(internal, internal); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geography_gist_picksplit(internal, internal) FROM PUBLIC;
REVOKE ALL ON FUNCTION geography_gist_picksplit(internal, internal) FROM postgres;
GRANT ALL ON FUNCTION geography_gist_picksplit(internal, internal) TO postgres;
GRANT ALL ON FUNCTION geography_gist_picksplit(internal, internal) TO PUBLIC;
GRANT ALL ON FUNCTION geography_gist_picksplit(internal, internal) TO data_admin WITH GRANT OPTION;


--
-- Name: geography_gist_same(box2d, box2d, internal); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geography_gist_same(box2d, box2d, internal) FROM PUBLIC;
REVOKE ALL ON FUNCTION geography_gist_same(box2d, box2d, internal) FROM postgres;
GRANT ALL ON FUNCTION geography_gist_same(box2d, box2d, internal) TO postgres;
GRANT ALL ON FUNCTION geography_gist_same(box2d, box2d, internal) TO PUBLIC;
GRANT ALL ON FUNCTION geography_gist_same(box2d, box2d, internal) TO data_admin WITH GRANT OPTION;


--
-- Name: geography_gist_selectivity(internal, oid, internal, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geography_gist_selectivity(internal, oid, internal, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION geography_gist_selectivity(internal, oid, internal, integer) FROM postgres;
GRANT ALL ON FUNCTION geography_gist_selectivity(internal, oid, internal, integer) TO postgres;
GRANT ALL ON FUNCTION geography_gist_selectivity(internal, oid, internal, integer) TO PUBLIC;
GRANT ALL ON FUNCTION geography_gist_selectivity(internal, oid, internal, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: geography_gist_union(bytea, internal); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geography_gist_union(bytea, internal) FROM PUBLIC;
REVOKE ALL ON FUNCTION geography_gist_union(bytea, internal) FROM postgres;
GRANT ALL ON FUNCTION geography_gist_union(bytea, internal) TO postgres;
GRANT ALL ON FUNCTION geography_gist_union(bytea, internal) TO PUBLIC;
GRANT ALL ON FUNCTION geography_gist_union(bytea, internal) TO data_admin WITH GRANT OPTION;


--
-- Name: geography_gt(geography, geography); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geography_gt(geography, geography) FROM PUBLIC;
REVOKE ALL ON FUNCTION geography_gt(geography, geography) FROM postgres;
GRANT ALL ON FUNCTION geography_gt(geography, geography) TO postgres;
GRANT ALL ON FUNCTION geography_gt(geography, geography) TO PUBLIC;
GRANT ALL ON FUNCTION geography_gt(geography, geography) TO data_admin WITH GRANT OPTION;


--
-- Name: geography_le(geography, geography); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geography_le(geography, geography) FROM PUBLIC;
REVOKE ALL ON FUNCTION geography_le(geography, geography) FROM postgres;
GRANT ALL ON FUNCTION geography_le(geography, geography) TO postgres;
GRANT ALL ON FUNCTION geography_le(geography, geography) TO PUBLIC;
GRANT ALL ON FUNCTION geography_le(geography, geography) TO data_admin WITH GRANT OPTION;


--
-- Name: geography_lt(geography, geography); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geography_lt(geography, geography) FROM PUBLIC;
REVOKE ALL ON FUNCTION geography_lt(geography, geography) FROM postgres;
GRANT ALL ON FUNCTION geography_lt(geography, geography) TO postgres;
GRANT ALL ON FUNCTION geography_lt(geography, geography) TO PUBLIC;
GRANT ALL ON FUNCTION geography_lt(geography, geography) TO data_admin WITH GRANT OPTION;


--
-- Name: geography_overlaps(geography, geography); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geography_overlaps(geography, geography) FROM PUBLIC;
REVOKE ALL ON FUNCTION geography_overlaps(geography, geography) FROM postgres;
GRANT ALL ON FUNCTION geography_overlaps(geography, geography) TO postgres;
GRANT ALL ON FUNCTION geography_overlaps(geography, geography) TO PUBLIC;
GRANT ALL ON FUNCTION geography_overlaps(geography, geography) TO data_admin WITH GRANT OPTION;


--
-- Name: geography_typmod_dims(integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geography_typmod_dims(integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION geography_typmod_dims(integer) FROM postgres;
GRANT ALL ON FUNCTION geography_typmod_dims(integer) TO postgres;
GRANT ALL ON FUNCTION geography_typmod_dims(integer) TO PUBLIC;
GRANT ALL ON FUNCTION geography_typmod_dims(integer) TO data_admin WITH GRANT OPTION;


--
-- Name: geography_typmod_srid(integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geography_typmod_srid(integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION geography_typmod_srid(integer) FROM postgres;
GRANT ALL ON FUNCTION geography_typmod_srid(integer) TO postgres;
GRANT ALL ON FUNCTION geography_typmod_srid(integer) TO PUBLIC;
GRANT ALL ON FUNCTION geography_typmod_srid(integer) TO data_admin WITH GRANT OPTION;


--
-- Name: geography_typmod_type(integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geography_typmod_type(integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION geography_typmod_type(integer) FROM postgres;
GRANT ALL ON FUNCTION geography_typmod_type(integer) TO postgres;
GRANT ALL ON FUNCTION geography_typmod_type(integer) TO PUBLIC;
GRANT ALL ON FUNCTION geography_typmod_type(integer) TO data_admin WITH GRANT OPTION;


--
-- Name: geomcollfromtext(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geomcollfromtext(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION geomcollfromtext(text) FROM postgres;
GRANT ALL ON FUNCTION geomcollfromtext(text) TO postgres;
GRANT ALL ON FUNCTION geomcollfromtext(text) TO PUBLIC;
GRANT ALL ON FUNCTION geomcollfromtext(text) TO data_admin WITH GRANT OPTION;


--
-- Name: geomcollfromtext(text, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geomcollfromtext(text, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION geomcollfromtext(text, integer) FROM postgres;
GRANT ALL ON FUNCTION geomcollfromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION geomcollfromtext(text, integer) TO PUBLIC;
GRANT ALL ON FUNCTION geomcollfromtext(text, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: geomcollfromwkb(bytea); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geomcollfromwkb(bytea) FROM PUBLIC;
REVOKE ALL ON FUNCTION geomcollfromwkb(bytea) FROM postgres;
GRANT ALL ON FUNCTION geomcollfromwkb(bytea) TO postgres;
GRANT ALL ON FUNCTION geomcollfromwkb(bytea) TO PUBLIC;
GRANT ALL ON FUNCTION geomcollfromwkb(bytea) TO data_admin WITH GRANT OPTION;


--
-- Name: geomcollfromwkb(bytea, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geomcollfromwkb(bytea, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION geomcollfromwkb(bytea, integer) FROM postgres;
GRANT ALL ON FUNCTION geomcollfromwkb(bytea, integer) TO postgres;
GRANT ALL ON FUNCTION geomcollfromwkb(bytea, integer) TO PUBLIC;
GRANT ALL ON FUNCTION geomcollfromwkb(bytea, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: geometry(box3d_extent); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geometry(box3d_extent) FROM PUBLIC;
REVOKE ALL ON FUNCTION geometry(box3d_extent) FROM postgres;
GRANT ALL ON FUNCTION geometry(box3d_extent) TO postgres;
GRANT ALL ON FUNCTION geometry(box3d_extent) TO PUBLIC;
GRANT ALL ON FUNCTION geometry(box3d_extent) TO data_admin WITH GRANT OPTION;


--
-- Name: geometry(box2d); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geometry(box2d) FROM PUBLIC;
REVOKE ALL ON FUNCTION geometry(box2d) FROM postgres;
GRANT ALL ON FUNCTION geometry(box2d) TO postgres;
GRANT ALL ON FUNCTION geometry(box2d) TO PUBLIC;
GRANT ALL ON FUNCTION geometry(box2d) TO data_admin WITH GRANT OPTION;


--
-- Name: geometry(box3d); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geometry(box3d) FROM PUBLIC;
REVOKE ALL ON FUNCTION geometry(box3d) FROM postgres;
GRANT ALL ON FUNCTION geometry(box3d) TO postgres;
GRANT ALL ON FUNCTION geometry(box3d) TO PUBLIC;
GRANT ALL ON FUNCTION geometry(box3d) TO data_admin WITH GRANT OPTION;


--
-- Name: geometry(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geometry(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION geometry(text) FROM postgres;
GRANT ALL ON FUNCTION geometry(text) TO postgres;
GRANT ALL ON FUNCTION geometry(text) TO PUBLIC;
GRANT ALL ON FUNCTION geometry(text) TO data_admin WITH GRANT OPTION;


--
-- Name: geometry(chip); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geometry(chip) FROM PUBLIC;
REVOKE ALL ON FUNCTION geometry(chip) FROM postgres;
GRANT ALL ON FUNCTION geometry(chip) TO postgres;
GRANT ALL ON FUNCTION geometry(chip) TO PUBLIC;
GRANT ALL ON FUNCTION geometry(chip) TO data_admin WITH GRANT OPTION;


--
-- Name: geometry(bytea); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geometry(bytea) FROM PUBLIC;
REVOKE ALL ON FUNCTION geometry(bytea) FROM postgres;
GRANT ALL ON FUNCTION geometry(bytea) TO postgres;
GRANT ALL ON FUNCTION geometry(bytea) TO PUBLIC;
GRANT ALL ON FUNCTION geometry(bytea) TO data_admin WITH GRANT OPTION;


--
-- Name: geometry(geography); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geometry(geography) FROM PUBLIC;
REVOKE ALL ON FUNCTION geometry(geography) FROM postgres;
GRANT ALL ON FUNCTION geometry(geography) TO postgres;
GRANT ALL ON FUNCTION geometry(geography) TO PUBLIC;
GRANT ALL ON FUNCTION geometry(geography) TO data_admin WITH GRANT OPTION;


--
-- Name: geometry_above(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geometry_above(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION geometry_above(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION geometry_above(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION geometry_above(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION geometry_above(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: geometry_below(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geometry_below(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION geometry_below(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION geometry_below(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION geometry_below(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION geometry_below(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: geometry_cmp(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geometry_cmp(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION geometry_cmp(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION geometry_cmp(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION geometry_cmp(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION geometry_cmp(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: geometry_contain(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geometry_contain(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION geometry_contain(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION geometry_contain(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION geometry_contain(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION geometry_contain(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: geometry_contained(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geometry_contained(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION geometry_contained(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION geometry_contained(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION geometry_contained(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION geometry_contained(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: geometry_eq(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geometry_eq(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION geometry_eq(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION geometry_eq(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION geometry_eq(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION geometry_eq(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: geometry_ge(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geometry_ge(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION geometry_ge(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION geometry_ge(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION geometry_ge(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION geometry_ge(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: geometry_gist_joinsel(internal, oid, internal, smallint); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geometry_gist_joinsel(internal, oid, internal, smallint) FROM PUBLIC;
REVOKE ALL ON FUNCTION geometry_gist_joinsel(internal, oid, internal, smallint) FROM postgres;
GRANT ALL ON FUNCTION geometry_gist_joinsel(internal, oid, internal, smallint) TO postgres;
GRANT ALL ON FUNCTION geometry_gist_joinsel(internal, oid, internal, smallint) TO PUBLIC;
GRANT ALL ON FUNCTION geometry_gist_joinsel(internal, oid, internal, smallint) TO data_admin WITH GRANT OPTION;


--
-- Name: geometry_gist_sel(internal, oid, internal, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geometry_gist_sel(internal, oid, internal, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION geometry_gist_sel(internal, oid, internal, integer) FROM postgres;
GRANT ALL ON FUNCTION geometry_gist_sel(internal, oid, internal, integer) TO postgres;
GRANT ALL ON FUNCTION geometry_gist_sel(internal, oid, internal, integer) TO PUBLIC;
GRANT ALL ON FUNCTION geometry_gist_sel(internal, oid, internal, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: geometry_gt(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geometry_gt(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION geometry_gt(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION geometry_gt(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION geometry_gt(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION geometry_gt(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: geometry_le(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geometry_le(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION geometry_le(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION geometry_le(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION geometry_le(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION geometry_le(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: geometry_left(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geometry_left(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION geometry_left(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION geometry_left(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION geometry_left(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION geometry_left(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: geometry_lt(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geometry_lt(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION geometry_lt(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION geometry_lt(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION geometry_lt(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION geometry_lt(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: geometry_overabove(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geometry_overabove(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION geometry_overabove(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION geometry_overabove(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION geometry_overabove(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION geometry_overabove(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: geometry_overbelow(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geometry_overbelow(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION geometry_overbelow(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION geometry_overbelow(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION geometry_overbelow(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION geometry_overbelow(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: geometry_overlap(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geometry_overlap(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION geometry_overlap(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION geometry_overlap(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION geometry_overlap(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION geometry_overlap(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: geometry_overleft(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geometry_overleft(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION geometry_overleft(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION geometry_overleft(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION geometry_overleft(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION geometry_overleft(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: geometry_overright(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geometry_overright(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION geometry_overright(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION geometry_overright(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION geometry_overright(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION geometry_overright(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: geometry_right(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geometry_right(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION geometry_right(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION geometry_right(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION geometry_right(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION geometry_right(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: geometry_same(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geometry_same(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION geometry_same(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION geometry_same(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION geometry_same(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION geometry_same(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: geometry_samebox(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geometry_samebox(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION geometry_samebox(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION geometry_samebox(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION geometry_samebox(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION geometry_samebox(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: geometryfromtext(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geometryfromtext(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION geometryfromtext(text) FROM postgres;
GRANT ALL ON FUNCTION geometryfromtext(text) TO postgres;
GRANT ALL ON FUNCTION geometryfromtext(text) TO PUBLIC;
GRANT ALL ON FUNCTION geometryfromtext(text) TO data_admin WITH GRANT OPTION;


--
-- Name: geometryfromtext(text, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geometryfromtext(text, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION geometryfromtext(text, integer) FROM postgres;
GRANT ALL ON FUNCTION geometryfromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION geometryfromtext(text, integer) TO PUBLIC;
GRANT ALL ON FUNCTION geometryfromtext(text, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: geometryn(geometry, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geometryn(geometry, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION geometryn(geometry, integer) FROM postgres;
GRANT ALL ON FUNCTION geometryn(geometry, integer) TO postgres;
GRANT ALL ON FUNCTION geometryn(geometry, integer) TO PUBLIC;
GRANT ALL ON FUNCTION geometryn(geometry, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: geometrytype(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geometrytype(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION geometrytype(geometry) FROM postgres;
GRANT ALL ON FUNCTION geometrytype(geometry) TO postgres;
GRANT ALL ON FUNCTION geometrytype(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION geometrytype(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: geomfromewkb(bytea); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geomfromewkb(bytea) FROM PUBLIC;
REVOKE ALL ON FUNCTION geomfromewkb(bytea) FROM postgres;
GRANT ALL ON FUNCTION geomfromewkb(bytea) TO postgres;
GRANT ALL ON FUNCTION geomfromewkb(bytea) TO PUBLIC;
GRANT ALL ON FUNCTION geomfromewkb(bytea) TO data_admin WITH GRANT OPTION;


--
-- Name: geomfromewkt(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geomfromewkt(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION geomfromewkt(text) FROM postgres;
GRANT ALL ON FUNCTION geomfromewkt(text) TO postgres;
GRANT ALL ON FUNCTION geomfromewkt(text) TO PUBLIC;
GRANT ALL ON FUNCTION geomfromewkt(text) TO data_admin WITH GRANT OPTION;


--
-- Name: geomfromtext(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geomfromtext(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION geomfromtext(text) FROM postgres;
GRANT ALL ON FUNCTION geomfromtext(text) TO postgres;
GRANT ALL ON FUNCTION geomfromtext(text) TO PUBLIC;
GRANT ALL ON FUNCTION geomfromtext(text) TO data_admin WITH GRANT OPTION;


--
-- Name: geomfromtext(text, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geomfromtext(text, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION geomfromtext(text, integer) FROM postgres;
GRANT ALL ON FUNCTION geomfromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION geomfromtext(text, integer) TO PUBLIC;
GRANT ALL ON FUNCTION geomfromtext(text, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: geomfromwkb(bytea); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geomfromwkb(bytea) FROM PUBLIC;
REVOKE ALL ON FUNCTION geomfromwkb(bytea) FROM postgres;
GRANT ALL ON FUNCTION geomfromwkb(bytea) TO postgres;
GRANT ALL ON FUNCTION geomfromwkb(bytea) TO PUBLIC;
GRANT ALL ON FUNCTION geomfromwkb(bytea) TO data_admin WITH GRANT OPTION;


--
-- Name: geomfromwkb(bytea, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geomfromwkb(bytea, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION geomfromwkb(bytea, integer) FROM postgres;
GRANT ALL ON FUNCTION geomfromwkb(bytea, integer) TO postgres;
GRANT ALL ON FUNCTION geomfromwkb(bytea, integer) TO PUBLIC;
GRANT ALL ON FUNCTION geomfromwkb(bytea, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: geomunion(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION geomunion(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION geomunion(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION geomunion(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION geomunion(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION geomunion(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: get_proj4_from_srid(integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION get_proj4_from_srid(integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION get_proj4_from_srid(integer) FROM postgres;
GRANT ALL ON FUNCTION get_proj4_from_srid(integer) TO postgres;
GRANT ALL ON FUNCTION get_proj4_from_srid(integer) TO PUBLIC;
GRANT ALL ON FUNCTION get_proj4_from_srid(integer) TO data_admin WITH GRANT OPTION;


--
-- Name: getbbox(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION getbbox(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION getbbox(geometry) FROM postgres;
GRANT ALL ON FUNCTION getbbox(geometry) TO postgres;
GRANT ALL ON FUNCTION getbbox(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION getbbox(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: getsrid(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION getsrid(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION getsrid(geometry) FROM postgres;
GRANT ALL ON FUNCTION getsrid(geometry) TO postgres;
GRANT ALL ON FUNCTION getsrid(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION getsrid(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: gettransactionid(); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION gettransactionid() FROM PUBLIC;
REVOKE ALL ON FUNCTION gettransactionid() FROM postgres;
GRANT ALL ON FUNCTION gettransactionid() TO postgres;
GRANT ALL ON FUNCTION gettransactionid() TO PUBLIC;
GRANT ALL ON FUNCTION gettransactionid() TO data_admin WITH GRANT OPTION;


--
-- Name: hasbbox(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION hasbbox(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION hasbbox(geometry) FROM postgres;
GRANT ALL ON FUNCTION hasbbox(geometry) TO postgres;
GRANT ALL ON FUNCTION hasbbox(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION hasbbox(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: height(chip); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION height(chip) FROM PUBLIC;
REVOKE ALL ON FUNCTION height(chip) FROM postgres;
GRANT ALL ON FUNCTION height(chip) TO postgres;
GRANT ALL ON FUNCTION height(chip) TO PUBLIC;
GRANT ALL ON FUNCTION height(chip) TO data_admin WITH GRANT OPTION;


--
-- Name: interiorringn(geometry, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION interiorringn(geometry, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION interiorringn(geometry, integer) FROM postgres;
GRANT ALL ON FUNCTION interiorringn(geometry, integer) TO postgres;
GRANT ALL ON FUNCTION interiorringn(geometry, integer) TO PUBLIC;
GRANT ALL ON FUNCTION interiorringn(geometry, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: intersection(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION intersection(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION intersection(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION intersection(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION intersection(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION intersection(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: intersects(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION intersects(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION intersects(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION intersects(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION intersects(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION intersects(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: isclosed(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION isclosed(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION isclosed(geometry) FROM postgres;
GRANT ALL ON FUNCTION isclosed(geometry) TO postgres;
GRANT ALL ON FUNCTION isclosed(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION isclosed(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: isempty(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION isempty(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION isempty(geometry) FROM postgres;
GRANT ALL ON FUNCTION isempty(geometry) TO postgres;
GRANT ALL ON FUNCTION isempty(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION isempty(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: isring(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION isring(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION isring(geometry) FROM postgres;
GRANT ALL ON FUNCTION isring(geometry) TO postgres;
GRANT ALL ON FUNCTION isring(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION isring(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: issimple(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION issimple(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION issimple(geometry) FROM postgres;
GRANT ALL ON FUNCTION issimple(geometry) TO postgres;
GRANT ALL ON FUNCTION issimple(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION issimple(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: isvalid(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION isvalid(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION isvalid(geometry) FROM postgres;
GRANT ALL ON FUNCTION isvalid(geometry) TO postgres;
GRANT ALL ON FUNCTION isvalid(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION isvalid(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: lab_ana_results_sample_id_default_value_num(); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION lab_ana_results_sample_id_default_value_num() FROM PUBLIC;
REVOKE ALL ON FUNCTION lab_ana_results_sample_id_default_value_num() FROM pierre;
GRANT ALL ON FUNCTION lab_ana_results_sample_id_default_value_num() TO pierre;
GRANT ALL ON FUNCTION lab_ana_results_sample_id_default_value_num() TO PUBLIC;
GRANT ALL ON FUNCTION lab_ana_results_sample_id_default_value_num() TO data_admin WITH GRANT OPTION;


--
-- Name: length(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION length(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION length(geometry) FROM postgres;
GRANT ALL ON FUNCTION length(geometry) TO postgres;
GRANT ALL ON FUNCTION length(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION length(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: length2d(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION length2d(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION length2d(geometry) FROM postgres;
GRANT ALL ON FUNCTION length2d(geometry) TO postgres;
GRANT ALL ON FUNCTION length2d(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION length2d(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: length2d_spheroid(geometry, spheroid); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION length2d_spheroid(geometry, spheroid) FROM PUBLIC;
REVOKE ALL ON FUNCTION length2d_spheroid(geometry, spheroid) FROM postgres;
GRANT ALL ON FUNCTION length2d_spheroid(geometry, spheroid) TO postgres;
GRANT ALL ON FUNCTION length2d_spheroid(geometry, spheroid) TO PUBLIC;
GRANT ALL ON FUNCTION length2d_spheroid(geometry, spheroid) TO data_admin WITH GRANT OPTION;


--
-- Name: length3d(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION length3d(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION length3d(geometry) FROM postgres;
GRANT ALL ON FUNCTION length3d(geometry) TO postgres;
GRANT ALL ON FUNCTION length3d(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION length3d(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: length3d_spheroid(geometry, spheroid); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION length3d_spheroid(geometry, spheroid) FROM PUBLIC;
REVOKE ALL ON FUNCTION length3d_spheroid(geometry, spheroid) FROM postgres;
GRANT ALL ON FUNCTION length3d_spheroid(geometry, spheroid) TO postgres;
GRANT ALL ON FUNCTION length3d_spheroid(geometry, spheroid) TO PUBLIC;
GRANT ALL ON FUNCTION length3d_spheroid(geometry, spheroid) TO data_admin WITH GRANT OPTION;


--
-- Name: length_spheroid(geometry, spheroid); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION length_spheroid(geometry, spheroid) FROM PUBLIC;
REVOKE ALL ON FUNCTION length_spheroid(geometry, spheroid) FROM postgres;
GRANT ALL ON FUNCTION length_spheroid(geometry, spheroid) TO postgres;
GRANT ALL ON FUNCTION length_spheroid(geometry, spheroid) TO PUBLIC;
GRANT ALL ON FUNCTION length_spheroid(geometry, spheroid) TO data_admin WITH GRANT OPTION;


--
-- Name: line_interpolate_point(geometry, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION line_interpolate_point(geometry, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION line_interpolate_point(geometry, double precision) FROM postgres;
GRANT ALL ON FUNCTION line_interpolate_point(geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION line_interpolate_point(geometry, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION line_interpolate_point(geometry, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: line_locate_point(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION line_locate_point(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION line_locate_point(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION line_locate_point(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION line_locate_point(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION line_locate_point(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: line_substring(geometry, double precision, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION line_substring(geometry, double precision, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION line_substring(geometry, double precision, double precision) FROM postgres;
GRANT ALL ON FUNCTION line_substring(geometry, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION line_substring(geometry, double precision, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION line_substring(geometry, double precision, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: linefrommultipoint(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION linefrommultipoint(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION linefrommultipoint(geometry) FROM postgres;
GRANT ALL ON FUNCTION linefrommultipoint(geometry) TO postgres;
GRANT ALL ON FUNCTION linefrommultipoint(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION linefrommultipoint(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: linefromtext(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION linefromtext(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION linefromtext(text) FROM postgres;
GRANT ALL ON FUNCTION linefromtext(text) TO postgres;
GRANT ALL ON FUNCTION linefromtext(text) TO PUBLIC;
GRANT ALL ON FUNCTION linefromtext(text) TO data_admin WITH GRANT OPTION;


--
-- Name: linefromtext(text, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION linefromtext(text, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION linefromtext(text, integer) FROM postgres;
GRANT ALL ON FUNCTION linefromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION linefromtext(text, integer) TO PUBLIC;
GRANT ALL ON FUNCTION linefromtext(text, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: linefromwkb(bytea); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION linefromwkb(bytea) FROM PUBLIC;
REVOKE ALL ON FUNCTION linefromwkb(bytea) FROM postgres;
GRANT ALL ON FUNCTION linefromwkb(bytea) TO postgres;
GRANT ALL ON FUNCTION linefromwkb(bytea) TO PUBLIC;
GRANT ALL ON FUNCTION linefromwkb(bytea) TO data_admin WITH GRANT OPTION;


--
-- Name: linefromwkb(bytea, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION linefromwkb(bytea, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION linefromwkb(bytea, integer) FROM postgres;
GRANT ALL ON FUNCTION linefromwkb(bytea, integer) TO postgres;
GRANT ALL ON FUNCTION linefromwkb(bytea, integer) TO PUBLIC;
GRANT ALL ON FUNCTION linefromwkb(bytea, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: linemerge(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION linemerge(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION linemerge(geometry) FROM postgres;
GRANT ALL ON FUNCTION linemerge(geometry) TO postgres;
GRANT ALL ON FUNCTION linemerge(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION linemerge(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: linestringfromtext(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION linestringfromtext(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION linestringfromtext(text) FROM postgres;
GRANT ALL ON FUNCTION linestringfromtext(text) TO postgres;
GRANT ALL ON FUNCTION linestringfromtext(text) TO PUBLIC;
GRANT ALL ON FUNCTION linestringfromtext(text) TO data_admin WITH GRANT OPTION;


--
-- Name: linestringfromtext(text, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION linestringfromtext(text, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION linestringfromtext(text, integer) FROM postgres;
GRANT ALL ON FUNCTION linestringfromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION linestringfromtext(text, integer) TO PUBLIC;
GRANT ALL ON FUNCTION linestringfromtext(text, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: linestringfromwkb(bytea); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION linestringfromwkb(bytea) FROM PUBLIC;
REVOKE ALL ON FUNCTION linestringfromwkb(bytea) FROM postgres;
GRANT ALL ON FUNCTION linestringfromwkb(bytea) TO postgres;
GRANT ALL ON FUNCTION linestringfromwkb(bytea) TO PUBLIC;
GRANT ALL ON FUNCTION linestringfromwkb(bytea) TO data_admin WITH GRANT OPTION;


--
-- Name: linestringfromwkb(bytea, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION linestringfromwkb(bytea, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION linestringfromwkb(bytea, integer) FROM postgres;
GRANT ALL ON FUNCTION linestringfromwkb(bytea, integer) TO postgres;
GRANT ALL ON FUNCTION linestringfromwkb(bytea, integer) TO PUBLIC;
GRANT ALL ON FUNCTION linestringfromwkb(bytea, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: locate_along_measure(geometry, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION locate_along_measure(geometry, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION locate_along_measure(geometry, double precision) FROM postgres;
GRANT ALL ON FUNCTION locate_along_measure(geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION locate_along_measure(geometry, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION locate_along_measure(geometry, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: locate_between_measures(geometry, double precision, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION locate_between_measures(geometry, double precision, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION locate_between_measures(geometry, double precision, double precision) FROM postgres;
GRANT ALL ON FUNCTION locate_between_measures(geometry, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION locate_between_measures(geometry, double precision, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION locate_between_measures(geometry, double precision, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: lockrow(text, text, text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION lockrow(text, text, text) FROM PUBLIC;
REVOKE ALL ON FUNCTION lockrow(text, text, text) FROM postgres;
GRANT ALL ON FUNCTION lockrow(text, text, text) TO postgres;
GRANT ALL ON FUNCTION lockrow(text, text, text) TO PUBLIC;
GRANT ALL ON FUNCTION lockrow(text, text, text) TO data_admin WITH GRANT OPTION;


--
-- Name: lockrow(text, text, text, text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION lockrow(text, text, text, text) FROM PUBLIC;
REVOKE ALL ON FUNCTION lockrow(text, text, text, text) FROM postgres;
GRANT ALL ON FUNCTION lockrow(text, text, text, text) TO postgres;
GRANT ALL ON FUNCTION lockrow(text, text, text, text) TO PUBLIC;
GRANT ALL ON FUNCTION lockrow(text, text, text, text) TO data_admin WITH GRANT OPTION;


--
-- Name: lockrow(text, text, text, timestamp without time zone); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION lockrow(text, text, text, timestamp without time zone) FROM PUBLIC;
REVOKE ALL ON FUNCTION lockrow(text, text, text, timestamp without time zone) FROM postgres;
GRANT ALL ON FUNCTION lockrow(text, text, text, timestamp without time zone) TO postgres;
GRANT ALL ON FUNCTION lockrow(text, text, text, timestamp without time zone) TO PUBLIC;
GRANT ALL ON FUNCTION lockrow(text, text, text, timestamp without time zone) TO data_admin WITH GRANT OPTION;


--
-- Name: lockrow(text, text, text, text, timestamp without time zone); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION lockrow(text, text, text, text, timestamp without time zone) FROM PUBLIC;
REVOKE ALL ON FUNCTION lockrow(text, text, text, text, timestamp without time zone) FROM postgres;
GRANT ALL ON FUNCTION lockrow(text, text, text, text, timestamp without time zone) TO postgres;
GRANT ALL ON FUNCTION lockrow(text, text, text, text, timestamp without time zone) TO PUBLIC;
GRANT ALL ON FUNCTION lockrow(text, text, text, text, timestamp without time zone) TO data_admin WITH GRANT OPTION;


--
-- Name: longtransactionsenabled(); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION longtransactionsenabled() FROM PUBLIC;
REVOKE ALL ON FUNCTION longtransactionsenabled() FROM postgres;
GRANT ALL ON FUNCTION longtransactionsenabled() TO postgres;
GRANT ALL ON FUNCTION longtransactionsenabled() TO PUBLIC;
GRANT ALL ON FUNCTION longtransactionsenabled() TO data_admin WITH GRANT OPTION;


--
-- Name: lwgeom_gist_compress(internal); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION lwgeom_gist_compress(internal) FROM PUBLIC;
REVOKE ALL ON FUNCTION lwgeom_gist_compress(internal) FROM postgres;
GRANT ALL ON FUNCTION lwgeom_gist_compress(internal) TO postgres;
GRANT ALL ON FUNCTION lwgeom_gist_compress(internal) TO PUBLIC;
GRANT ALL ON FUNCTION lwgeom_gist_compress(internal) TO data_admin WITH GRANT OPTION;


--
-- Name: lwgeom_gist_consistent(internal, geometry, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION lwgeom_gist_consistent(internal, geometry, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION lwgeom_gist_consistent(internal, geometry, integer) FROM postgres;
GRANT ALL ON FUNCTION lwgeom_gist_consistent(internal, geometry, integer) TO postgres;
GRANT ALL ON FUNCTION lwgeom_gist_consistent(internal, geometry, integer) TO PUBLIC;
GRANT ALL ON FUNCTION lwgeom_gist_consistent(internal, geometry, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: lwgeom_gist_decompress(internal); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION lwgeom_gist_decompress(internal) FROM PUBLIC;
REVOKE ALL ON FUNCTION lwgeom_gist_decompress(internal) FROM postgres;
GRANT ALL ON FUNCTION lwgeom_gist_decompress(internal) TO postgres;
GRANT ALL ON FUNCTION lwgeom_gist_decompress(internal) TO PUBLIC;
GRANT ALL ON FUNCTION lwgeom_gist_decompress(internal) TO data_admin WITH GRANT OPTION;


--
-- Name: lwgeom_gist_penalty(internal, internal, internal); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION lwgeom_gist_penalty(internal, internal, internal) FROM PUBLIC;
REVOKE ALL ON FUNCTION lwgeom_gist_penalty(internal, internal, internal) FROM postgres;
GRANT ALL ON FUNCTION lwgeom_gist_penalty(internal, internal, internal) TO postgres;
GRANT ALL ON FUNCTION lwgeom_gist_penalty(internal, internal, internal) TO PUBLIC;
GRANT ALL ON FUNCTION lwgeom_gist_penalty(internal, internal, internal) TO data_admin WITH GRANT OPTION;


--
-- Name: lwgeom_gist_picksplit(internal, internal); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION lwgeom_gist_picksplit(internal, internal) FROM PUBLIC;
REVOKE ALL ON FUNCTION lwgeom_gist_picksplit(internal, internal) FROM postgres;
GRANT ALL ON FUNCTION lwgeom_gist_picksplit(internal, internal) TO postgres;
GRANT ALL ON FUNCTION lwgeom_gist_picksplit(internal, internal) TO PUBLIC;
GRANT ALL ON FUNCTION lwgeom_gist_picksplit(internal, internal) TO data_admin WITH GRANT OPTION;


--
-- Name: lwgeom_gist_same(box2d, box2d, internal); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION lwgeom_gist_same(box2d, box2d, internal) FROM PUBLIC;
REVOKE ALL ON FUNCTION lwgeom_gist_same(box2d, box2d, internal) FROM postgres;
GRANT ALL ON FUNCTION lwgeom_gist_same(box2d, box2d, internal) TO postgres;
GRANT ALL ON FUNCTION lwgeom_gist_same(box2d, box2d, internal) TO PUBLIC;
GRANT ALL ON FUNCTION lwgeom_gist_same(box2d, box2d, internal) TO data_admin WITH GRANT OPTION;


--
-- Name: lwgeom_gist_union(bytea, internal); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION lwgeom_gist_union(bytea, internal) FROM PUBLIC;
REVOKE ALL ON FUNCTION lwgeom_gist_union(bytea, internal) FROM postgres;
GRANT ALL ON FUNCTION lwgeom_gist_union(bytea, internal) TO postgres;
GRANT ALL ON FUNCTION lwgeom_gist_union(bytea, internal) TO PUBLIC;
GRANT ALL ON FUNCTION lwgeom_gist_union(bytea, internal) TO data_admin WITH GRANT OPTION;


--
-- Name: m(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION m(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION m(geometry) FROM postgres;
GRANT ALL ON FUNCTION m(geometry) TO postgres;
GRANT ALL ON FUNCTION m(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION m(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: makebox2d(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION makebox2d(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION makebox2d(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION makebox2d(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION makebox2d(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION makebox2d(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: makebox3d(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION makebox3d(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION makebox3d(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION makebox3d(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION makebox3d(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION makebox3d(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: makeline(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION makeline(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION makeline(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION makeline(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION makeline(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION makeline(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: makeline_garray(geometry[]); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION makeline_garray(geometry[]) FROM PUBLIC;
REVOKE ALL ON FUNCTION makeline_garray(geometry[]) FROM postgres;
GRANT ALL ON FUNCTION makeline_garray(geometry[]) TO postgres;
GRANT ALL ON FUNCTION makeline_garray(geometry[]) TO PUBLIC;
GRANT ALL ON FUNCTION makeline_garray(geometry[]) TO data_admin WITH GRANT OPTION;


--
-- Name: makepoint(double precision, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION makepoint(double precision, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION makepoint(double precision, double precision) FROM postgres;
GRANT ALL ON FUNCTION makepoint(double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION makepoint(double precision, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION makepoint(double precision, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: makepoint(double precision, double precision, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION makepoint(double precision, double precision, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION makepoint(double precision, double precision, double precision) FROM postgres;
GRANT ALL ON FUNCTION makepoint(double precision, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION makepoint(double precision, double precision, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION makepoint(double precision, double precision, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: makepoint(double precision, double precision, double precision, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION makepoint(double precision, double precision, double precision, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION makepoint(double precision, double precision, double precision, double precision) FROM postgres;
GRANT ALL ON FUNCTION makepoint(double precision, double precision, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION makepoint(double precision, double precision, double precision, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION makepoint(double precision, double precision, double precision, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: makepointm(double precision, double precision, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION makepointm(double precision, double precision, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION makepointm(double precision, double precision, double precision) FROM postgres;
GRANT ALL ON FUNCTION makepointm(double precision, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION makepointm(double precision, double precision, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION makepointm(double precision, double precision, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: makepolygon(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION makepolygon(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION makepolygon(geometry) FROM postgres;
GRANT ALL ON FUNCTION makepolygon(geometry) TO postgres;
GRANT ALL ON FUNCTION makepolygon(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION makepolygon(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: makepolygon(geometry, geometry[]); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION makepolygon(geometry, geometry[]) FROM PUBLIC;
REVOKE ALL ON FUNCTION makepolygon(geometry, geometry[]) FROM postgres;
GRANT ALL ON FUNCTION makepolygon(geometry, geometry[]) TO postgres;
GRANT ALL ON FUNCTION makepolygon(geometry, geometry[]) TO PUBLIC;
GRANT ALL ON FUNCTION makepolygon(geometry, geometry[]) TO data_admin WITH GRANT OPTION;


--
-- Name: max_distance(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION max_distance(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION max_distance(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION max_distance(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION max_distance(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION max_distance(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: mem_size(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION mem_size(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION mem_size(geometry) FROM postgres;
GRANT ALL ON FUNCTION mem_size(geometry) TO postgres;
GRANT ALL ON FUNCTION mem_size(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION mem_size(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: mlinefromtext(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION mlinefromtext(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION mlinefromtext(text) FROM postgres;
GRANT ALL ON FUNCTION mlinefromtext(text) TO postgres;
GRANT ALL ON FUNCTION mlinefromtext(text) TO PUBLIC;
GRANT ALL ON FUNCTION mlinefromtext(text) TO data_admin WITH GRANT OPTION;


--
-- Name: mlinefromtext(text, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION mlinefromtext(text, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION mlinefromtext(text, integer) FROM postgres;
GRANT ALL ON FUNCTION mlinefromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION mlinefromtext(text, integer) TO PUBLIC;
GRANT ALL ON FUNCTION mlinefromtext(text, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: mlinefromwkb(bytea); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION mlinefromwkb(bytea) FROM PUBLIC;
REVOKE ALL ON FUNCTION mlinefromwkb(bytea) FROM postgres;
GRANT ALL ON FUNCTION mlinefromwkb(bytea) TO postgres;
GRANT ALL ON FUNCTION mlinefromwkb(bytea) TO PUBLIC;
GRANT ALL ON FUNCTION mlinefromwkb(bytea) TO data_admin WITH GRANT OPTION;


--
-- Name: mlinefromwkb(bytea, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION mlinefromwkb(bytea, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION mlinefromwkb(bytea, integer) FROM postgres;
GRANT ALL ON FUNCTION mlinefromwkb(bytea, integer) TO postgres;
GRANT ALL ON FUNCTION mlinefromwkb(bytea, integer) TO PUBLIC;
GRANT ALL ON FUNCTION mlinefromwkb(bytea, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: mpointfromtext(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION mpointfromtext(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION mpointfromtext(text) FROM postgres;
GRANT ALL ON FUNCTION mpointfromtext(text) TO postgres;
GRANT ALL ON FUNCTION mpointfromtext(text) TO PUBLIC;
GRANT ALL ON FUNCTION mpointfromtext(text) TO data_admin WITH GRANT OPTION;


--
-- Name: mpointfromtext(text, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION mpointfromtext(text, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION mpointfromtext(text, integer) FROM postgres;
GRANT ALL ON FUNCTION mpointfromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION mpointfromtext(text, integer) TO PUBLIC;
GRANT ALL ON FUNCTION mpointfromtext(text, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: mpointfromwkb(bytea); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION mpointfromwkb(bytea) FROM PUBLIC;
REVOKE ALL ON FUNCTION mpointfromwkb(bytea) FROM postgres;
GRANT ALL ON FUNCTION mpointfromwkb(bytea) TO postgres;
GRANT ALL ON FUNCTION mpointfromwkb(bytea) TO PUBLIC;
GRANT ALL ON FUNCTION mpointfromwkb(bytea) TO data_admin WITH GRANT OPTION;


--
-- Name: mpointfromwkb(bytea, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION mpointfromwkb(bytea, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION mpointfromwkb(bytea, integer) FROM postgres;
GRANT ALL ON FUNCTION mpointfromwkb(bytea, integer) TO postgres;
GRANT ALL ON FUNCTION mpointfromwkb(bytea, integer) TO PUBLIC;
GRANT ALL ON FUNCTION mpointfromwkb(bytea, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: mpolyfromtext(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION mpolyfromtext(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION mpolyfromtext(text) FROM postgres;
GRANT ALL ON FUNCTION mpolyfromtext(text) TO postgres;
GRANT ALL ON FUNCTION mpolyfromtext(text) TO PUBLIC;
GRANT ALL ON FUNCTION mpolyfromtext(text) TO data_admin WITH GRANT OPTION;


--
-- Name: mpolyfromtext(text, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION mpolyfromtext(text, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION mpolyfromtext(text, integer) FROM postgres;
GRANT ALL ON FUNCTION mpolyfromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION mpolyfromtext(text, integer) TO PUBLIC;
GRANT ALL ON FUNCTION mpolyfromtext(text, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: mpolyfromwkb(bytea); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION mpolyfromwkb(bytea) FROM PUBLIC;
REVOKE ALL ON FUNCTION mpolyfromwkb(bytea) FROM postgres;
GRANT ALL ON FUNCTION mpolyfromwkb(bytea) TO postgres;
GRANT ALL ON FUNCTION mpolyfromwkb(bytea) TO PUBLIC;
GRANT ALL ON FUNCTION mpolyfromwkb(bytea) TO data_admin WITH GRANT OPTION;


--
-- Name: mpolyfromwkb(bytea, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION mpolyfromwkb(bytea, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION mpolyfromwkb(bytea, integer) FROM postgres;
GRANT ALL ON FUNCTION mpolyfromwkb(bytea, integer) TO postgres;
GRANT ALL ON FUNCTION mpolyfromwkb(bytea, integer) TO PUBLIC;
GRANT ALL ON FUNCTION mpolyfromwkb(bytea, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: multi(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION multi(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION multi(geometry) FROM postgres;
GRANT ALL ON FUNCTION multi(geometry) TO postgres;
GRANT ALL ON FUNCTION multi(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION multi(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: multilinefromwkb(bytea); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION multilinefromwkb(bytea) FROM PUBLIC;
REVOKE ALL ON FUNCTION multilinefromwkb(bytea) FROM postgres;
GRANT ALL ON FUNCTION multilinefromwkb(bytea) TO postgres;
GRANT ALL ON FUNCTION multilinefromwkb(bytea) TO PUBLIC;
GRANT ALL ON FUNCTION multilinefromwkb(bytea) TO data_admin WITH GRANT OPTION;


--
-- Name: multilinefromwkb(bytea, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION multilinefromwkb(bytea, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION multilinefromwkb(bytea, integer) FROM postgres;
GRANT ALL ON FUNCTION multilinefromwkb(bytea, integer) TO postgres;
GRANT ALL ON FUNCTION multilinefromwkb(bytea, integer) TO PUBLIC;
GRANT ALL ON FUNCTION multilinefromwkb(bytea, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: multilinestringfromtext(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION multilinestringfromtext(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION multilinestringfromtext(text) FROM postgres;
GRANT ALL ON FUNCTION multilinestringfromtext(text) TO postgres;
GRANT ALL ON FUNCTION multilinestringfromtext(text) TO PUBLIC;
GRANT ALL ON FUNCTION multilinestringfromtext(text) TO data_admin WITH GRANT OPTION;


--
-- Name: multilinestringfromtext(text, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION multilinestringfromtext(text, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION multilinestringfromtext(text, integer) FROM postgres;
GRANT ALL ON FUNCTION multilinestringfromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION multilinestringfromtext(text, integer) TO PUBLIC;
GRANT ALL ON FUNCTION multilinestringfromtext(text, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: multipointfromtext(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION multipointfromtext(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION multipointfromtext(text) FROM postgres;
GRANT ALL ON FUNCTION multipointfromtext(text) TO postgres;
GRANT ALL ON FUNCTION multipointfromtext(text) TO PUBLIC;
GRANT ALL ON FUNCTION multipointfromtext(text) TO data_admin WITH GRANT OPTION;


--
-- Name: multipointfromtext(text, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION multipointfromtext(text, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION multipointfromtext(text, integer) FROM postgres;
GRANT ALL ON FUNCTION multipointfromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION multipointfromtext(text, integer) TO PUBLIC;
GRANT ALL ON FUNCTION multipointfromtext(text, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: multipointfromwkb(bytea); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION multipointfromwkb(bytea) FROM PUBLIC;
REVOKE ALL ON FUNCTION multipointfromwkb(bytea) FROM postgres;
GRANT ALL ON FUNCTION multipointfromwkb(bytea) TO postgres;
GRANT ALL ON FUNCTION multipointfromwkb(bytea) TO PUBLIC;
GRANT ALL ON FUNCTION multipointfromwkb(bytea) TO data_admin WITH GRANT OPTION;


--
-- Name: multipointfromwkb(bytea, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION multipointfromwkb(bytea, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION multipointfromwkb(bytea, integer) FROM postgres;
GRANT ALL ON FUNCTION multipointfromwkb(bytea, integer) TO postgres;
GRANT ALL ON FUNCTION multipointfromwkb(bytea, integer) TO PUBLIC;
GRANT ALL ON FUNCTION multipointfromwkb(bytea, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: multipolyfromwkb(bytea); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION multipolyfromwkb(bytea) FROM PUBLIC;
REVOKE ALL ON FUNCTION multipolyfromwkb(bytea) FROM postgres;
GRANT ALL ON FUNCTION multipolyfromwkb(bytea) TO postgres;
GRANT ALL ON FUNCTION multipolyfromwkb(bytea) TO PUBLIC;
GRANT ALL ON FUNCTION multipolyfromwkb(bytea) TO data_admin WITH GRANT OPTION;


--
-- Name: multipolyfromwkb(bytea, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION multipolyfromwkb(bytea, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION multipolyfromwkb(bytea, integer) FROM postgres;
GRANT ALL ON FUNCTION multipolyfromwkb(bytea, integer) TO postgres;
GRANT ALL ON FUNCTION multipolyfromwkb(bytea, integer) TO PUBLIC;
GRANT ALL ON FUNCTION multipolyfromwkb(bytea, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: multipolygonfromtext(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION multipolygonfromtext(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION multipolygonfromtext(text) FROM postgres;
GRANT ALL ON FUNCTION multipolygonfromtext(text) TO postgres;
GRANT ALL ON FUNCTION multipolygonfromtext(text) TO PUBLIC;
GRANT ALL ON FUNCTION multipolygonfromtext(text) TO data_admin WITH GRANT OPTION;


--
-- Name: multipolygonfromtext(text, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION multipolygonfromtext(text, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION multipolygonfromtext(text, integer) FROM postgres;
GRANT ALL ON FUNCTION multipolygonfromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION multipolygonfromtext(text, integer) TO PUBLIC;
GRANT ALL ON FUNCTION multipolygonfromtext(text, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: ndims(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION ndims(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION ndims(geometry) FROM postgres;
GRANT ALL ON FUNCTION ndims(geometry) TO postgres;
GRANT ALL ON FUNCTION ndims(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION ndims(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: noop(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION noop(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION noop(geometry) FROM postgres;
GRANT ALL ON FUNCTION noop(geometry) TO postgres;
GRANT ALL ON FUNCTION noop(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION noop(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: npoints(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION npoints(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION npoints(geometry) FROM postgres;
GRANT ALL ON FUNCTION npoints(geometry) TO postgres;
GRANT ALL ON FUNCTION npoints(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION npoints(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: nrings(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION nrings(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION nrings(geometry) FROM postgres;
GRANT ALL ON FUNCTION nrings(geometry) TO postgres;
GRANT ALL ON FUNCTION nrings(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION nrings(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: numgeometries(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION numgeometries(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION numgeometries(geometry) FROM postgres;
GRANT ALL ON FUNCTION numgeometries(geometry) TO postgres;
GRANT ALL ON FUNCTION numgeometries(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION numgeometries(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: numinteriorring(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION numinteriorring(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION numinteriorring(geometry) FROM postgres;
GRANT ALL ON FUNCTION numinteriorring(geometry) TO postgres;
GRANT ALL ON FUNCTION numinteriorring(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION numinteriorring(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: numinteriorrings(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION numinteriorrings(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION numinteriorrings(geometry) FROM postgres;
GRANT ALL ON FUNCTION numinteriorrings(geometry) TO postgres;
GRANT ALL ON FUNCTION numinteriorrings(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION numinteriorrings(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: numpoints(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION numpoints(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION numpoints(geometry) FROM postgres;
GRANT ALL ON FUNCTION numpoints(geometry) TO postgres;
GRANT ALL ON FUNCTION numpoints(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION numpoints(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: overlaps(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION "overlaps"(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION "overlaps"(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION "overlaps"(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION "overlaps"(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION "overlaps"(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: perimeter(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION perimeter(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION perimeter(geometry) FROM postgres;
GRANT ALL ON FUNCTION perimeter(geometry) TO postgres;
GRANT ALL ON FUNCTION perimeter(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION perimeter(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: perimeter2d(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION perimeter2d(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION perimeter2d(geometry) FROM postgres;
GRANT ALL ON FUNCTION perimeter2d(geometry) TO postgres;
GRANT ALL ON FUNCTION perimeter2d(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION perimeter2d(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: perimeter3d(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION perimeter3d(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION perimeter3d(geometry) FROM postgres;
GRANT ALL ON FUNCTION perimeter3d(geometry) TO postgres;
GRANT ALL ON FUNCTION perimeter3d(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION perimeter3d(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: pgis_geometry_accum_finalfn(pgis_abs); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION pgis_geometry_accum_finalfn(pgis_abs) FROM PUBLIC;
REVOKE ALL ON FUNCTION pgis_geometry_accum_finalfn(pgis_abs) FROM postgres;
GRANT ALL ON FUNCTION pgis_geometry_accum_finalfn(pgis_abs) TO postgres;
GRANT ALL ON FUNCTION pgis_geometry_accum_finalfn(pgis_abs) TO PUBLIC;
GRANT ALL ON FUNCTION pgis_geometry_accum_finalfn(pgis_abs) TO data_admin WITH GRANT OPTION;


--
-- Name: pgis_geometry_accum_transfn(pgis_abs, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION pgis_geometry_accum_transfn(pgis_abs, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION pgis_geometry_accum_transfn(pgis_abs, geometry) FROM postgres;
GRANT ALL ON FUNCTION pgis_geometry_accum_transfn(pgis_abs, geometry) TO postgres;
GRANT ALL ON FUNCTION pgis_geometry_accum_transfn(pgis_abs, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION pgis_geometry_accum_transfn(pgis_abs, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: pgis_geometry_collect_finalfn(pgis_abs); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION pgis_geometry_collect_finalfn(pgis_abs) FROM PUBLIC;
REVOKE ALL ON FUNCTION pgis_geometry_collect_finalfn(pgis_abs) FROM postgres;
GRANT ALL ON FUNCTION pgis_geometry_collect_finalfn(pgis_abs) TO postgres;
GRANT ALL ON FUNCTION pgis_geometry_collect_finalfn(pgis_abs) TO PUBLIC;
GRANT ALL ON FUNCTION pgis_geometry_collect_finalfn(pgis_abs) TO data_admin WITH GRANT OPTION;


--
-- Name: pgis_geometry_makeline_finalfn(pgis_abs); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION pgis_geometry_makeline_finalfn(pgis_abs) FROM PUBLIC;
REVOKE ALL ON FUNCTION pgis_geometry_makeline_finalfn(pgis_abs) FROM postgres;
GRANT ALL ON FUNCTION pgis_geometry_makeline_finalfn(pgis_abs) TO postgres;
GRANT ALL ON FUNCTION pgis_geometry_makeline_finalfn(pgis_abs) TO PUBLIC;
GRANT ALL ON FUNCTION pgis_geometry_makeline_finalfn(pgis_abs) TO data_admin WITH GRANT OPTION;


--
-- Name: pgis_geometry_polygonize_finalfn(pgis_abs); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION pgis_geometry_polygonize_finalfn(pgis_abs) FROM PUBLIC;
REVOKE ALL ON FUNCTION pgis_geometry_polygonize_finalfn(pgis_abs) FROM postgres;
GRANT ALL ON FUNCTION pgis_geometry_polygonize_finalfn(pgis_abs) TO postgres;
GRANT ALL ON FUNCTION pgis_geometry_polygonize_finalfn(pgis_abs) TO PUBLIC;
GRANT ALL ON FUNCTION pgis_geometry_polygonize_finalfn(pgis_abs) TO data_admin WITH GRANT OPTION;


--
-- Name: pgis_geometry_union_finalfn(pgis_abs); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION pgis_geometry_union_finalfn(pgis_abs) FROM PUBLIC;
REVOKE ALL ON FUNCTION pgis_geometry_union_finalfn(pgis_abs) FROM postgres;
GRANT ALL ON FUNCTION pgis_geometry_union_finalfn(pgis_abs) TO postgres;
GRANT ALL ON FUNCTION pgis_geometry_union_finalfn(pgis_abs) TO PUBLIC;
GRANT ALL ON FUNCTION pgis_geometry_union_finalfn(pgis_abs) TO data_admin WITH GRANT OPTION;


--
-- Name: point_inside_circle(geometry, double precision, double precision, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION point_inside_circle(geometry, double precision, double precision, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION point_inside_circle(geometry, double precision, double precision, double precision) FROM postgres;
GRANT ALL ON FUNCTION point_inside_circle(geometry, double precision, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION point_inside_circle(geometry, double precision, double precision, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION point_inside_circle(geometry, double precision, double precision, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: pointfromtext(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION pointfromtext(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION pointfromtext(text) FROM postgres;
GRANT ALL ON FUNCTION pointfromtext(text) TO postgres;
GRANT ALL ON FUNCTION pointfromtext(text) TO PUBLIC;
GRANT ALL ON FUNCTION pointfromtext(text) TO data_admin WITH GRANT OPTION;


--
-- Name: pointfromtext(text, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION pointfromtext(text, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION pointfromtext(text, integer) FROM postgres;
GRANT ALL ON FUNCTION pointfromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION pointfromtext(text, integer) TO PUBLIC;
GRANT ALL ON FUNCTION pointfromtext(text, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: pointfromwkb(bytea); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION pointfromwkb(bytea) FROM PUBLIC;
REVOKE ALL ON FUNCTION pointfromwkb(bytea) FROM postgres;
GRANT ALL ON FUNCTION pointfromwkb(bytea) TO postgres;
GRANT ALL ON FUNCTION pointfromwkb(bytea) TO PUBLIC;
GRANT ALL ON FUNCTION pointfromwkb(bytea) TO data_admin WITH GRANT OPTION;


--
-- Name: pointfromwkb(bytea, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION pointfromwkb(bytea, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION pointfromwkb(bytea, integer) FROM postgres;
GRANT ALL ON FUNCTION pointfromwkb(bytea, integer) TO postgres;
GRANT ALL ON FUNCTION pointfromwkb(bytea, integer) TO PUBLIC;
GRANT ALL ON FUNCTION pointfromwkb(bytea, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: pointn(geometry, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION pointn(geometry, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION pointn(geometry, integer) FROM postgres;
GRANT ALL ON FUNCTION pointn(geometry, integer) TO postgres;
GRANT ALL ON FUNCTION pointn(geometry, integer) TO PUBLIC;
GRANT ALL ON FUNCTION pointn(geometry, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: pointonsurface(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION pointonsurface(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION pointonsurface(geometry) FROM postgres;
GRANT ALL ON FUNCTION pointonsurface(geometry) TO postgres;
GRANT ALL ON FUNCTION pointonsurface(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION pointonsurface(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: polyfromtext(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION polyfromtext(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION polyfromtext(text) FROM postgres;
GRANT ALL ON FUNCTION polyfromtext(text) TO postgres;
GRANT ALL ON FUNCTION polyfromtext(text) TO PUBLIC;
GRANT ALL ON FUNCTION polyfromtext(text) TO data_admin WITH GRANT OPTION;


--
-- Name: polyfromtext(text, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION polyfromtext(text, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION polyfromtext(text, integer) FROM postgres;
GRANT ALL ON FUNCTION polyfromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION polyfromtext(text, integer) TO PUBLIC;
GRANT ALL ON FUNCTION polyfromtext(text, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: polyfromwkb(bytea); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION polyfromwkb(bytea) FROM PUBLIC;
REVOKE ALL ON FUNCTION polyfromwkb(bytea) FROM postgres;
GRANT ALL ON FUNCTION polyfromwkb(bytea) TO postgres;
GRANT ALL ON FUNCTION polyfromwkb(bytea) TO PUBLIC;
GRANT ALL ON FUNCTION polyfromwkb(bytea) TO data_admin WITH GRANT OPTION;


--
-- Name: polyfromwkb(bytea, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION polyfromwkb(bytea, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION polyfromwkb(bytea, integer) FROM postgres;
GRANT ALL ON FUNCTION polyfromwkb(bytea, integer) TO postgres;
GRANT ALL ON FUNCTION polyfromwkb(bytea, integer) TO PUBLIC;
GRANT ALL ON FUNCTION polyfromwkb(bytea, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: polygonfromtext(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION polygonfromtext(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION polygonfromtext(text) FROM postgres;
GRANT ALL ON FUNCTION polygonfromtext(text) TO postgres;
GRANT ALL ON FUNCTION polygonfromtext(text) TO PUBLIC;
GRANT ALL ON FUNCTION polygonfromtext(text) TO data_admin WITH GRANT OPTION;


--
-- Name: polygonfromtext(text, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION polygonfromtext(text, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION polygonfromtext(text, integer) FROM postgres;
GRANT ALL ON FUNCTION polygonfromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION polygonfromtext(text, integer) TO PUBLIC;
GRANT ALL ON FUNCTION polygonfromtext(text, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: polygonfromwkb(bytea); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION polygonfromwkb(bytea) FROM PUBLIC;
REVOKE ALL ON FUNCTION polygonfromwkb(bytea) FROM postgres;
GRANT ALL ON FUNCTION polygonfromwkb(bytea) TO postgres;
GRANT ALL ON FUNCTION polygonfromwkb(bytea) TO PUBLIC;
GRANT ALL ON FUNCTION polygonfromwkb(bytea) TO data_admin WITH GRANT OPTION;


--
-- Name: polygonfromwkb(bytea, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION polygonfromwkb(bytea, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION polygonfromwkb(bytea, integer) FROM postgres;
GRANT ALL ON FUNCTION polygonfromwkb(bytea, integer) TO postgres;
GRANT ALL ON FUNCTION polygonfromwkb(bytea, integer) TO PUBLIC;
GRANT ALL ON FUNCTION polygonfromwkb(bytea, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: polygonize_garray(geometry[]); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION polygonize_garray(geometry[]) FROM PUBLIC;
REVOKE ALL ON FUNCTION polygonize_garray(geometry[]) FROM postgres;
GRANT ALL ON FUNCTION polygonize_garray(geometry[]) TO postgres;
GRANT ALL ON FUNCTION polygonize_garray(geometry[]) TO PUBLIC;
GRANT ALL ON FUNCTION polygonize_garray(geometry[]) TO data_admin WITH GRANT OPTION;


--
-- Name: populate_geometry_columns(); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION populate_geometry_columns() FROM PUBLIC;
REVOKE ALL ON FUNCTION populate_geometry_columns() FROM postgres;
GRANT ALL ON FUNCTION populate_geometry_columns() TO postgres;
GRANT ALL ON FUNCTION populate_geometry_columns() TO PUBLIC;
GRANT ALL ON FUNCTION populate_geometry_columns() TO data_admin WITH GRANT OPTION;


--
-- Name: populate_geometry_columns(oid); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION populate_geometry_columns(tbl_oid oid) FROM PUBLIC;
REVOKE ALL ON FUNCTION populate_geometry_columns(tbl_oid oid) FROM postgres;
GRANT ALL ON FUNCTION populate_geometry_columns(tbl_oid oid) TO postgres;
GRANT ALL ON FUNCTION populate_geometry_columns(tbl_oid oid) TO PUBLIC;
GRANT ALL ON FUNCTION populate_geometry_columns(tbl_oid oid) TO data_admin WITH GRANT OPTION;


--
-- Name: postgis_addbbox(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION postgis_addbbox(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION postgis_addbbox(geometry) FROM postgres;
GRANT ALL ON FUNCTION postgis_addbbox(geometry) TO postgres;
GRANT ALL ON FUNCTION postgis_addbbox(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION postgis_addbbox(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: postgis_cache_bbox(); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION postgis_cache_bbox() FROM PUBLIC;
REVOKE ALL ON FUNCTION postgis_cache_bbox() FROM postgres;
GRANT ALL ON FUNCTION postgis_cache_bbox() TO postgres;
GRANT ALL ON FUNCTION postgis_cache_bbox() TO PUBLIC;
GRANT ALL ON FUNCTION postgis_cache_bbox() TO data_admin WITH GRANT OPTION;


--
-- Name: postgis_dropbbox(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION postgis_dropbbox(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION postgis_dropbbox(geometry) FROM postgres;
GRANT ALL ON FUNCTION postgis_dropbbox(geometry) TO postgres;
GRANT ALL ON FUNCTION postgis_dropbbox(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION postgis_dropbbox(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: postgis_full_version(); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION postgis_full_version() FROM PUBLIC;
REVOKE ALL ON FUNCTION postgis_full_version() FROM postgres;
GRANT ALL ON FUNCTION postgis_full_version() TO postgres;
GRANT ALL ON FUNCTION postgis_full_version() TO PUBLIC;
GRANT ALL ON FUNCTION postgis_full_version() TO data_admin WITH GRANT OPTION;


--
-- Name: postgis_geos_version(); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION postgis_geos_version() FROM PUBLIC;
REVOKE ALL ON FUNCTION postgis_geos_version() FROM postgres;
GRANT ALL ON FUNCTION postgis_geos_version() TO postgres;
GRANT ALL ON FUNCTION postgis_geos_version() TO PUBLIC;
GRANT ALL ON FUNCTION postgis_geos_version() TO data_admin WITH GRANT OPTION;


--
-- Name: postgis_getbbox(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION postgis_getbbox(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION postgis_getbbox(geometry) FROM postgres;
GRANT ALL ON FUNCTION postgis_getbbox(geometry) TO postgres;
GRANT ALL ON FUNCTION postgis_getbbox(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION postgis_getbbox(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: postgis_gist_joinsel(internal, oid, internal, smallint); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION postgis_gist_joinsel(internal, oid, internal, smallint) FROM PUBLIC;
REVOKE ALL ON FUNCTION postgis_gist_joinsel(internal, oid, internal, smallint) FROM postgres;
GRANT ALL ON FUNCTION postgis_gist_joinsel(internal, oid, internal, smallint) TO postgres;
GRANT ALL ON FUNCTION postgis_gist_joinsel(internal, oid, internal, smallint) TO PUBLIC;
GRANT ALL ON FUNCTION postgis_gist_joinsel(internal, oid, internal, smallint) TO data_admin WITH GRANT OPTION;


--
-- Name: postgis_gist_sel(internal, oid, internal, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION postgis_gist_sel(internal, oid, internal, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION postgis_gist_sel(internal, oid, internal, integer) FROM postgres;
GRANT ALL ON FUNCTION postgis_gist_sel(internal, oid, internal, integer) TO postgres;
GRANT ALL ON FUNCTION postgis_gist_sel(internal, oid, internal, integer) TO PUBLIC;
GRANT ALL ON FUNCTION postgis_gist_sel(internal, oid, internal, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: postgis_hasbbox(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION postgis_hasbbox(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION postgis_hasbbox(geometry) FROM postgres;
GRANT ALL ON FUNCTION postgis_hasbbox(geometry) TO postgres;
GRANT ALL ON FUNCTION postgis_hasbbox(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION postgis_hasbbox(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: postgis_lib_build_date(); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION postgis_lib_build_date() FROM PUBLIC;
REVOKE ALL ON FUNCTION postgis_lib_build_date() FROM postgres;
GRANT ALL ON FUNCTION postgis_lib_build_date() TO postgres;
GRANT ALL ON FUNCTION postgis_lib_build_date() TO PUBLIC;
GRANT ALL ON FUNCTION postgis_lib_build_date() TO data_admin WITH GRANT OPTION;


--
-- Name: postgis_lib_version(); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION postgis_lib_version() FROM PUBLIC;
REVOKE ALL ON FUNCTION postgis_lib_version() FROM postgres;
GRANT ALL ON FUNCTION postgis_lib_version() TO postgres;
GRANT ALL ON FUNCTION postgis_lib_version() TO PUBLIC;
GRANT ALL ON FUNCTION postgis_lib_version() TO data_admin WITH GRANT OPTION;


--
-- Name: postgis_libxml_version(); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION postgis_libxml_version() FROM PUBLIC;
REVOKE ALL ON FUNCTION postgis_libxml_version() FROM postgres;
GRANT ALL ON FUNCTION postgis_libxml_version() TO postgres;
GRANT ALL ON FUNCTION postgis_libxml_version() TO PUBLIC;
GRANT ALL ON FUNCTION postgis_libxml_version() TO data_admin WITH GRANT OPTION;


--
-- Name: postgis_noop(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION postgis_noop(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION postgis_noop(geometry) FROM postgres;
GRANT ALL ON FUNCTION postgis_noop(geometry) TO postgres;
GRANT ALL ON FUNCTION postgis_noop(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION postgis_noop(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: postgis_proj_version(); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION postgis_proj_version() FROM PUBLIC;
REVOKE ALL ON FUNCTION postgis_proj_version() FROM postgres;
GRANT ALL ON FUNCTION postgis_proj_version() TO postgres;
GRANT ALL ON FUNCTION postgis_proj_version() TO PUBLIC;
GRANT ALL ON FUNCTION postgis_proj_version() TO data_admin WITH GRANT OPTION;


--
-- Name: postgis_scripts_build_date(); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION postgis_scripts_build_date() FROM PUBLIC;
REVOKE ALL ON FUNCTION postgis_scripts_build_date() FROM postgres;
GRANT ALL ON FUNCTION postgis_scripts_build_date() TO postgres;
GRANT ALL ON FUNCTION postgis_scripts_build_date() TO PUBLIC;
GRANT ALL ON FUNCTION postgis_scripts_build_date() TO data_admin WITH GRANT OPTION;


--
-- Name: postgis_scripts_installed(); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION postgis_scripts_installed() FROM PUBLIC;
REVOKE ALL ON FUNCTION postgis_scripts_installed() FROM postgres;
GRANT ALL ON FUNCTION postgis_scripts_installed() TO postgres;
GRANT ALL ON FUNCTION postgis_scripts_installed() TO PUBLIC;
GRANT ALL ON FUNCTION postgis_scripts_installed() TO data_admin WITH GRANT OPTION;


--
-- Name: postgis_scripts_released(); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION postgis_scripts_released() FROM PUBLIC;
REVOKE ALL ON FUNCTION postgis_scripts_released() FROM postgres;
GRANT ALL ON FUNCTION postgis_scripts_released() TO postgres;
GRANT ALL ON FUNCTION postgis_scripts_released() TO PUBLIC;
GRANT ALL ON FUNCTION postgis_scripts_released() TO data_admin WITH GRANT OPTION;


--
-- Name: postgis_transform_geometry(geometry, text, text, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION postgis_transform_geometry(geometry, text, text, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION postgis_transform_geometry(geometry, text, text, integer) FROM postgres;
GRANT ALL ON FUNCTION postgis_transform_geometry(geometry, text, text, integer) TO postgres;
GRANT ALL ON FUNCTION postgis_transform_geometry(geometry, text, text, integer) TO PUBLIC;
GRANT ALL ON FUNCTION postgis_transform_geometry(geometry, text, text, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: postgis_uses_stats(); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION postgis_uses_stats() FROM PUBLIC;
REVOKE ALL ON FUNCTION postgis_uses_stats() FROM postgres;
GRANT ALL ON FUNCTION postgis_uses_stats() TO postgres;
GRANT ALL ON FUNCTION postgis_uses_stats() TO PUBLIC;
GRANT ALL ON FUNCTION postgis_uses_stats() TO data_admin WITH GRANT OPTION;


--
-- Name: postgis_version(); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION postgis_version() FROM PUBLIC;
REVOKE ALL ON FUNCTION postgis_version() FROM postgres;
GRANT ALL ON FUNCTION postgis_version() TO postgres;
GRANT ALL ON FUNCTION postgis_version() TO PUBLIC;
GRANT ALL ON FUNCTION postgis_version() TO data_admin WITH GRANT OPTION;


--
-- Name: probe_geometry_columns(); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION probe_geometry_columns() FROM PUBLIC;
REVOKE ALL ON FUNCTION probe_geometry_columns() FROM postgres;
GRANT ALL ON FUNCTION probe_geometry_columns() TO postgres;
GRANT ALL ON FUNCTION probe_geometry_columns() TO PUBLIC;
GRANT ALL ON FUNCTION probe_geometry_columns() TO data_admin WITH GRANT OPTION;


--
-- Name: relate(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION relate(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION relate(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION relate(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION relate(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION relate(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: relate(geometry, geometry, text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION relate(geometry, geometry, text) FROM PUBLIC;
REVOKE ALL ON FUNCTION relate(geometry, geometry, text) FROM postgres;
GRANT ALL ON FUNCTION relate(geometry, geometry, text) TO postgres;
GRANT ALL ON FUNCTION relate(geometry, geometry, text) TO PUBLIC;
GRANT ALL ON FUNCTION relate(geometry, geometry, text) TO data_admin WITH GRANT OPTION;


--
-- Name: removepoint(geometry, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION removepoint(geometry, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION removepoint(geometry, integer) FROM postgres;
GRANT ALL ON FUNCTION removepoint(geometry, integer) TO postgres;
GRANT ALL ON FUNCTION removepoint(geometry, integer) TO PUBLIC;
GRANT ALL ON FUNCTION removepoint(geometry, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: rename_geometry_table_constraints(); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION rename_geometry_table_constraints() FROM PUBLIC;
REVOKE ALL ON FUNCTION rename_geometry_table_constraints() FROM postgres;
GRANT ALL ON FUNCTION rename_geometry_table_constraints() TO postgres;
GRANT ALL ON FUNCTION rename_geometry_table_constraints() TO PUBLIC;
GRANT ALL ON FUNCTION rename_geometry_table_constraints() TO data_admin WITH GRANT OPTION;


--
-- Name: reverse(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION reverse(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION reverse(geometry) FROM postgres;
GRANT ALL ON FUNCTION reverse(geometry) TO postgres;
GRANT ALL ON FUNCTION reverse(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION reverse(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: rotate(geometry, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION rotate(geometry, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION rotate(geometry, double precision) FROM postgres;
GRANT ALL ON FUNCTION rotate(geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION rotate(geometry, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION rotate(geometry, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: rotatex(geometry, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION rotatex(geometry, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION rotatex(geometry, double precision) FROM postgres;
GRANT ALL ON FUNCTION rotatex(geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION rotatex(geometry, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION rotatex(geometry, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: rotatey(geometry, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION rotatey(geometry, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION rotatey(geometry, double precision) FROM postgres;
GRANT ALL ON FUNCTION rotatey(geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION rotatey(geometry, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION rotatey(geometry, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: rotatez(geometry, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION rotatez(geometry, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION rotatez(geometry, double precision) FROM postgres;
GRANT ALL ON FUNCTION rotatez(geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION rotatez(geometry, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION rotatez(geometry, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: scale(geometry, double precision, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION scale(geometry, double precision, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION scale(geometry, double precision, double precision) FROM postgres;
GRANT ALL ON FUNCTION scale(geometry, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION scale(geometry, double precision, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION scale(geometry, double precision, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: scale(geometry, double precision, double precision, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION scale(geometry, double precision, double precision, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION scale(geometry, double precision, double precision, double precision) FROM postgres;
GRANT ALL ON FUNCTION scale(geometry, double precision, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION scale(geometry, double precision, double precision, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION scale(geometry, double precision, double precision, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: se_envelopesintersect(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION se_envelopesintersect(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION se_envelopesintersect(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION se_envelopesintersect(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION se_envelopesintersect(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION se_envelopesintersect(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: se_is3d(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION se_is3d(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION se_is3d(geometry) FROM postgres;
GRANT ALL ON FUNCTION se_is3d(geometry) TO postgres;
GRANT ALL ON FUNCTION se_is3d(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION se_is3d(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: se_ismeasured(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION se_ismeasured(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION se_ismeasured(geometry) FROM postgres;
GRANT ALL ON FUNCTION se_ismeasured(geometry) TO postgres;
GRANT ALL ON FUNCTION se_ismeasured(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION se_ismeasured(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: se_locatealong(geometry, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION se_locatealong(geometry, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION se_locatealong(geometry, double precision) FROM postgres;
GRANT ALL ON FUNCTION se_locatealong(geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION se_locatealong(geometry, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION se_locatealong(geometry, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: se_locatebetween(geometry, double precision, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION se_locatebetween(geometry, double precision, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION se_locatebetween(geometry, double precision, double precision) FROM postgres;
GRANT ALL ON FUNCTION se_locatebetween(geometry, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION se_locatebetween(geometry, double precision, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION se_locatebetween(geometry, double precision, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: se_m(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION se_m(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION se_m(geometry) FROM postgres;
GRANT ALL ON FUNCTION se_m(geometry) TO postgres;
GRANT ALL ON FUNCTION se_m(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION se_m(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: se_z(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION se_z(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION se_z(geometry) FROM postgres;
GRANT ALL ON FUNCTION se_z(geometry) TO postgres;
GRANT ALL ON FUNCTION se_z(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION se_z(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: segmentize(geometry, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION segmentize(geometry, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION segmentize(geometry, double precision) FROM postgres;
GRANT ALL ON FUNCTION segmentize(geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION segmentize(geometry, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION segmentize(geometry, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: setfactor(chip, real); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION setfactor(chip, real) FROM PUBLIC;
REVOKE ALL ON FUNCTION setfactor(chip, real) FROM postgres;
GRANT ALL ON FUNCTION setfactor(chip, real) TO postgres;
GRANT ALL ON FUNCTION setfactor(chip, real) TO PUBLIC;
GRANT ALL ON FUNCTION setfactor(chip, real) TO data_admin WITH GRANT OPTION;


--
-- Name: setpoint(geometry, integer, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION setpoint(geometry, integer, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION setpoint(geometry, integer, geometry) FROM postgres;
GRANT ALL ON FUNCTION setpoint(geometry, integer, geometry) TO postgres;
GRANT ALL ON FUNCTION setpoint(geometry, integer, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION setpoint(geometry, integer, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: setsrid(chip, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION setsrid(chip, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION setsrid(chip, integer) FROM postgres;
GRANT ALL ON FUNCTION setsrid(chip, integer) TO postgres;
GRANT ALL ON FUNCTION setsrid(chip, integer) TO PUBLIC;
GRANT ALL ON FUNCTION setsrid(chip, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: setsrid(geometry, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION setsrid(geometry, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION setsrid(geometry, integer) FROM postgres;
GRANT ALL ON FUNCTION setsrid(geometry, integer) TO postgres;
GRANT ALL ON FUNCTION setsrid(geometry, integer) TO PUBLIC;
GRANT ALL ON FUNCTION setsrid(geometry, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: shift_longitude(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION shift_longitude(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION shift_longitude(geometry) FROM postgres;
GRANT ALL ON FUNCTION shift_longitude(geometry) TO postgres;
GRANT ALL ON FUNCTION shift_longitude(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION shift_longitude(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: simplify(geometry, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION simplify(geometry, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION simplify(geometry, double precision) FROM postgres;
GRANT ALL ON FUNCTION simplify(geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION simplify(geometry, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION simplify(geometry, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: snaptogrid(geometry, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION snaptogrid(geometry, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION snaptogrid(geometry, double precision) FROM postgres;
GRANT ALL ON FUNCTION snaptogrid(geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION snaptogrid(geometry, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION snaptogrid(geometry, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: snaptogrid(geometry, double precision, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION snaptogrid(geometry, double precision, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION snaptogrid(geometry, double precision, double precision) FROM postgres;
GRANT ALL ON FUNCTION snaptogrid(geometry, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION snaptogrid(geometry, double precision, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION snaptogrid(geometry, double precision, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: snaptogrid(geometry, double precision, double precision, double precision, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION snaptogrid(geometry, double precision, double precision, double precision, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION snaptogrid(geometry, double precision, double precision, double precision, double precision) FROM postgres;
GRANT ALL ON FUNCTION snaptogrid(geometry, double precision, double precision, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION snaptogrid(geometry, double precision, double precision, double precision, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION snaptogrid(geometry, double precision, double precision, double precision, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: snaptogrid(geometry, geometry, double precision, double precision, double precision, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION snaptogrid(geometry, geometry, double precision, double precision, double precision, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION snaptogrid(geometry, geometry, double precision, double precision, double precision, double precision) FROM postgres;
GRANT ALL ON FUNCTION snaptogrid(geometry, geometry, double precision, double precision, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION snaptogrid(geometry, geometry, double precision, double precision, double precision, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION snaptogrid(geometry, geometry, double precision, double precision, double precision, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: srid(chip); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION srid(chip) FROM PUBLIC;
REVOKE ALL ON FUNCTION srid(chip) FROM postgres;
GRANT ALL ON FUNCTION srid(chip) TO postgres;
GRANT ALL ON FUNCTION srid(chip) TO PUBLIC;
GRANT ALL ON FUNCTION srid(chip) TO data_admin WITH GRANT OPTION;


--
-- Name: srid(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION srid(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION srid(geometry) FROM postgres;
GRANT ALL ON FUNCTION srid(geometry) TO postgres;
GRANT ALL ON FUNCTION srid(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION srid(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_addmeasure(geometry, double precision, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_addmeasure(geometry, double precision, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_addmeasure(geometry, double precision, double precision) FROM postgres;
GRANT ALL ON FUNCTION st_addmeasure(geometry, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION st_addmeasure(geometry, double precision, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION st_addmeasure(geometry, double precision, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: st_addpoint(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_addpoint(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_addpoint(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_addpoint(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_addpoint(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_addpoint(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_addpoint(geometry, geometry, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_addpoint(geometry, geometry, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_addpoint(geometry, geometry, integer) FROM postgres;
GRANT ALL ON FUNCTION st_addpoint(geometry, geometry, integer) TO postgres;
GRANT ALL ON FUNCTION st_addpoint(geometry, geometry, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_addpoint(geometry, geometry, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision) FROM postgres;
GRANT ALL ON FUNCTION st_affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION st_affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION st_affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: st_affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision) FROM postgres;
GRANT ALL ON FUNCTION st_affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION st_affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION st_affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: st_area(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_area(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_area(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_area(geometry) TO postgres;
GRANT ALL ON FUNCTION st_area(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_area(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_area(geography); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_area(geography) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_area(geography) FROM postgres;
GRANT ALL ON FUNCTION st_area(geography) TO postgres;
GRANT ALL ON FUNCTION st_area(geography) TO PUBLIC;
GRANT ALL ON FUNCTION st_area(geography) TO data_admin WITH GRANT OPTION;


--
-- Name: st_area(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_area(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_area(text) FROM postgres;
GRANT ALL ON FUNCTION st_area(text) TO postgres;
GRANT ALL ON FUNCTION st_area(text) TO PUBLIC;
GRANT ALL ON FUNCTION st_area(text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_area(geography, boolean); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_area(geography, boolean) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_area(geography, boolean) FROM postgres;
GRANT ALL ON FUNCTION st_area(geography, boolean) TO postgres;
GRANT ALL ON FUNCTION st_area(geography, boolean) TO PUBLIC;
GRANT ALL ON FUNCTION st_area(geography, boolean) TO data_admin WITH GRANT OPTION;


--
-- Name: st_area2d(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_area2d(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_area2d(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_area2d(geometry) TO postgres;
GRANT ALL ON FUNCTION st_area2d(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_area2d(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_asbinary(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_asbinary(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_asbinary(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_asbinary(geometry) TO postgres;
GRANT ALL ON FUNCTION st_asbinary(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_asbinary(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_asbinary(geography); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_asbinary(geography) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_asbinary(geography) FROM postgres;
GRANT ALL ON FUNCTION st_asbinary(geography) TO postgres;
GRANT ALL ON FUNCTION st_asbinary(geography) TO PUBLIC;
GRANT ALL ON FUNCTION st_asbinary(geography) TO data_admin WITH GRANT OPTION;


--
-- Name: st_asbinary(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_asbinary(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_asbinary(text) FROM postgres;
GRANT ALL ON FUNCTION st_asbinary(text) TO postgres;
GRANT ALL ON FUNCTION st_asbinary(text) TO PUBLIC;
GRANT ALL ON FUNCTION st_asbinary(text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_asbinary(geometry, text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_asbinary(geometry, text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_asbinary(geometry, text) FROM postgres;
GRANT ALL ON FUNCTION st_asbinary(geometry, text) TO postgres;
GRANT ALL ON FUNCTION st_asbinary(geometry, text) TO PUBLIC;
GRANT ALL ON FUNCTION st_asbinary(geometry, text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_asewkb(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_asewkb(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_asewkb(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_asewkb(geometry) TO postgres;
GRANT ALL ON FUNCTION st_asewkb(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_asewkb(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_asewkb(geometry, text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_asewkb(geometry, text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_asewkb(geometry, text) FROM postgres;
GRANT ALL ON FUNCTION st_asewkb(geometry, text) TO postgres;
GRANT ALL ON FUNCTION st_asewkb(geometry, text) TO PUBLIC;
GRANT ALL ON FUNCTION st_asewkb(geometry, text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_asewkt(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_asewkt(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_asewkt(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_asewkt(geometry) TO postgres;
GRANT ALL ON FUNCTION st_asewkt(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_asewkt(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_asgeojson(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_asgeojson(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_asgeojson(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_asgeojson(geometry) TO postgres;
GRANT ALL ON FUNCTION st_asgeojson(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_asgeojson(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_asgeojson(geography); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_asgeojson(geography) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_asgeojson(geography) FROM postgres;
GRANT ALL ON FUNCTION st_asgeojson(geography) TO postgres;
GRANT ALL ON FUNCTION st_asgeojson(geography) TO PUBLIC;
GRANT ALL ON FUNCTION st_asgeojson(geography) TO data_admin WITH GRANT OPTION;


--
-- Name: st_asgeojson(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_asgeojson(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_asgeojson(text) FROM postgres;
GRANT ALL ON FUNCTION st_asgeojson(text) TO postgres;
GRANT ALL ON FUNCTION st_asgeojson(text) TO PUBLIC;
GRANT ALL ON FUNCTION st_asgeojson(text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_asgeojson(geometry, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_asgeojson(geometry, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_asgeojson(geometry, integer) FROM postgres;
GRANT ALL ON FUNCTION st_asgeojson(geometry, integer) TO postgres;
GRANT ALL ON FUNCTION st_asgeojson(geometry, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_asgeojson(geometry, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_asgeojson(integer, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_asgeojson(integer, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_asgeojson(integer, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_asgeojson(integer, geometry) TO postgres;
GRANT ALL ON FUNCTION st_asgeojson(integer, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_asgeojson(integer, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_asgeojson(geography, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_asgeojson(geography, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_asgeojson(geography, integer) FROM postgres;
GRANT ALL ON FUNCTION st_asgeojson(geography, integer) TO postgres;
GRANT ALL ON FUNCTION st_asgeojson(geography, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_asgeojson(geography, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_asgeojson(integer, geography); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_asgeojson(integer, geography) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_asgeojson(integer, geography) FROM postgres;
GRANT ALL ON FUNCTION st_asgeojson(integer, geography) TO postgres;
GRANT ALL ON FUNCTION st_asgeojson(integer, geography) TO PUBLIC;
GRANT ALL ON FUNCTION st_asgeojson(integer, geography) TO data_admin WITH GRANT OPTION;


--
-- Name: st_asgeojson(integer, geometry, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_asgeojson(integer, geometry, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_asgeojson(integer, geometry, integer) FROM postgres;
GRANT ALL ON FUNCTION st_asgeojson(integer, geometry, integer) TO postgres;
GRANT ALL ON FUNCTION st_asgeojson(integer, geometry, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_asgeojson(integer, geometry, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_asgeojson(geometry, integer, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_asgeojson(geometry, integer, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_asgeojson(geometry, integer, integer) FROM postgres;
GRANT ALL ON FUNCTION st_asgeojson(geometry, integer, integer) TO postgres;
GRANT ALL ON FUNCTION st_asgeojson(geometry, integer, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_asgeojson(geometry, integer, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_asgeojson(integer, geography, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_asgeojson(integer, geography, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_asgeojson(integer, geography, integer) FROM postgres;
GRANT ALL ON FUNCTION st_asgeojson(integer, geography, integer) TO postgres;
GRANT ALL ON FUNCTION st_asgeojson(integer, geography, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_asgeojson(integer, geography, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_asgeojson(geography, integer, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_asgeojson(geography, integer, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_asgeojson(geography, integer, integer) FROM postgres;
GRANT ALL ON FUNCTION st_asgeojson(geography, integer, integer) TO postgres;
GRANT ALL ON FUNCTION st_asgeojson(geography, integer, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_asgeojson(geography, integer, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_asgeojson(integer, geometry, integer, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_asgeojson(integer, geometry, integer, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_asgeojson(integer, geometry, integer, integer) FROM postgres;
GRANT ALL ON FUNCTION st_asgeojson(integer, geometry, integer, integer) TO postgres;
GRANT ALL ON FUNCTION st_asgeojson(integer, geometry, integer, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_asgeojson(integer, geometry, integer, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_asgeojson(integer, geography, integer, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_asgeojson(integer, geography, integer, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_asgeojson(integer, geography, integer, integer) FROM postgres;
GRANT ALL ON FUNCTION st_asgeojson(integer, geography, integer, integer) TO postgres;
GRANT ALL ON FUNCTION st_asgeojson(integer, geography, integer, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_asgeojson(integer, geography, integer, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_asgml(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_asgml(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_asgml(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_asgml(geometry) TO postgres;
GRANT ALL ON FUNCTION st_asgml(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_asgml(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_asgml(geography); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_asgml(geography) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_asgml(geography) FROM postgres;
GRANT ALL ON FUNCTION st_asgml(geography) TO postgres;
GRANT ALL ON FUNCTION st_asgml(geography) TO PUBLIC;
GRANT ALL ON FUNCTION st_asgml(geography) TO data_admin WITH GRANT OPTION;


--
-- Name: st_asgml(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_asgml(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_asgml(text) FROM postgres;
GRANT ALL ON FUNCTION st_asgml(text) TO postgres;
GRANT ALL ON FUNCTION st_asgml(text) TO PUBLIC;
GRANT ALL ON FUNCTION st_asgml(text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_asgml(geometry, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_asgml(geometry, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_asgml(geometry, integer) FROM postgres;
GRANT ALL ON FUNCTION st_asgml(geometry, integer) TO postgres;
GRANT ALL ON FUNCTION st_asgml(geometry, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_asgml(geometry, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_asgml(integer, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_asgml(integer, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_asgml(integer, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_asgml(integer, geometry) TO postgres;
GRANT ALL ON FUNCTION st_asgml(integer, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_asgml(integer, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_asgml(geography, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_asgml(geography, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_asgml(geography, integer) FROM postgres;
GRANT ALL ON FUNCTION st_asgml(geography, integer) TO postgres;
GRANT ALL ON FUNCTION st_asgml(geography, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_asgml(geography, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_asgml(integer, geography); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_asgml(integer, geography) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_asgml(integer, geography) FROM postgres;
GRANT ALL ON FUNCTION st_asgml(integer, geography) TO postgres;
GRANT ALL ON FUNCTION st_asgml(integer, geography) TO PUBLIC;
GRANT ALL ON FUNCTION st_asgml(integer, geography) TO data_admin WITH GRANT OPTION;


--
-- Name: st_asgml(integer, geometry, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_asgml(integer, geometry, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_asgml(integer, geometry, integer) FROM postgres;
GRANT ALL ON FUNCTION st_asgml(integer, geometry, integer) TO postgres;
GRANT ALL ON FUNCTION st_asgml(integer, geometry, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_asgml(integer, geometry, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_asgml(geometry, integer, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_asgml(geometry, integer, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_asgml(geometry, integer, integer) FROM postgres;
GRANT ALL ON FUNCTION st_asgml(geometry, integer, integer) TO postgres;
GRANT ALL ON FUNCTION st_asgml(geometry, integer, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_asgml(geometry, integer, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_asgml(integer, geography, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_asgml(integer, geography, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_asgml(integer, geography, integer) FROM postgres;
GRANT ALL ON FUNCTION st_asgml(integer, geography, integer) TO postgres;
GRANT ALL ON FUNCTION st_asgml(integer, geography, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_asgml(integer, geography, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_asgml(geography, integer, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_asgml(geography, integer, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_asgml(geography, integer, integer) FROM postgres;
GRANT ALL ON FUNCTION st_asgml(geography, integer, integer) TO postgres;
GRANT ALL ON FUNCTION st_asgml(geography, integer, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_asgml(geography, integer, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_asgml(integer, geometry, integer, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_asgml(integer, geometry, integer, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_asgml(integer, geometry, integer, integer) FROM postgres;
GRANT ALL ON FUNCTION st_asgml(integer, geometry, integer, integer) TO postgres;
GRANT ALL ON FUNCTION st_asgml(integer, geometry, integer, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_asgml(integer, geometry, integer, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_asgml(integer, geography, integer, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_asgml(integer, geography, integer, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_asgml(integer, geography, integer, integer) FROM postgres;
GRANT ALL ON FUNCTION st_asgml(integer, geography, integer, integer) TO postgres;
GRANT ALL ON FUNCTION st_asgml(integer, geography, integer, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_asgml(integer, geography, integer, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_ashexewkb(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_ashexewkb(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_ashexewkb(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_ashexewkb(geometry) TO postgres;
GRANT ALL ON FUNCTION st_ashexewkb(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_ashexewkb(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_ashexewkb(geometry, text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_ashexewkb(geometry, text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_ashexewkb(geometry, text) FROM postgres;
GRANT ALL ON FUNCTION st_ashexewkb(geometry, text) TO postgres;
GRANT ALL ON FUNCTION st_ashexewkb(geometry, text) TO PUBLIC;
GRANT ALL ON FUNCTION st_ashexewkb(geometry, text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_askml(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_askml(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_askml(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_askml(geometry) TO postgres;
GRANT ALL ON FUNCTION st_askml(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_askml(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_askml(geography); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_askml(geography) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_askml(geography) FROM postgres;
GRANT ALL ON FUNCTION st_askml(geography) TO postgres;
GRANT ALL ON FUNCTION st_askml(geography) TO PUBLIC;
GRANT ALL ON FUNCTION st_askml(geography) TO data_admin WITH GRANT OPTION;


--
-- Name: st_askml(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_askml(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_askml(text) FROM postgres;
GRANT ALL ON FUNCTION st_askml(text) TO postgres;
GRANT ALL ON FUNCTION st_askml(text) TO PUBLIC;
GRANT ALL ON FUNCTION st_askml(text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_askml(geometry, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_askml(geometry, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_askml(geometry, integer) FROM postgres;
GRANT ALL ON FUNCTION st_askml(geometry, integer) TO postgres;
GRANT ALL ON FUNCTION st_askml(geometry, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_askml(geometry, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_askml(integer, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_askml(integer, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_askml(integer, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_askml(integer, geometry) TO postgres;
GRANT ALL ON FUNCTION st_askml(integer, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_askml(integer, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_askml(geography, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_askml(geography, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_askml(geography, integer) FROM postgres;
GRANT ALL ON FUNCTION st_askml(geography, integer) TO postgres;
GRANT ALL ON FUNCTION st_askml(geography, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_askml(geography, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_askml(integer, geography); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_askml(integer, geography) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_askml(integer, geography) FROM postgres;
GRANT ALL ON FUNCTION st_askml(integer, geography) TO postgres;
GRANT ALL ON FUNCTION st_askml(integer, geography) TO PUBLIC;
GRANT ALL ON FUNCTION st_askml(integer, geography) TO data_admin WITH GRANT OPTION;


--
-- Name: st_askml(integer, geometry, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_askml(integer, geometry, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_askml(integer, geometry, integer) FROM postgres;
GRANT ALL ON FUNCTION st_askml(integer, geometry, integer) TO postgres;
GRANT ALL ON FUNCTION st_askml(integer, geometry, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_askml(integer, geometry, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_askml(integer, geography, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_askml(integer, geography, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_askml(integer, geography, integer) FROM postgres;
GRANT ALL ON FUNCTION st_askml(integer, geography, integer) TO postgres;
GRANT ALL ON FUNCTION st_askml(integer, geography, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_askml(integer, geography, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_assvg(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_assvg(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_assvg(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_assvg(geometry) TO postgres;
GRANT ALL ON FUNCTION st_assvg(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_assvg(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_assvg(geography); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_assvg(geography) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_assvg(geography) FROM postgres;
GRANT ALL ON FUNCTION st_assvg(geography) TO postgres;
GRANT ALL ON FUNCTION st_assvg(geography) TO PUBLIC;
GRANT ALL ON FUNCTION st_assvg(geography) TO data_admin WITH GRANT OPTION;


--
-- Name: st_assvg(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_assvg(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_assvg(text) FROM postgres;
GRANT ALL ON FUNCTION st_assvg(text) TO postgres;
GRANT ALL ON FUNCTION st_assvg(text) TO PUBLIC;
GRANT ALL ON FUNCTION st_assvg(text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_assvg(geometry, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_assvg(geometry, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_assvg(geometry, integer) FROM postgres;
GRANT ALL ON FUNCTION st_assvg(geometry, integer) TO postgres;
GRANT ALL ON FUNCTION st_assvg(geometry, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_assvg(geometry, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_assvg(geography, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_assvg(geography, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_assvg(geography, integer) FROM postgres;
GRANT ALL ON FUNCTION st_assvg(geography, integer) TO postgres;
GRANT ALL ON FUNCTION st_assvg(geography, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_assvg(geography, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_assvg(geometry, integer, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_assvg(geometry, integer, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_assvg(geometry, integer, integer) FROM postgres;
GRANT ALL ON FUNCTION st_assvg(geometry, integer, integer) TO postgres;
GRANT ALL ON FUNCTION st_assvg(geometry, integer, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_assvg(geometry, integer, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_assvg(geography, integer, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_assvg(geography, integer, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_assvg(geography, integer, integer) FROM postgres;
GRANT ALL ON FUNCTION st_assvg(geography, integer, integer) TO postgres;
GRANT ALL ON FUNCTION st_assvg(geography, integer, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_assvg(geography, integer, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_astext(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_astext(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_astext(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_astext(geometry) TO postgres;
GRANT ALL ON FUNCTION st_astext(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_astext(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_astext(geography); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_astext(geography) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_astext(geography) FROM postgres;
GRANT ALL ON FUNCTION st_astext(geography) TO postgres;
GRANT ALL ON FUNCTION st_astext(geography) TO PUBLIC;
GRANT ALL ON FUNCTION st_astext(geography) TO data_admin WITH GRANT OPTION;


--
-- Name: st_astext(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_astext(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_astext(text) FROM postgres;
GRANT ALL ON FUNCTION st_astext(text) TO postgres;
GRANT ALL ON FUNCTION st_astext(text) TO PUBLIC;
GRANT ALL ON FUNCTION st_astext(text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_azimuth(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_azimuth(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_azimuth(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_azimuth(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_azimuth(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_azimuth(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_bdmpolyfromtext(text, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_bdmpolyfromtext(text, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_bdmpolyfromtext(text, integer) FROM postgres;
GRANT ALL ON FUNCTION st_bdmpolyfromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION st_bdmpolyfromtext(text, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_bdmpolyfromtext(text, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_bdpolyfromtext(text, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_bdpolyfromtext(text, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_bdpolyfromtext(text, integer) FROM postgres;
GRANT ALL ON FUNCTION st_bdpolyfromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION st_bdpolyfromtext(text, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_bdpolyfromtext(text, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_boundary(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_boundary(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_boundary(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_boundary(geometry) TO postgres;
GRANT ALL ON FUNCTION st_boundary(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_boundary(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_box(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_box(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_box(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_box(geometry) TO postgres;
GRANT ALL ON FUNCTION st_box(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_box(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_box(box3d); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_box(box3d) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_box(box3d) FROM postgres;
GRANT ALL ON FUNCTION st_box(box3d) TO postgres;
GRANT ALL ON FUNCTION st_box(box3d) TO PUBLIC;
GRANT ALL ON FUNCTION st_box(box3d) TO data_admin WITH GRANT OPTION;


--
-- Name: st_box2d(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_box2d(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_box2d(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_box2d(geometry) TO postgres;
GRANT ALL ON FUNCTION st_box2d(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_box2d(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_box2d(box3d); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_box2d(box3d) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_box2d(box3d) FROM postgres;
GRANT ALL ON FUNCTION st_box2d(box3d) TO postgres;
GRANT ALL ON FUNCTION st_box2d(box3d) TO PUBLIC;
GRANT ALL ON FUNCTION st_box2d(box3d) TO data_admin WITH GRANT OPTION;


--
-- Name: st_box2d(box3d_extent); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_box2d(box3d_extent) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_box2d(box3d_extent) FROM postgres;
GRANT ALL ON FUNCTION st_box2d(box3d_extent) TO postgres;
GRANT ALL ON FUNCTION st_box2d(box3d_extent) TO PUBLIC;
GRANT ALL ON FUNCTION st_box2d(box3d_extent) TO data_admin WITH GRANT OPTION;


--
-- Name: st_box2d_in(cstring); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_box2d_in(cstring) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_box2d_in(cstring) FROM postgres;
GRANT ALL ON FUNCTION st_box2d_in(cstring) TO postgres;
GRANT ALL ON FUNCTION st_box2d_in(cstring) TO PUBLIC;
GRANT ALL ON FUNCTION st_box2d_in(cstring) TO data_admin WITH GRANT OPTION;


--
-- Name: st_box2d_out(box2d); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_box2d_out(box2d) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_box2d_out(box2d) FROM postgres;
GRANT ALL ON FUNCTION st_box2d_out(box2d) TO postgres;
GRANT ALL ON FUNCTION st_box2d_out(box2d) TO PUBLIC;
GRANT ALL ON FUNCTION st_box2d_out(box2d) TO data_admin WITH GRANT OPTION;


--
-- Name: st_box3d(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_box3d(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_box3d(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_box3d(geometry) TO postgres;
GRANT ALL ON FUNCTION st_box3d(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_box3d(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_box3d(box2d); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_box3d(box2d) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_box3d(box2d) FROM postgres;
GRANT ALL ON FUNCTION st_box3d(box2d) TO postgres;
GRANT ALL ON FUNCTION st_box3d(box2d) TO PUBLIC;
GRANT ALL ON FUNCTION st_box3d(box2d) TO data_admin WITH GRANT OPTION;


--
-- Name: st_box3d_extent(box3d_extent); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_box3d_extent(box3d_extent) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_box3d_extent(box3d_extent) FROM postgres;
GRANT ALL ON FUNCTION st_box3d_extent(box3d_extent) TO postgres;
GRANT ALL ON FUNCTION st_box3d_extent(box3d_extent) TO PUBLIC;
GRANT ALL ON FUNCTION st_box3d_extent(box3d_extent) TO data_admin WITH GRANT OPTION;


--
-- Name: st_box3d_in(cstring); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_box3d_in(cstring) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_box3d_in(cstring) FROM postgres;
GRANT ALL ON FUNCTION st_box3d_in(cstring) TO postgres;
GRANT ALL ON FUNCTION st_box3d_in(cstring) TO PUBLIC;
GRANT ALL ON FUNCTION st_box3d_in(cstring) TO data_admin WITH GRANT OPTION;


--
-- Name: st_box3d_out(box3d); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_box3d_out(box3d) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_box3d_out(box3d) FROM postgres;
GRANT ALL ON FUNCTION st_box3d_out(box3d) TO postgres;
GRANT ALL ON FUNCTION st_box3d_out(box3d) TO PUBLIC;
GRANT ALL ON FUNCTION st_box3d_out(box3d) TO data_admin WITH GRANT OPTION;


--
-- Name: st_buffer(geometry, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_buffer(geometry, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_buffer(geometry, double precision) FROM postgres;
GRANT ALL ON FUNCTION st_buffer(geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION st_buffer(geometry, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION st_buffer(geometry, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: st_buffer(geography, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_buffer(geography, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_buffer(geography, double precision) FROM postgres;
GRANT ALL ON FUNCTION st_buffer(geography, double precision) TO postgres;
GRANT ALL ON FUNCTION st_buffer(geography, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION st_buffer(geography, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: st_buffer(text, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_buffer(text, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_buffer(text, double precision) FROM postgres;
GRANT ALL ON FUNCTION st_buffer(text, double precision) TO postgres;
GRANT ALL ON FUNCTION st_buffer(text, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION st_buffer(text, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: st_buffer(geometry, double precision, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_buffer(geometry, double precision, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_buffer(geometry, double precision, integer) FROM postgres;
GRANT ALL ON FUNCTION st_buffer(geometry, double precision, integer) TO postgres;
GRANT ALL ON FUNCTION st_buffer(geometry, double precision, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_buffer(geometry, double precision, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_buffer(geometry, double precision, text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_buffer(geometry, double precision, text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_buffer(geometry, double precision, text) FROM postgres;
GRANT ALL ON FUNCTION st_buffer(geometry, double precision, text) TO postgres;
GRANT ALL ON FUNCTION st_buffer(geometry, double precision, text) TO PUBLIC;
GRANT ALL ON FUNCTION st_buffer(geometry, double precision, text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_buildarea(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_buildarea(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_buildarea(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_buildarea(geometry) TO postgres;
GRANT ALL ON FUNCTION st_buildarea(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_buildarea(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_bytea(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_bytea(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_bytea(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_bytea(geometry) TO postgres;
GRANT ALL ON FUNCTION st_bytea(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_bytea(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_centroid(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_centroid(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_centroid(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_centroid(geometry) TO postgres;
GRANT ALL ON FUNCTION st_centroid(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_centroid(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_chip_in(cstring); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_chip_in(cstring) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_chip_in(cstring) FROM postgres;
GRANT ALL ON FUNCTION st_chip_in(cstring) TO postgres;
GRANT ALL ON FUNCTION st_chip_in(cstring) TO PUBLIC;
GRANT ALL ON FUNCTION st_chip_in(cstring) TO data_admin WITH GRANT OPTION;


--
-- Name: st_chip_out(chip); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_chip_out(chip) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_chip_out(chip) FROM postgres;
GRANT ALL ON FUNCTION st_chip_out(chip) TO postgres;
GRANT ALL ON FUNCTION st_chip_out(chip) TO PUBLIC;
GRANT ALL ON FUNCTION st_chip_out(chip) TO data_admin WITH GRANT OPTION;


--
-- Name: st_closestpoint(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_closestpoint(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_closestpoint(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_closestpoint(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_closestpoint(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_closestpoint(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_collect(geometry[]); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_collect(geometry[]) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_collect(geometry[]) FROM postgres;
GRANT ALL ON FUNCTION st_collect(geometry[]) TO postgres;
GRANT ALL ON FUNCTION st_collect(geometry[]) TO PUBLIC;
GRANT ALL ON FUNCTION st_collect(geometry[]) TO data_admin WITH GRANT OPTION;


--
-- Name: st_collect(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_collect(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_collect(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_collect(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_collect(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_collect(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_collectionextract(geometry, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_collectionextract(geometry, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_collectionextract(geometry, integer) FROM postgres;
GRANT ALL ON FUNCTION st_collectionextract(geometry, integer) TO postgres;
GRANT ALL ON FUNCTION st_collectionextract(geometry, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_collectionextract(geometry, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_combine_bbox(box2d, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_combine_bbox(box2d, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_combine_bbox(box2d, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_combine_bbox(box2d, geometry) TO postgres;
GRANT ALL ON FUNCTION st_combine_bbox(box2d, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_combine_bbox(box2d, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_combine_bbox(box3d_extent, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_combine_bbox(box3d_extent, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_combine_bbox(box3d_extent, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_combine_bbox(box3d_extent, geometry) TO postgres;
GRANT ALL ON FUNCTION st_combine_bbox(box3d_extent, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_combine_bbox(box3d_extent, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_combine_bbox(box3d, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_combine_bbox(box3d, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_combine_bbox(box3d, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_combine_bbox(box3d, geometry) TO postgres;
GRANT ALL ON FUNCTION st_combine_bbox(box3d, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_combine_bbox(box3d, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_compression(chip); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_compression(chip) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_compression(chip) FROM postgres;
GRANT ALL ON FUNCTION st_compression(chip) TO postgres;
GRANT ALL ON FUNCTION st_compression(chip) TO PUBLIC;
GRANT ALL ON FUNCTION st_compression(chip) TO data_admin WITH GRANT OPTION;


--
-- Name: st_contains(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_contains(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_contains(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_contains(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_contains(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_contains(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_containsproperly(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_containsproperly(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_containsproperly(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_containsproperly(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_containsproperly(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_containsproperly(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_convexhull(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_convexhull(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_convexhull(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_convexhull(geometry) TO postgres;
GRANT ALL ON FUNCTION st_convexhull(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_convexhull(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_coorddim(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_coorddim(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_coorddim(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_coorddim(geometry) TO postgres;
GRANT ALL ON FUNCTION st_coorddim(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_coorddim(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_coveredby(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_coveredby(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_coveredby(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_coveredby(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_coveredby(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_coveredby(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_coveredby(geography, geography); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_coveredby(geography, geography) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_coveredby(geography, geography) FROM postgres;
GRANT ALL ON FUNCTION st_coveredby(geography, geography) TO postgres;
GRANT ALL ON FUNCTION st_coveredby(geography, geography) TO PUBLIC;
GRANT ALL ON FUNCTION st_coveredby(geography, geography) TO data_admin WITH GRANT OPTION;


--
-- Name: st_coveredby(text, text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_coveredby(text, text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_coveredby(text, text) FROM postgres;
GRANT ALL ON FUNCTION st_coveredby(text, text) TO postgres;
GRANT ALL ON FUNCTION st_coveredby(text, text) TO PUBLIC;
GRANT ALL ON FUNCTION st_coveredby(text, text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_covers(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_covers(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_covers(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_covers(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_covers(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_covers(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_covers(geography, geography); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_covers(geography, geography) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_covers(geography, geography) FROM postgres;
GRANT ALL ON FUNCTION st_covers(geography, geography) TO postgres;
GRANT ALL ON FUNCTION st_covers(geography, geography) TO PUBLIC;
GRANT ALL ON FUNCTION st_covers(geography, geography) TO data_admin WITH GRANT OPTION;


--
-- Name: st_covers(text, text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_covers(text, text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_covers(text, text) FROM postgres;
GRANT ALL ON FUNCTION st_covers(text, text) TO postgres;
GRANT ALL ON FUNCTION st_covers(text, text) TO PUBLIC;
GRANT ALL ON FUNCTION st_covers(text, text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_crosses(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_crosses(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_crosses(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_crosses(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_crosses(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_crosses(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_curvetoline(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_curvetoline(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_curvetoline(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_curvetoline(geometry) TO postgres;
GRANT ALL ON FUNCTION st_curvetoline(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_curvetoline(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_curvetoline(geometry, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_curvetoline(geometry, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_curvetoline(geometry, integer) FROM postgres;
GRANT ALL ON FUNCTION st_curvetoline(geometry, integer) TO postgres;
GRANT ALL ON FUNCTION st_curvetoline(geometry, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_curvetoline(geometry, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_datatype(chip); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_datatype(chip) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_datatype(chip) FROM postgres;
GRANT ALL ON FUNCTION st_datatype(chip) TO postgres;
GRANT ALL ON FUNCTION st_datatype(chip) TO PUBLIC;
GRANT ALL ON FUNCTION st_datatype(chip) TO data_admin WITH GRANT OPTION;


--
-- Name: st_dfullywithin(geometry, geometry, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_dfullywithin(geometry, geometry, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_dfullywithin(geometry, geometry, double precision) FROM postgres;
GRANT ALL ON FUNCTION st_dfullywithin(geometry, geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION st_dfullywithin(geometry, geometry, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION st_dfullywithin(geometry, geometry, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: st_difference(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_difference(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_difference(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_difference(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_difference(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_difference(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_dimension(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_dimension(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_dimension(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_dimension(geometry) TO postgres;
GRANT ALL ON FUNCTION st_dimension(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_dimension(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_disjoint(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_disjoint(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_disjoint(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_disjoint(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_disjoint(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_disjoint(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_distance(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_distance(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_distance(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_distance(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_distance(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_distance(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_distance(geography, geography); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_distance(geography, geography) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_distance(geography, geography) FROM postgres;
GRANT ALL ON FUNCTION st_distance(geography, geography) TO postgres;
GRANT ALL ON FUNCTION st_distance(geography, geography) TO PUBLIC;
GRANT ALL ON FUNCTION st_distance(geography, geography) TO data_admin WITH GRANT OPTION;


--
-- Name: st_distance(text, text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_distance(text, text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_distance(text, text) FROM postgres;
GRANT ALL ON FUNCTION st_distance(text, text) TO postgres;
GRANT ALL ON FUNCTION st_distance(text, text) TO PUBLIC;
GRANT ALL ON FUNCTION st_distance(text, text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_distance(geography, geography, boolean); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_distance(geography, geography, boolean) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_distance(geography, geography, boolean) FROM postgres;
GRANT ALL ON FUNCTION st_distance(geography, geography, boolean) TO postgres;
GRANT ALL ON FUNCTION st_distance(geography, geography, boolean) TO PUBLIC;
GRANT ALL ON FUNCTION st_distance(geography, geography, boolean) TO data_admin WITH GRANT OPTION;


--
-- Name: st_distance_sphere(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_distance_sphere(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_distance_sphere(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_distance_sphere(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_distance_sphere(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_distance_sphere(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_distance_spheroid(geometry, geometry, spheroid); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_distance_spheroid(geometry, geometry, spheroid) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_distance_spheroid(geometry, geometry, spheroid) FROM postgres;
GRANT ALL ON FUNCTION st_distance_spheroid(geometry, geometry, spheroid) TO postgres;
GRANT ALL ON FUNCTION st_distance_spheroid(geometry, geometry, spheroid) TO PUBLIC;
GRANT ALL ON FUNCTION st_distance_spheroid(geometry, geometry, spheroid) TO data_admin WITH GRANT OPTION;


--
-- Name: st_dump(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_dump(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_dump(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_dump(geometry) TO postgres;
GRANT ALL ON FUNCTION st_dump(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_dump(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_dumppoints(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_dumppoints(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_dumppoints(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_dumppoints(geometry) TO postgres;
GRANT ALL ON FUNCTION st_dumppoints(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_dumppoints(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_dumprings(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_dumprings(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_dumprings(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_dumprings(geometry) TO postgres;
GRANT ALL ON FUNCTION st_dumprings(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_dumprings(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_dwithin(geometry, geometry, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_dwithin(geometry, geometry, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_dwithin(geometry, geometry, double precision) FROM postgres;
GRANT ALL ON FUNCTION st_dwithin(geometry, geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION st_dwithin(geometry, geometry, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION st_dwithin(geometry, geometry, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: st_dwithin(geography, geography, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_dwithin(geography, geography, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_dwithin(geography, geography, double precision) FROM postgres;
GRANT ALL ON FUNCTION st_dwithin(geography, geography, double precision) TO postgres;
GRANT ALL ON FUNCTION st_dwithin(geography, geography, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION st_dwithin(geography, geography, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: st_dwithin(text, text, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_dwithin(text, text, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_dwithin(text, text, double precision) FROM postgres;
GRANT ALL ON FUNCTION st_dwithin(text, text, double precision) TO postgres;
GRANT ALL ON FUNCTION st_dwithin(text, text, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION st_dwithin(text, text, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: st_dwithin(geography, geography, double precision, boolean); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_dwithin(geography, geography, double precision, boolean) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_dwithin(geography, geography, double precision, boolean) FROM postgres;
GRANT ALL ON FUNCTION st_dwithin(geography, geography, double precision, boolean) TO postgres;
GRANT ALL ON FUNCTION st_dwithin(geography, geography, double precision, boolean) TO PUBLIC;
GRANT ALL ON FUNCTION st_dwithin(geography, geography, double precision, boolean) TO data_admin WITH GRANT OPTION;


--
-- Name: st_endpoint(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_endpoint(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_endpoint(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_endpoint(geometry) TO postgres;
GRANT ALL ON FUNCTION st_endpoint(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_endpoint(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_envelope(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_envelope(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_envelope(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_envelope(geometry) TO postgres;
GRANT ALL ON FUNCTION st_envelope(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_envelope(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_equals(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_equals(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_equals(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_equals(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_equals(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_equals(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_estimated_extent(text, text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_estimated_extent(text, text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_estimated_extent(text, text) FROM postgres;
GRANT ALL ON FUNCTION st_estimated_extent(text, text) TO postgres;
GRANT ALL ON FUNCTION st_estimated_extent(text, text) TO PUBLIC;
GRANT ALL ON FUNCTION st_estimated_extent(text, text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_estimated_extent(text, text, text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_estimated_extent(text, text, text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_estimated_extent(text, text, text) FROM postgres;
GRANT ALL ON FUNCTION st_estimated_extent(text, text, text) TO postgres;
GRANT ALL ON FUNCTION st_estimated_extent(text, text, text) TO PUBLIC;
GRANT ALL ON FUNCTION st_estimated_extent(text, text, text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_expand(box3d, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_expand(box3d, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_expand(box3d, double precision) FROM postgres;
GRANT ALL ON FUNCTION st_expand(box3d, double precision) TO postgres;
GRANT ALL ON FUNCTION st_expand(box3d, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION st_expand(box3d, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: st_expand(box2d, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_expand(box2d, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_expand(box2d, double precision) FROM postgres;
GRANT ALL ON FUNCTION st_expand(box2d, double precision) TO postgres;
GRANT ALL ON FUNCTION st_expand(box2d, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION st_expand(box2d, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: st_expand(geometry, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_expand(geometry, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_expand(geometry, double precision) FROM postgres;
GRANT ALL ON FUNCTION st_expand(geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION st_expand(geometry, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION st_expand(geometry, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: st_exteriorring(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_exteriorring(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_exteriorring(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_exteriorring(geometry) TO postgres;
GRANT ALL ON FUNCTION st_exteriorring(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_exteriorring(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_factor(chip); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_factor(chip) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_factor(chip) FROM postgres;
GRANT ALL ON FUNCTION st_factor(chip) TO postgres;
GRANT ALL ON FUNCTION st_factor(chip) TO PUBLIC;
GRANT ALL ON FUNCTION st_factor(chip) TO data_admin WITH GRANT OPTION;


--
-- Name: st_find_extent(text, text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_find_extent(text, text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_find_extent(text, text) FROM postgres;
GRANT ALL ON FUNCTION st_find_extent(text, text) TO postgres;
GRANT ALL ON FUNCTION st_find_extent(text, text) TO PUBLIC;
GRANT ALL ON FUNCTION st_find_extent(text, text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_find_extent(text, text, text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_find_extent(text, text, text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_find_extent(text, text, text) FROM postgres;
GRANT ALL ON FUNCTION st_find_extent(text, text, text) TO postgres;
GRANT ALL ON FUNCTION st_find_extent(text, text, text) TO PUBLIC;
GRANT ALL ON FUNCTION st_find_extent(text, text, text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_force_2d(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_force_2d(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_force_2d(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_force_2d(geometry) TO postgres;
GRANT ALL ON FUNCTION st_force_2d(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_force_2d(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_force_3d(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_force_3d(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_force_3d(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_force_3d(geometry) TO postgres;
GRANT ALL ON FUNCTION st_force_3d(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_force_3d(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_force_3dm(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_force_3dm(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_force_3dm(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_force_3dm(geometry) TO postgres;
GRANT ALL ON FUNCTION st_force_3dm(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_force_3dm(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_force_3dz(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_force_3dz(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_force_3dz(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_force_3dz(geometry) TO postgres;
GRANT ALL ON FUNCTION st_force_3dz(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_force_3dz(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_force_4d(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_force_4d(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_force_4d(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_force_4d(geometry) TO postgres;
GRANT ALL ON FUNCTION st_force_4d(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_force_4d(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_force_collection(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_force_collection(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_force_collection(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_force_collection(geometry) TO postgres;
GRANT ALL ON FUNCTION st_force_collection(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_force_collection(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_forcerhr(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_forcerhr(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_forcerhr(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_forcerhr(geometry) TO postgres;
GRANT ALL ON FUNCTION st_forcerhr(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_forcerhr(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geogfromtext(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geogfromtext(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geogfromtext(text) FROM postgres;
GRANT ALL ON FUNCTION st_geogfromtext(text) TO postgres;
GRANT ALL ON FUNCTION st_geogfromtext(text) TO PUBLIC;
GRANT ALL ON FUNCTION st_geogfromtext(text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geogfromwkb(bytea); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geogfromwkb(bytea) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geogfromwkb(bytea) FROM postgres;
GRANT ALL ON FUNCTION st_geogfromwkb(bytea) TO postgres;
GRANT ALL ON FUNCTION st_geogfromwkb(bytea) TO PUBLIC;
GRANT ALL ON FUNCTION st_geogfromwkb(bytea) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geographyfromtext(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geographyfromtext(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geographyfromtext(text) FROM postgres;
GRANT ALL ON FUNCTION st_geographyfromtext(text) TO postgres;
GRANT ALL ON FUNCTION st_geographyfromtext(text) TO PUBLIC;
GRANT ALL ON FUNCTION st_geographyfromtext(text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geohash(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geohash(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geohash(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_geohash(geometry) TO postgres;
GRANT ALL ON FUNCTION st_geohash(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_geohash(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geohash(geometry, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geohash(geometry, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geohash(geometry, integer) FROM postgres;
GRANT ALL ON FUNCTION st_geohash(geometry, integer) TO postgres;
GRANT ALL ON FUNCTION st_geohash(geometry, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_geohash(geometry, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geomcollfromtext(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geomcollfromtext(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geomcollfromtext(text) FROM postgres;
GRANT ALL ON FUNCTION st_geomcollfromtext(text) TO postgres;
GRANT ALL ON FUNCTION st_geomcollfromtext(text) TO PUBLIC;
GRANT ALL ON FUNCTION st_geomcollfromtext(text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geomcollfromtext(text, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geomcollfromtext(text, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geomcollfromtext(text, integer) FROM postgres;
GRANT ALL ON FUNCTION st_geomcollfromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION st_geomcollfromtext(text, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_geomcollfromtext(text, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geomcollfromwkb(bytea); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geomcollfromwkb(bytea) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geomcollfromwkb(bytea) FROM postgres;
GRANT ALL ON FUNCTION st_geomcollfromwkb(bytea) TO postgres;
GRANT ALL ON FUNCTION st_geomcollfromwkb(bytea) TO PUBLIC;
GRANT ALL ON FUNCTION st_geomcollfromwkb(bytea) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geomcollfromwkb(bytea, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geomcollfromwkb(bytea, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geomcollfromwkb(bytea, integer) FROM postgres;
GRANT ALL ON FUNCTION st_geomcollfromwkb(bytea, integer) TO postgres;
GRANT ALL ON FUNCTION st_geomcollfromwkb(bytea, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_geomcollfromwkb(bytea, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geometry(box2d); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geometry(box2d) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geometry(box2d) FROM postgres;
GRANT ALL ON FUNCTION st_geometry(box2d) TO postgres;
GRANT ALL ON FUNCTION st_geometry(box2d) TO PUBLIC;
GRANT ALL ON FUNCTION st_geometry(box2d) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geometry(box3d); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geometry(box3d) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geometry(box3d) FROM postgres;
GRANT ALL ON FUNCTION st_geometry(box3d) TO postgres;
GRANT ALL ON FUNCTION st_geometry(box3d) TO PUBLIC;
GRANT ALL ON FUNCTION st_geometry(box3d) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geometry(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geometry(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geometry(text) FROM postgres;
GRANT ALL ON FUNCTION st_geometry(text) TO postgres;
GRANT ALL ON FUNCTION st_geometry(text) TO PUBLIC;
GRANT ALL ON FUNCTION st_geometry(text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geometry(chip); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geometry(chip) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geometry(chip) FROM postgres;
GRANT ALL ON FUNCTION st_geometry(chip) TO postgres;
GRANT ALL ON FUNCTION st_geometry(chip) TO PUBLIC;
GRANT ALL ON FUNCTION st_geometry(chip) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geometry(bytea); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geometry(bytea) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geometry(bytea) FROM postgres;
GRANT ALL ON FUNCTION st_geometry(bytea) TO postgres;
GRANT ALL ON FUNCTION st_geometry(bytea) TO PUBLIC;
GRANT ALL ON FUNCTION st_geometry(bytea) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geometry(box3d_extent); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geometry(box3d_extent) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geometry(box3d_extent) FROM postgres;
GRANT ALL ON FUNCTION st_geometry(box3d_extent) TO postgres;
GRANT ALL ON FUNCTION st_geometry(box3d_extent) TO PUBLIC;
GRANT ALL ON FUNCTION st_geometry(box3d_extent) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geometry_above(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geometry_above(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geometry_above(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_geometry_above(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_geometry_above(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_geometry_above(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geometry_analyze(internal); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geometry_analyze(internal) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geometry_analyze(internal) FROM postgres;
GRANT ALL ON FUNCTION st_geometry_analyze(internal) TO postgres;
GRANT ALL ON FUNCTION st_geometry_analyze(internal) TO PUBLIC;
GRANT ALL ON FUNCTION st_geometry_analyze(internal) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geometry_below(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geometry_below(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geometry_below(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_geometry_below(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_geometry_below(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_geometry_below(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geometry_cmp(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geometry_cmp(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geometry_cmp(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_geometry_cmp(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_geometry_cmp(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_geometry_cmp(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geometry_contain(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geometry_contain(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geometry_contain(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_geometry_contain(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_geometry_contain(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_geometry_contain(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geometry_contained(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geometry_contained(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geometry_contained(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_geometry_contained(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_geometry_contained(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_geometry_contained(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geometry_eq(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geometry_eq(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geometry_eq(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_geometry_eq(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_geometry_eq(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_geometry_eq(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geometry_ge(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geometry_ge(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geometry_ge(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_geometry_ge(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_geometry_ge(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_geometry_ge(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geometry_gt(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geometry_gt(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geometry_gt(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_geometry_gt(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_geometry_gt(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_geometry_gt(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geometry_in(cstring); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geometry_in(cstring) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geometry_in(cstring) FROM postgres;
GRANT ALL ON FUNCTION st_geometry_in(cstring) TO postgres;
GRANT ALL ON FUNCTION st_geometry_in(cstring) TO PUBLIC;
GRANT ALL ON FUNCTION st_geometry_in(cstring) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geometry_le(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geometry_le(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geometry_le(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_geometry_le(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_geometry_le(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_geometry_le(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geometry_left(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geometry_left(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geometry_left(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_geometry_left(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_geometry_left(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_geometry_left(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geometry_lt(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geometry_lt(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geometry_lt(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_geometry_lt(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_geometry_lt(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_geometry_lt(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geometry_out(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geometry_out(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geometry_out(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_geometry_out(geometry) TO postgres;
GRANT ALL ON FUNCTION st_geometry_out(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_geometry_out(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geometry_overabove(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geometry_overabove(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geometry_overabove(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_geometry_overabove(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_geometry_overabove(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_geometry_overabove(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geometry_overbelow(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geometry_overbelow(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geometry_overbelow(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_geometry_overbelow(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_geometry_overbelow(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_geometry_overbelow(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geometry_overlap(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geometry_overlap(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geometry_overlap(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_geometry_overlap(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_geometry_overlap(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_geometry_overlap(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geometry_overleft(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geometry_overleft(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geometry_overleft(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_geometry_overleft(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_geometry_overleft(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_geometry_overleft(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geometry_overright(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geometry_overright(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geometry_overright(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_geometry_overright(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_geometry_overright(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_geometry_overright(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geometry_recv(internal); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geometry_recv(internal) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geometry_recv(internal) FROM postgres;
GRANT ALL ON FUNCTION st_geometry_recv(internal) TO postgres;
GRANT ALL ON FUNCTION st_geometry_recv(internal) TO PUBLIC;
GRANT ALL ON FUNCTION st_geometry_recv(internal) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geometry_right(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geometry_right(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geometry_right(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_geometry_right(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_geometry_right(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_geometry_right(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geometry_same(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geometry_same(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geometry_same(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_geometry_same(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_geometry_same(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_geometry_same(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geometry_send(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geometry_send(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geometry_send(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_geometry_send(geometry) TO postgres;
GRANT ALL ON FUNCTION st_geometry_send(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_geometry_send(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geometryfromtext(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geometryfromtext(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geometryfromtext(text) FROM postgres;
GRANT ALL ON FUNCTION st_geometryfromtext(text) TO postgres;
GRANT ALL ON FUNCTION st_geometryfromtext(text) TO PUBLIC;
GRANT ALL ON FUNCTION st_geometryfromtext(text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geometryfromtext(text, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geometryfromtext(text, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geometryfromtext(text, integer) FROM postgres;
GRANT ALL ON FUNCTION st_geometryfromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION st_geometryfromtext(text, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_geometryfromtext(text, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geometryn(geometry, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geometryn(geometry, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geometryn(geometry, integer) FROM postgres;
GRANT ALL ON FUNCTION st_geometryn(geometry, integer) TO postgres;
GRANT ALL ON FUNCTION st_geometryn(geometry, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_geometryn(geometry, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geometrytype(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geometrytype(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geometrytype(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_geometrytype(geometry) TO postgres;
GRANT ALL ON FUNCTION st_geometrytype(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_geometrytype(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geomfromewkb(bytea); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geomfromewkb(bytea) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geomfromewkb(bytea) FROM postgres;
GRANT ALL ON FUNCTION st_geomfromewkb(bytea) TO postgres;
GRANT ALL ON FUNCTION st_geomfromewkb(bytea) TO PUBLIC;
GRANT ALL ON FUNCTION st_geomfromewkb(bytea) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geomfromewkt(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geomfromewkt(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geomfromewkt(text) FROM postgres;
GRANT ALL ON FUNCTION st_geomfromewkt(text) TO postgres;
GRANT ALL ON FUNCTION st_geomfromewkt(text) TO PUBLIC;
GRANT ALL ON FUNCTION st_geomfromewkt(text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geomfromgml(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geomfromgml(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geomfromgml(text) FROM postgres;
GRANT ALL ON FUNCTION st_geomfromgml(text) TO postgres;
GRANT ALL ON FUNCTION st_geomfromgml(text) TO PUBLIC;
GRANT ALL ON FUNCTION st_geomfromgml(text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geomfromkml(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geomfromkml(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geomfromkml(text) FROM postgres;
GRANT ALL ON FUNCTION st_geomfromkml(text) TO postgres;
GRANT ALL ON FUNCTION st_geomfromkml(text) TO PUBLIC;
GRANT ALL ON FUNCTION st_geomfromkml(text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geomfromtext(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geomfromtext(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geomfromtext(text) FROM postgres;
GRANT ALL ON FUNCTION st_geomfromtext(text) TO postgres;
GRANT ALL ON FUNCTION st_geomfromtext(text) TO PUBLIC;
GRANT ALL ON FUNCTION st_geomfromtext(text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geomfromtext(text, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geomfromtext(text, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geomfromtext(text, integer) FROM postgres;
GRANT ALL ON FUNCTION st_geomfromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION st_geomfromtext(text, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_geomfromtext(text, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geomfromwkb(bytea); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geomfromwkb(bytea) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geomfromwkb(bytea) FROM postgres;
GRANT ALL ON FUNCTION st_geomfromwkb(bytea) TO postgres;
GRANT ALL ON FUNCTION st_geomfromwkb(bytea) TO PUBLIC;
GRANT ALL ON FUNCTION st_geomfromwkb(bytea) TO data_admin WITH GRANT OPTION;


--
-- Name: st_geomfromwkb(bytea, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_geomfromwkb(bytea, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_geomfromwkb(bytea, integer) FROM postgres;
GRANT ALL ON FUNCTION st_geomfromwkb(bytea, integer) TO postgres;
GRANT ALL ON FUNCTION st_geomfromwkb(bytea, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_geomfromwkb(bytea, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_gmltosql(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_gmltosql(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_gmltosql(text) FROM postgres;
GRANT ALL ON FUNCTION st_gmltosql(text) TO postgres;
GRANT ALL ON FUNCTION st_gmltosql(text) TO PUBLIC;
GRANT ALL ON FUNCTION st_gmltosql(text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_hasarc(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_hasarc(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_hasarc(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_hasarc(geometry) TO postgres;
GRANT ALL ON FUNCTION st_hasarc(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_hasarc(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_hausdorffdistance(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_hausdorffdistance(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_hausdorffdistance(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_hausdorffdistance(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_hausdorffdistance(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_hausdorffdistance(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_hausdorffdistance(geometry, geometry, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_hausdorffdistance(geometry, geometry, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_hausdorffdistance(geometry, geometry, double precision) FROM postgres;
GRANT ALL ON FUNCTION st_hausdorffdistance(geometry, geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION st_hausdorffdistance(geometry, geometry, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION st_hausdorffdistance(geometry, geometry, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: st_height(chip); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_height(chip) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_height(chip) FROM postgres;
GRANT ALL ON FUNCTION st_height(chip) TO postgres;
GRANT ALL ON FUNCTION st_height(chip) TO PUBLIC;
GRANT ALL ON FUNCTION st_height(chip) TO data_admin WITH GRANT OPTION;


--
-- Name: st_interiorringn(geometry, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_interiorringn(geometry, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_interiorringn(geometry, integer) FROM postgres;
GRANT ALL ON FUNCTION st_interiorringn(geometry, integer) TO postgres;
GRANT ALL ON FUNCTION st_interiorringn(geometry, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_interiorringn(geometry, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_intersection(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_intersection(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_intersection(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_intersection(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_intersection(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_intersection(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_intersection(geography, geography); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_intersection(geography, geography) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_intersection(geography, geography) FROM postgres;
GRANT ALL ON FUNCTION st_intersection(geography, geography) TO postgres;
GRANT ALL ON FUNCTION st_intersection(geography, geography) TO PUBLIC;
GRANT ALL ON FUNCTION st_intersection(geography, geography) TO data_admin WITH GRANT OPTION;


--
-- Name: st_intersection(text, text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_intersection(text, text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_intersection(text, text) FROM postgres;
GRANT ALL ON FUNCTION st_intersection(text, text) TO postgres;
GRANT ALL ON FUNCTION st_intersection(text, text) TO PUBLIC;
GRANT ALL ON FUNCTION st_intersection(text, text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_intersects(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_intersects(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_intersects(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_intersects(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_intersects(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_intersects(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_intersects(geography, geography); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_intersects(geography, geography) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_intersects(geography, geography) FROM postgres;
GRANT ALL ON FUNCTION st_intersects(geography, geography) TO postgres;
GRANT ALL ON FUNCTION st_intersects(geography, geography) TO PUBLIC;
GRANT ALL ON FUNCTION st_intersects(geography, geography) TO data_admin WITH GRANT OPTION;


--
-- Name: st_intersects(text, text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_intersects(text, text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_intersects(text, text) FROM postgres;
GRANT ALL ON FUNCTION st_intersects(text, text) TO postgres;
GRANT ALL ON FUNCTION st_intersects(text, text) TO PUBLIC;
GRANT ALL ON FUNCTION st_intersects(text, text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_isclosed(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_isclosed(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_isclosed(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_isclosed(geometry) TO postgres;
GRANT ALL ON FUNCTION st_isclosed(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_isclosed(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_isempty(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_isempty(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_isempty(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_isempty(geometry) TO postgres;
GRANT ALL ON FUNCTION st_isempty(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_isempty(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_isring(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_isring(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_isring(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_isring(geometry) TO postgres;
GRANT ALL ON FUNCTION st_isring(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_isring(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_issimple(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_issimple(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_issimple(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_issimple(geometry) TO postgres;
GRANT ALL ON FUNCTION st_issimple(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_issimple(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_isvalid(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_isvalid(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_isvalid(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_isvalid(geometry) TO postgres;
GRANT ALL ON FUNCTION st_isvalid(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_isvalid(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_isvalidreason(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_isvalidreason(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_isvalidreason(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_isvalidreason(geometry) TO postgres;
GRANT ALL ON FUNCTION st_isvalidreason(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_isvalidreason(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_length(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_length(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_length(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_length(geometry) TO postgres;
GRANT ALL ON FUNCTION st_length(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_length(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_length(geography); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_length(geography) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_length(geography) FROM postgres;
GRANT ALL ON FUNCTION st_length(geography) TO postgres;
GRANT ALL ON FUNCTION st_length(geography) TO PUBLIC;
GRANT ALL ON FUNCTION st_length(geography) TO data_admin WITH GRANT OPTION;


--
-- Name: st_length(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_length(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_length(text) FROM postgres;
GRANT ALL ON FUNCTION st_length(text) TO postgres;
GRANT ALL ON FUNCTION st_length(text) TO PUBLIC;
GRANT ALL ON FUNCTION st_length(text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_length(geography, boolean); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_length(geography, boolean) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_length(geography, boolean) FROM postgres;
GRANT ALL ON FUNCTION st_length(geography, boolean) TO postgres;
GRANT ALL ON FUNCTION st_length(geography, boolean) TO PUBLIC;
GRANT ALL ON FUNCTION st_length(geography, boolean) TO data_admin WITH GRANT OPTION;


--
-- Name: st_length2d(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_length2d(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_length2d(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_length2d(geometry) TO postgres;
GRANT ALL ON FUNCTION st_length2d(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_length2d(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_length2d_spheroid(geometry, spheroid); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_length2d_spheroid(geometry, spheroid) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_length2d_spheroid(geometry, spheroid) FROM postgres;
GRANT ALL ON FUNCTION st_length2d_spheroid(geometry, spheroid) TO postgres;
GRANT ALL ON FUNCTION st_length2d_spheroid(geometry, spheroid) TO PUBLIC;
GRANT ALL ON FUNCTION st_length2d_spheroid(geometry, spheroid) TO data_admin WITH GRANT OPTION;


--
-- Name: st_length3d(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_length3d(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_length3d(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_length3d(geometry) TO postgres;
GRANT ALL ON FUNCTION st_length3d(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_length3d(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_length3d_spheroid(geometry, spheroid); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_length3d_spheroid(geometry, spheroid) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_length3d_spheroid(geometry, spheroid) FROM postgres;
GRANT ALL ON FUNCTION st_length3d_spheroid(geometry, spheroid) TO postgres;
GRANT ALL ON FUNCTION st_length3d_spheroid(geometry, spheroid) TO PUBLIC;
GRANT ALL ON FUNCTION st_length3d_spheroid(geometry, spheroid) TO data_admin WITH GRANT OPTION;


--
-- Name: st_length_spheroid(geometry, spheroid); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_length_spheroid(geometry, spheroid) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_length_spheroid(geometry, spheroid) FROM postgres;
GRANT ALL ON FUNCTION st_length_spheroid(geometry, spheroid) TO postgres;
GRANT ALL ON FUNCTION st_length_spheroid(geometry, spheroid) TO PUBLIC;
GRANT ALL ON FUNCTION st_length_spheroid(geometry, spheroid) TO data_admin WITH GRANT OPTION;


--
-- Name: st_line_interpolate_point(geometry, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_line_interpolate_point(geometry, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_line_interpolate_point(geometry, double precision) FROM postgres;
GRANT ALL ON FUNCTION st_line_interpolate_point(geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION st_line_interpolate_point(geometry, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION st_line_interpolate_point(geometry, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: st_line_locate_point(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_line_locate_point(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_line_locate_point(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_line_locate_point(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_line_locate_point(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_line_locate_point(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_line_substring(geometry, double precision, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_line_substring(geometry, double precision, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_line_substring(geometry, double precision, double precision) FROM postgres;
GRANT ALL ON FUNCTION st_line_substring(geometry, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION st_line_substring(geometry, double precision, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION st_line_substring(geometry, double precision, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: st_linecrossingdirection(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_linecrossingdirection(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_linecrossingdirection(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_linecrossingdirection(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_linecrossingdirection(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_linecrossingdirection(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_linefrommultipoint(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_linefrommultipoint(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_linefrommultipoint(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_linefrommultipoint(geometry) TO postgres;
GRANT ALL ON FUNCTION st_linefrommultipoint(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_linefrommultipoint(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_linefromtext(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_linefromtext(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_linefromtext(text) FROM postgres;
GRANT ALL ON FUNCTION st_linefromtext(text) TO postgres;
GRANT ALL ON FUNCTION st_linefromtext(text) TO PUBLIC;
GRANT ALL ON FUNCTION st_linefromtext(text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_linefromtext(text, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_linefromtext(text, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_linefromtext(text, integer) FROM postgres;
GRANT ALL ON FUNCTION st_linefromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION st_linefromtext(text, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_linefromtext(text, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_linefromwkb(bytea); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_linefromwkb(bytea) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_linefromwkb(bytea) FROM postgres;
GRANT ALL ON FUNCTION st_linefromwkb(bytea) TO postgres;
GRANT ALL ON FUNCTION st_linefromwkb(bytea) TO PUBLIC;
GRANT ALL ON FUNCTION st_linefromwkb(bytea) TO data_admin WITH GRANT OPTION;


--
-- Name: st_linefromwkb(bytea, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_linefromwkb(bytea, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_linefromwkb(bytea, integer) FROM postgres;
GRANT ALL ON FUNCTION st_linefromwkb(bytea, integer) TO postgres;
GRANT ALL ON FUNCTION st_linefromwkb(bytea, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_linefromwkb(bytea, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_linemerge(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_linemerge(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_linemerge(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_linemerge(geometry) TO postgres;
GRANT ALL ON FUNCTION st_linemerge(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_linemerge(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_linestringfromwkb(bytea); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_linestringfromwkb(bytea) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_linestringfromwkb(bytea) FROM postgres;
GRANT ALL ON FUNCTION st_linestringfromwkb(bytea) TO postgres;
GRANT ALL ON FUNCTION st_linestringfromwkb(bytea) TO PUBLIC;
GRANT ALL ON FUNCTION st_linestringfromwkb(bytea) TO data_admin WITH GRANT OPTION;


--
-- Name: st_linestringfromwkb(bytea, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_linestringfromwkb(bytea, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_linestringfromwkb(bytea, integer) FROM postgres;
GRANT ALL ON FUNCTION st_linestringfromwkb(bytea, integer) TO postgres;
GRANT ALL ON FUNCTION st_linestringfromwkb(bytea, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_linestringfromwkb(bytea, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_linetocurve(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_linetocurve(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_linetocurve(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_linetocurve(geometry) TO postgres;
GRANT ALL ON FUNCTION st_linetocurve(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_linetocurve(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_locate_along_measure(geometry, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_locate_along_measure(geometry, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_locate_along_measure(geometry, double precision) FROM postgres;
GRANT ALL ON FUNCTION st_locate_along_measure(geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION st_locate_along_measure(geometry, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION st_locate_along_measure(geometry, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: st_locate_between_measures(geometry, double precision, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_locate_between_measures(geometry, double precision, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_locate_between_measures(geometry, double precision, double precision) FROM postgres;
GRANT ALL ON FUNCTION st_locate_between_measures(geometry, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION st_locate_between_measures(geometry, double precision, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION st_locate_between_measures(geometry, double precision, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: st_locatebetweenelevations(geometry, double precision, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_locatebetweenelevations(geometry, double precision, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_locatebetweenelevations(geometry, double precision, double precision) FROM postgres;
GRANT ALL ON FUNCTION st_locatebetweenelevations(geometry, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION st_locatebetweenelevations(geometry, double precision, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION st_locatebetweenelevations(geometry, double precision, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: st_longestline(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_longestline(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_longestline(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_longestline(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_longestline(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_longestline(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_m(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_m(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_m(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_m(geometry) TO postgres;
GRANT ALL ON FUNCTION st_m(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_m(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_makebox2d(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_makebox2d(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_makebox2d(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_makebox2d(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_makebox2d(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_makebox2d(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_makebox3d(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_makebox3d(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_makebox3d(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_makebox3d(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_makebox3d(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_makebox3d(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_makeenvelope(double precision, double precision, double precision, double precision, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_makeenvelope(double precision, double precision, double precision, double precision, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_makeenvelope(double precision, double precision, double precision, double precision, integer) FROM postgres;
GRANT ALL ON FUNCTION st_makeenvelope(double precision, double precision, double precision, double precision, integer) TO postgres;
GRANT ALL ON FUNCTION st_makeenvelope(double precision, double precision, double precision, double precision, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_makeenvelope(double precision, double precision, double precision, double precision, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_makeline(geometry[]); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_makeline(geometry[]) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_makeline(geometry[]) FROM postgres;
GRANT ALL ON FUNCTION st_makeline(geometry[]) TO postgres;
GRANT ALL ON FUNCTION st_makeline(geometry[]) TO PUBLIC;
GRANT ALL ON FUNCTION st_makeline(geometry[]) TO data_admin WITH GRANT OPTION;


--
-- Name: st_makeline(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_makeline(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_makeline(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_makeline(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_makeline(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_makeline(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_makeline_garray(geometry[]); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_makeline_garray(geometry[]) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_makeline_garray(geometry[]) FROM postgres;
GRANT ALL ON FUNCTION st_makeline_garray(geometry[]) TO postgres;
GRANT ALL ON FUNCTION st_makeline_garray(geometry[]) TO PUBLIC;
GRANT ALL ON FUNCTION st_makeline_garray(geometry[]) TO data_admin WITH GRANT OPTION;


--
-- Name: st_makepoint(double precision, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_makepoint(double precision, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_makepoint(double precision, double precision) FROM postgres;
GRANT ALL ON FUNCTION st_makepoint(double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION st_makepoint(double precision, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION st_makepoint(double precision, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: st_makepoint(double precision, double precision, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_makepoint(double precision, double precision, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_makepoint(double precision, double precision, double precision) FROM postgres;
GRANT ALL ON FUNCTION st_makepoint(double precision, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION st_makepoint(double precision, double precision, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION st_makepoint(double precision, double precision, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: st_makepoint(double precision, double precision, double precision, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_makepoint(double precision, double precision, double precision, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_makepoint(double precision, double precision, double precision, double precision) FROM postgres;
GRANT ALL ON FUNCTION st_makepoint(double precision, double precision, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION st_makepoint(double precision, double precision, double precision, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION st_makepoint(double precision, double precision, double precision, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: st_makepointm(double precision, double precision, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_makepointm(double precision, double precision, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_makepointm(double precision, double precision, double precision) FROM postgres;
GRANT ALL ON FUNCTION st_makepointm(double precision, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION st_makepointm(double precision, double precision, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION st_makepointm(double precision, double precision, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: st_makepolygon(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_makepolygon(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_makepolygon(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_makepolygon(geometry) TO postgres;
GRANT ALL ON FUNCTION st_makepolygon(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_makepolygon(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_makepolygon(geometry, geometry[]); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_makepolygon(geometry, geometry[]) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_makepolygon(geometry, geometry[]) FROM postgres;
GRANT ALL ON FUNCTION st_makepolygon(geometry, geometry[]) TO postgres;
GRANT ALL ON FUNCTION st_makepolygon(geometry, geometry[]) TO PUBLIC;
GRANT ALL ON FUNCTION st_makepolygon(geometry, geometry[]) TO data_admin WITH GRANT OPTION;


--
-- Name: st_maxdistance(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_maxdistance(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_maxdistance(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_maxdistance(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_maxdistance(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_maxdistance(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_mem_size(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_mem_size(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_mem_size(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_mem_size(geometry) TO postgres;
GRANT ALL ON FUNCTION st_mem_size(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_mem_size(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_minimumboundingcircle(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_minimumboundingcircle(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_minimumboundingcircle(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_minimumboundingcircle(geometry) TO postgres;
GRANT ALL ON FUNCTION st_minimumboundingcircle(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_minimumboundingcircle(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_minimumboundingcircle(geometry, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_minimumboundingcircle(inputgeom geometry, segs_per_quarter integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_minimumboundingcircle(inputgeom geometry, segs_per_quarter integer) FROM postgres;
GRANT ALL ON FUNCTION st_minimumboundingcircle(inputgeom geometry, segs_per_quarter integer) TO postgres;
GRANT ALL ON FUNCTION st_minimumboundingcircle(inputgeom geometry, segs_per_quarter integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_minimumboundingcircle(inputgeom geometry, segs_per_quarter integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_mlinefromtext(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_mlinefromtext(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_mlinefromtext(text) FROM postgres;
GRANT ALL ON FUNCTION st_mlinefromtext(text) TO postgres;
GRANT ALL ON FUNCTION st_mlinefromtext(text) TO PUBLIC;
GRANT ALL ON FUNCTION st_mlinefromtext(text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_mlinefromtext(text, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_mlinefromtext(text, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_mlinefromtext(text, integer) FROM postgres;
GRANT ALL ON FUNCTION st_mlinefromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION st_mlinefromtext(text, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_mlinefromtext(text, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_mlinefromwkb(bytea); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_mlinefromwkb(bytea) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_mlinefromwkb(bytea) FROM postgres;
GRANT ALL ON FUNCTION st_mlinefromwkb(bytea) TO postgres;
GRANT ALL ON FUNCTION st_mlinefromwkb(bytea) TO PUBLIC;
GRANT ALL ON FUNCTION st_mlinefromwkb(bytea) TO data_admin WITH GRANT OPTION;


--
-- Name: st_mlinefromwkb(bytea, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_mlinefromwkb(bytea, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_mlinefromwkb(bytea, integer) FROM postgres;
GRANT ALL ON FUNCTION st_mlinefromwkb(bytea, integer) TO postgres;
GRANT ALL ON FUNCTION st_mlinefromwkb(bytea, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_mlinefromwkb(bytea, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_mpointfromtext(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_mpointfromtext(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_mpointfromtext(text) FROM postgres;
GRANT ALL ON FUNCTION st_mpointfromtext(text) TO postgres;
GRANT ALL ON FUNCTION st_mpointfromtext(text) TO PUBLIC;
GRANT ALL ON FUNCTION st_mpointfromtext(text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_mpointfromtext(text, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_mpointfromtext(text, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_mpointfromtext(text, integer) FROM postgres;
GRANT ALL ON FUNCTION st_mpointfromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION st_mpointfromtext(text, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_mpointfromtext(text, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_mpointfromwkb(bytea); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_mpointfromwkb(bytea) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_mpointfromwkb(bytea) FROM postgres;
GRANT ALL ON FUNCTION st_mpointfromwkb(bytea) TO postgres;
GRANT ALL ON FUNCTION st_mpointfromwkb(bytea) TO PUBLIC;
GRANT ALL ON FUNCTION st_mpointfromwkb(bytea) TO data_admin WITH GRANT OPTION;


--
-- Name: st_mpointfromwkb(bytea, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_mpointfromwkb(bytea, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_mpointfromwkb(bytea, integer) FROM postgres;
GRANT ALL ON FUNCTION st_mpointfromwkb(bytea, integer) TO postgres;
GRANT ALL ON FUNCTION st_mpointfromwkb(bytea, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_mpointfromwkb(bytea, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_mpolyfromtext(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_mpolyfromtext(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_mpolyfromtext(text) FROM postgres;
GRANT ALL ON FUNCTION st_mpolyfromtext(text) TO postgres;
GRANT ALL ON FUNCTION st_mpolyfromtext(text) TO PUBLIC;
GRANT ALL ON FUNCTION st_mpolyfromtext(text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_mpolyfromtext(text, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_mpolyfromtext(text, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_mpolyfromtext(text, integer) FROM postgres;
GRANT ALL ON FUNCTION st_mpolyfromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION st_mpolyfromtext(text, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_mpolyfromtext(text, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_mpolyfromwkb(bytea); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_mpolyfromwkb(bytea) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_mpolyfromwkb(bytea) FROM postgres;
GRANT ALL ON FUNCTION st_mpolyfromwkb(bytea) TO postgres;
GRANT ALL ON FUNCTION st_mpolyfromwkb(bytea) TO PUBLIC;
GRANT ALL ON FUNCTION st_mpolyfromwkb(bytea) TO data_admin WITH GRANT OPTION;


--
-- Name: st_mpolyfromwkb(bytea, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_mpolyfromwkb(bytea, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_mpolyfromwkb(bytea, integer) FROM postgres;
GRANT ALL ON FUNCTION st_mpolyfromwkb(bytea, integer) TO postgres;
GRANT ALL ON FUNCTION st_mpolyfromwkb(bytea, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_mpolyfromwkb(bytea, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_multi(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_multi(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_multi(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_multi(geometry) TO postgres;
GRANT ALL ON FUNCTION st_multi(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_multi(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_multilinefromwkb(bytea); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_multilinefromwkb(bytea) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_multilinefromwkb(bytea) FROM postgres;
GRANT ALL ON FUNCTION st_multilinefromwkb(bytea) TO postgres;
GRANT ALL ON FUNCTION st_multilinefromwkb(bytea) TO PUBLIC;
GRANT ALL ON FUNCTION st_multilinefromwkb(bytea) TO data_admin WITH GRANT OPTION;


--
-- Name: st_multilinestringfromtext(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_multilinestringfromtext(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_multilinestringfromtext(text) FROM postgres;
GRANT ALL ON FUNCTION st_multilinestringfromtext(text) TO postgres;
GRANT ALL ON FUNCTION st_multilinestringfromtext(text) TO PUBLIC;
GRANT ALL ON FUNCTION st_multilinestringfromtext(text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_multilinestringfromtext(text, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_multilinestringfromtext(text, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_multilinestringfromtext(text, integer) FROM postgres;
GRANT ALL ON FUNCTION st_multilinestringfromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION st_multilinestringfromtext(text, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_multilinestringfromtext(text, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_multipointfromtext(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_multipointfromtext(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_multipointfromtext(text) FROM postgres;
GRANT ALL ON FUNCTION st_multipointfromtext(text) TO postgres;
GRANT ALL ON FUNCTION st_multipointfromtext(text) TO PUBLIC;
GRANT ALL ON FUNCTION st_multipointfromtext(text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_multipointfromwkb(bytea); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_multipointfromwkb(bytea) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_multipointfromwkb(bytea) FROM postgres;
GRANT ALL ON FUNCTION st_multipointfromwkb(bytea) TO postgres;
GRANT ALL ON FUNCTION st_multipointfromwkb(bytea) TO PUBLIC;
GRANT ALL ON FUNCTION st_multipointfromwkb(bytea) TO data_admin WITH GRANT OPTION;


--
-- Name: st_multipointfromwkb(bytea, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_multipointfromwkb(bytea, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_multipointfromwkb(bytea, integer) FROM postgres;
GRANT ALL ON FUNCTION st_multipointfromwkb(bytea, integer) TO postgres;
GRANT ALL ON FUNCTION st_multipointfromwkb(bytea, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_multipointfromwkb(bytea, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_multipolyfromwkb(bytea); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_multipolyfromwkb(bytea) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_multipolyfromwkb(bytea) FROM postgres;
GRANT ALL ON FUNCTION st_multipolyfromwkb(bytea) TO postgres;
GRANT ALL ON FUNCTION st_multipolyfromwkb(bytea) TO PUBLIC;
GRANT ALL ON FUNCTION st_multipolyfromwkb(bytea) TO data_admin WITH GRANT OPTION;


--
-- Name: st_multipolyfromwkb(bytea, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_multipolyfromwkb(bytea, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_multipolyfromwkb(bytea, integer) FROM postgres;
GRANT ALL ON FUNCTION st_multipolyfromwkb(bytea, integer) TO postgres;
GRANT ALL ON FUNCTION st_multipolyfromwkb(bytea, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_multipolyfromwkb(bytea, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_multipolygonfromtext(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_multipolygonfromtext(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_multipolygonfromtext(text) FROM postgres;
GRANT ALL ON FUNCTION st_multipolygonfromtext(text) TO postgres;
GRANT ALL ON FUNCTION st_multipolygonfromtext(text) TO PUBLIC;
GRANT ALL ON FUNCTION st_multipolygonfromtext(text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_multipolygonfromtext(text, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_multipolygonfromtext(text, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_multipolygonfromtext(text, integer) FROM postgres;
GRANT ALL ON FUNCTION st_multipolygonfromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION st_multipolygonfromtext(text, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_multipolygonfromtext(text, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_ndims(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_ndims(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_ndims(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_ndims(geometry) TO postgres;
GRANT ALL ON FUNCTION st_ndims(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_ndims(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_npoints(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_npoints(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_npoints(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_npoints(geometry) TO postgres;
GRANT ALL ON FUNCTION st_npoints(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_npoints(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_nrings(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_nrings(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_nrings(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_nrings(geometry) TO postgres;
GRANT ALL ON FUNCTION st_nrings(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_nrings(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_numgeometries(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_numgeometries(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_numgeometries(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_numgeometries(geometry) TO postgres;
GRANT ALL ON FUNCTION st_numgeometries(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_numgeometries(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_numinteriorring(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_numinteriorring(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_numinteriorring(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_numinteriorring(geometry) TO postgres;
GRANT ALL ON FUNCTION st_numinteriorring(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_numinteriorring(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_numinteriorrings(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_numinteriorrings(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_numinteriorrings(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_numinteriorrings(geometry) TO postgres;
GRANT ALL ON FUNCTION st_numinteriorrings(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_numinteriorrings(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_numpoints(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_numpoints(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_numpoints(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_numpoints(geometry) TO postgres;
GRANT ALL ON FUNCTION st_numpoints(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_numpoints(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_orderingequals(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_orderingequals(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_orderingequals(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_orderingequals(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_orderingequals(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_orderingequals(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_overlaps(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_overlaps(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_overlaps(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_overlaps(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_overlaps(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_overlaps(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_perimeter(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_perimeter(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_perimeter(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_perimeter(geometry) TO postgres;
GRANT ALL ON FUNCTION st_perimeter(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_perimeter(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_perimeter2d(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_perimeter2d(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_perimeter2d(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_perimeter2d(geometry) TO postgres;
GRANT ALL ON FUNCTION st_perimeter2d(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_perimeter2d(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_perimeter3d(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_perimeter3d(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_perimeter3d(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_perimeter3d(geometry) TO postgres;
GRANT ALL ON FUNCTION st_perimeter3d(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_perimeter3d(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_point(double precision, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_point(double precision, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_point(double precision, double precision) FROM postgres;
GRANT ALL ON FUNCTION st_point(double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION st_point(double precision, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION st_point(double precision, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: st_point_inside_circle(geometry, double precision, double precision, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_point_inside_circle(geometry, double precision, double precision, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_point_inside_circle(geometry, double precision, double precision, double precision) FROM postgres;
GRANT ALL ON FUNCTION st_point_inside_circle(geometry, double precision, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION st_point_inside_circle(geometry, double precision, double precision, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION st_point_inside_circle(geometry, double precision, double precision, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: st_pointfromtext(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_pointfromtext(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_pointfromtext(text) FROM postgres;
GRANT ALL ON FUNCTION st_pointfromtext(text) TO postgres;
GRANT ALL ON FUNCTION st_pointfromtext(text) TO PUBLIC;
GRANT ALL ON FUNCTION st_pointfromtext(text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_pointfromtext(text, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_pointfromtext(text, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_pointfromtext(text, integer) FROM postgres;
GRANT ALL ON FUNCTION st_pointfromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION st_pointfromtext(text, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_pointfromtext(text, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_pointfromwkb(bytea); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_pointfromwkb(bytea) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_pointfromwkb(bytea) FROM postgres;
GRANT ALL ON FUNCTION st_pointfromwkb(bytea) TO postgres;
GRANT ALL ON FUNCTION st_pointfromwkb(bytea) TO PUBLIC;
GRANT ALL ON FUNCTION st_pointfromwkb(bytea) TO data_admin WITH GRANT OPTION;


--
-- Name: st_pointfromwkb(bytea, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_pointfromwkb(bytea, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_pointfromwkb(bytea, integer) FROM postgres;
GRANT ALL ON FUNCTION st_pointfromwkb(bytea, integer) TO postgres;
GRANT ALL ON FUNCTION st_pointfromwkb(bytea, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_pointfromwkb(bytea, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_pointn(geometry, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_pointn(geometry, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_pointn(geometry, integer) FROM postgres;
GRANT ALL ON FUNCTION st_pointn(geometry, integer) TO postgres;
GRANT ALL ON FUNCTION st_pointn(geometry, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_pointn(geometry, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_pointonsurface(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_pointonsurface(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_pointonsurface(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_pointonsurface(geometry) TO postgres;
GRANT ALL ON FUNCTION st_pointonsurface(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_pointonsurface(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_polyfromtext(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_polyfromtext(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_polyfromtext(text) FROM postgres;
GRANT ALL ON FUNCTION st_polyfromtext(text) TO postgres;
GRANT ALL ON FUNCTION st_polyfromtext(text) TO PUBLIC;
GRANT ALL ON FUNCTION st_polyfromtext(text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_polyfromtext(text, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_polyfromtext(text, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_polyfromtext(text, integer) FROM postgres;
GRANT ALL ON FUNCTION st_polyfromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION st_polyfromtext(text, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_polyfromtext(text, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_polyfromwkb(bytea); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_polyfromwkb(bytea) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_polyfromwkb(bytea) FROM postgres;
GRANT ALL ON FUNCTION st_polyfromwkb(bytea) TO postgres;
GRANT ALL ON FUNCTION st_polyfromwkb(bytea) TO PUBLIC;
GRANT ALL ON FUNCTION st_polyfromwkb(bytea) TO data_admin WITH GRANT OPTION;


--
-- Name: st_polyfromwkb(bytea, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_polyfromwkb(bytea, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_polyfromwkb(bytea, integer) FROM postgres;
GRANT ALL ON FUNCTION st_polyfromwkb(bytea, integer) TO postgres;
GRANT ALL ON FUNCTION st_polyfromwkb(bytea, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_polyfromwkb(bytea, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_polygon(geometry, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_polygon(geometry, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_polygon(geometry, integer) FROM postgres;
GRANT ALL ON FUNCTION st_polygon(geometry, integer) TO postgres;
GRANT ALL ON FUNCTION st_polygon(geometry, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_polygon(geometry, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_polygonfromtext(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_polygonfromtext(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_polygonfromtext(text) FROM postgres;
GRANT ALL ON FUNCTION st_polygonfromtext(text) TO postgres;
GRANT ALL ON FUNCTION st_polygonfromtext(text) TO PUBLIC;
GRANT ALL ON FUNCTION st_polygonfromtext(text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_polygonfromtext(text, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_polygonfromtext(text, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_polygonfromtext(text, integer) FROM postgres;
GRANT ALL ON FUNCTION st_polygonfromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION st_polygonfromtext(text, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_polygonfromtext(text, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_polygonfromwkb(bytea); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_polygonfromwkb(bytea) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_polygonfromwkb(bytea) FROM postgres;
GRANT ALL ON FUNCTION st_polygonfromwkb(bytea) TO postgres;
GRANT ALL ON FUNCTION st_polygonfromwkb(bytea) TO PUBLIC;
GRANT ALL ON FUNCTION st_polygonfromwkb(bytea) TO data_admin WITH GRANT OPTION;


--
-- Name: st_polygonfromwkb(bytea, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_polygonfromwkb(bytea, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_polygonfromwkb(bytea, integer) FROM postgres;
GRANT ALL ON FUNCTION st_polygonfromwkb(bytea, integer) TO postgres;
GRANT ALL ON FUNCTION st_polygonfromwkb(bytea, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_polygonfromwkb(bytea, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_polygonize(geometry[]); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_polygonize(geometry[]) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_polygonize(geometry[]) FROM postgres;
GRANT ALL ON FUNCTION st_polygonize(geometry[]) TO postgres;
GRANT ALL ON FUNCTION st_polygonize(geometry[]) TO PUBLIC;
GRANT ALL ON FUNCTION st_polygonize(geometry[]) TO data_admin WITH GRANT OPTION;


--
-- Name: st_polygonize_garray(geometry[]); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_polygonize_garray(geometry[]) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_polygonize_garray(geometry[]) FROM postgres;
GRANT ALL ON FUNCTION st_polygonize_garray(geometry[]) TO postgres;
GRANT ALL ON FUNCTION st_polygonize_garray(geometry[]) TO PUBLIC;
GRANT ALL ON FUNCTION st_polygonize_garray(geometry[]) TO data_admin WITH GRANT OPTION;


--
-- Name: st_postgis_gist_joinsel(internal, oid, internal, smallint); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_postgis_gist_joinsel(internal, oid, internal, smallint) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_postgis_gist_joinsel(internal, oid, internal, smallint) FROM postgres;
GRANT ALL ON FUNCTION st_postgis_gist_joinsel(internal, oid, internal, smallint) TO postgres;
GRANT ALL ON FUNCTION st_postgis_gist_joinsel(internal, oid, internal, smallint) TO PUBLIC;
GRANT ALL ON FUNCTION st_postgis_gist_joinsel(internal, oid, internal, smallint) TO data_admin WITH GRANT OPTION;


--
-- Name: st_postgis_gist_sel(internal, oid, internal, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_postgis_gist_sel(internal, oid, internal, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_postgis_gist_sel(internal, oid, internal, integer) FROM postgres;
GRANT ALL ON FUNCTION st_postgis_gist_sel(internal, oid, internal, integer) TO postgres;
GRANT ALL ON FUNCTION st_postgis_gist_sel(internal, oid, internal, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_postgis_gist_sel(internal, oid, internal, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_relate(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_relate(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_relate(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_relate(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_relate(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_relate(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_relate(geometry, geometry, text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_relate(geometry, geometry, text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_relate(geometry, geometry, text) FROM postgres;
GRANT ALL ON FUNCTION st_relate(geometry, geometry, text) TO postgres;
GRANT ALL ON FUNCTION st_relate(geometry, geometry, text) TO PUBLIC;
GRANT ALL ON FUNCTION st_relate(geometry, geometry, text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_removepoint(geometry, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_removepoint(geometry, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_removepoint(geometry, integer) FROM postgres;
GRANT ALL ON FUNCTION st_removepoint(geometry, integer) TO postgres;
GRANT ALL ON FUNCTION st_removepoint(geometry, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_removepoint(geometry, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_reverse(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_reverse(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_reverse(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_reverse(geometry) TO postgres;
GRANT ALL ON FUNCTION st_reverse(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_reverse(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_rotate(geometry, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_rotate(geometry, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_rotate(geometry, double precision) FROM postgres;
GRANT ALL ON FUNCTION st_rotate(geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION st_rotate(geometry, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION st_rotate(geometry, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: st_rotatex(geometry, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_rotatex(geometry, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_rotatex(geometry, double precision) FROM postgres;
GRANT ALL ON FUNCTION st_rotatex(geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION st_rotatex(geometry, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION st_rotatex(geometry, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: st_rotatey(geometry, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_rotatey(geometry, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_rotatey(geometry, double precision) FROM postgres;
GRANT ALL ON FUNCTION st_rotatey(geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION st_rotatey(geometry, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION st_rotatey(geometry, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: st_rotatez(geometry, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_rotatez(geometry, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_rotatez(geometry, double precision) FROM postgres;
GRANT ALL ON FUNCTION st_rotatez(geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION st_rotatez(geometry, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION st_rotatez(geometry, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: st_scale(geometry, double precision, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_scale(geometry, double precision, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_scale(geometry, double precision, double precision) FROM postgres;
GRANT ALL ON FUNCTION st_scale(geometry, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION st_scale(geometry, double precision, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION st_scale(geometry, double precision, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: st_scale(geometry, double precision, double precision, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_scale(geometry, double precision, double precision, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_scale(geometry, double precision, double precision, double precision) FROM postgres;
GRANT ALL ON FUNCTION st_scale(geometry, double precision, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION st_scale(geometry, double precision, double precision, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION st_scale(geometry, double precision, double precision, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: st_segmentize(geometry, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_segmentize(geometry, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_segmentize(geometry, double precision) FROM postgres;
GRANT ALL ON FUNCTION st_segmentize(geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION st_segmentize(geometry, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION st_segmentize(geometry, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: st_setfactor(chip, real); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_setfactor(chip, real) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_setfactor(chip, real) FROM postgres;
GRANT ALL ON FUNCTION st_setfactor(chip, real) TO postgres;
GRANT ALL ON FUNCTION st_setfactor(chip, real) TO PUBLIC;
GRANT ALL ON FUNCTION st_setfactor(chip, real) TO data_admin WITH GRANT OPTION;


--
-- Name: st_setpoint(geometry, integer, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_setpoint(geometry, integer, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_setpoint(geometry, integer, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_setpoint(geometry, integer, geometry) TO postgres;
GRANT ALL ON FUNCTION st_setpoint(geometry, integer, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_setpoint(geometry, integer, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_setsrid(geometry, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_setsrid(geometry, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_setsrid(geometry, integer) FROM postgres;
GRANT ALL ON FUNCTION st_setsrid(geometry, integer) TO postgres;
GRANT ALL ON FUNCTION st_setsrid(geometry, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_setsrid(geometry, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_shift_longitude(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_shift_longitude(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_shift_longitude(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_shift_longitude(geometry) TO postgres;
GRANT ALL ON FUNCTION st_shift_longitude(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_shift_longitude(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_shortestline(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_shortestline(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_shortestline(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_shortestline(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_shortestline(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_shortestline(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_simplify(geometry, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_simplify(geometry, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_simplify(geometry, double precision) FROM postgres;
GRANT ALL ON FUNCTION st_simplify(geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION st_simplify(geometry, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION st_simplify(geometry, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: st_simplifypreservetopology(geometry, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_simplifypreservetopology(geometry, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_simplifypreservetopology(geometry, double precision) FROM postgres;
GRANT ALL ON FUNCTION st_simplifypreservetopology(geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION st_simplifypreservetopology(geometry, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION st_simplifypreservetopology(geometry, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: st_snaptogrid(geometry, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_snaptogrid(geometry, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_snaptogrid(geometry, double precision) FROM postgres;
GRANT ALL ON FUNCTION st_snaptogrid(geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION st_snaptogrid(geometry, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION st_snaptogrid(geometry, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: st_snaptogrid(geometry, double precision, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_snaptogrid(geometry, double precision, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_snaptogrid(geometry, double precision, double precision) FROM postgres;
GRANT ALL ON FUNCTION st_snaptogrid(geometry, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION st_snaptogrid(geometry, double precision, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION st_snaptogrid(geometry, double precision, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: st_snaptogrid(geometry, double precision, double precision, double precision, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_snaptogrid(geometry, double precision, double precision, double precision, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_snaptogrid(geometry, double precision, double precision, double precision, double precision) FROM postgres;
GRANT ALL ON FUNCTION st_snaptogrid(geometry, double precision, double precision, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION st_snaptogrid(geometry, double precision, double precision, double precision, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION st_snaptogrid(geometry, double precision, double precision, double precision, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: st_snaptogrid(geometry, geometry, double precision, double precision, double precision, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_snaptogrid(geometry, geometry, double precision, double precision, double precision, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_snaptogrid(geometry, geometry, double precision, double precision, double precision, double precision) FROM postgres;
GRANT ALL ON FUNCTION st_snaptogrid(geometry, geometry, double precision, double precision, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION st_snaptogrid(geometry, geometry, double precision, double precision, double precision, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION st_snaptogrid(geometry, geometry, double precision, double precision, double precision, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: st_spheroid_in(cstring); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_spheroid_in(cstring) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_spheroid_in(cstring) FROM postgres;
GRANT ALL ON FUNCTION st_spheroid_in(cstring) TO postgres;
GRANT ALL ON FUNCTION st_spheroid_in(cstring) TO PUBLIC;
GRANT ALL ON FUNCTION st_spheroid_in(cstring) TO data_admin WITH GRANT OPTION;


--
-- Name: st_spheroid_out(spheroid); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_spheroid_out(spheroid) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_spheroid_out(spheroid) FROM postgres;
GRANT ALL ON FUNCTION st_spheroid_out(spheroid) TO postgres;
GRANT ALL ON FUNCTION st_spheroid_out(spheroid) TO PUBLIC;
GRANT ALL ON FUNCTION st_spheroid_out(spheroid) TO data_admin WITH GRANT OPTION;


--
-- Name: st_srid(chip); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_srid(chip) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_srid(chip) FROM postgres;
GRANT ALL ON FUNCTION st_srid(chip) TO postgres;
GRANT ALL ON FUNCTION st_srid(chip) TO PUBLIC;
GRANT ALL ON FUNCTION st_srid(chip) TO data_admin WITH GRANT OPTION;


--
-- Name: st_srid(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_srid(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_srid(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_srid(geometry) TO postgres;
GRANT ALL ON FUNCTION st_srid(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_srid(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_startpoint(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_startpoint(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_startpoint(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_startpoint(geometry) TO postgres;
GRANT ALL ON FUNCTION st_startpoint(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_startpoint(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_summary(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_summary(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_summary(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_summary(geometry) TO postgres;
GRANT ALL ON FUNCTION st_summary(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_summary(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_symdifference(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_symdifference(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_symdifference(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_symdifference(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_symdifference(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_symdifference(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_symmetricdifference(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_symmetricdifference(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_symmetricdifference(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_symmetricdifference(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_symmetricdifference(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_symmetricdifference(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_text(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_text(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_text(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_text(geometry) TO postgres;
GRANT ALL ON FUNCTION st_text(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_text(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_touches(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_touches(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_touches(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_touches(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_touches(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_touches(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_transform(geometry, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_transform(geometry, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_transform(geometry, integer) FROM postgres;
GRANT ALL ON FUNCTION st_transform(geometry, integer) TO postgres;
GRANT ALL ON FUNCTION st_transform(geometry, integer) TO PUBLIC;
GRANT ALL ON FUNCTION st_transform(geometry, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: st_translate(geometry, double precision, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_translate(geometry, double precision, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_translate(geometry, double precision, double precision) FROM postgres;
GRANT ALL ON FUNCTION st_translate(geometry, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION st_translate(geometry, double precision, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION st_translate(geometry, double precision, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: st_translate(geometry, double precision, double precision, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_translate(geometry, double precision, double precision, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_translate(geometry, double precision, double precision, double precision) FROM postgres;
GRANT ALL ON FUNCTION st_translate(geometry, double precision, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION st_translate(geometry, double precision, double precision, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION st_translate(geometry, double precision, double precision, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: st_transscale(geometry, double precision, double precision, double precision, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_transscale(geometry, double precision, double precision, double precision, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_transscale(geometry, double precision, double precision, double precision, double precision) FROM postgres;
GRANT ALL ON FUNCTION st_transscale(geometry, double precision, double precision, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION st_transscale(geometry, double precision, double precision, double precision, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION st_transscale(geometry, double precision, double precision, double precision, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: st_union(geometry[]); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_union(geometry[]) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_union(geometry[]) FROM postgres;
GRANT ALL ON FUNCTION st_union(geometry[]) TO postgres;
GRANT ALL ON FUNCTION st_union(geometry[]) TO PUBLIC;
GRANT ALL ON FUNCTION st_union(geometry[]) TO data_admin WITH GRANT OPTION;


--
-- Name: st_union(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_union(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_union(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_union(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_union(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_union(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_unite_garray(geometry[]); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_unite_garray(geometry[]) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_unite_garray(geometry[]) FROM postgres;
GRANT ALL ON FUNCTION st_unite_garray(geometry[]) TO postgres;
GRANT ALL ON FUNCTION st_unite_garray(geometry[]) TO PUBLIC;
GRANT ALL ON FUNCTION st_unite_garray(geometry[]) TO data_admin WITH GRANT OPTION;


--
-- Name: st_width(chip); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_width(chip) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_width(chip) FROM postgres;
GRANT ALL ON FUNCTION st_width(chip) TO postgres;
GRANT ALL ON FUNCTION st_width(chip) TO PUBLIC;
GRANT ALL ON FUNCTION st_width(chip) TO data_admin WITH GRANT OPTION;


--
-- Name: st_within(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_within(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_within(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION st_within(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION st_within(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_within(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_wkbtosql(bytea); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_wkbtosql(bytea) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_wkbtosql(bytea) FROM postgres;
GRANT ALL ON FUNCTION st_wkbtosql(bytea) TO postgres;
GRANT ALL ON FUNCTION st_wkbtosql(bytea) TO PUBLIC;
GRANT ALL ON FUNCTION st_wkbtosql(bytea) TO data_admin WITH GRANT OPTION;


--
-- Name: st_wkttosql(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_wkttosql(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_wkttosql(text) FROM postgres;
GRANT ALL ON FUNCTION st_wkttosql(text) TO postgres;
GRANT ALL ON FUNCTION st_wkttosql(text) TO PUBLIC;
GRANT ALL ON FUNCTION st_wkttosql(text) TO data_admin WITH GRANT OPTION;


--
-- Name: st_x(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_x(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_x(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_x(geometry) TO postgres;
GRANT ALL ON FUNCTION st_x(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_x(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_xmax(box3d); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_xmax(box3d) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_xmax(box3d) FROM postgres;
GRANT ALL ON FUNCTION st_xmax(box3d) TO postgres;
GRANT ALL ON FUNCTION st_xmax(box3d) TO PUBLIC;
GRANT ALL ON FUNCTION st_xmax(box3d) TO data_admin WITH GRANT OPTION;


--
-- Name: st_xmin(box3d); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_xmin(box3d) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_xmin(box3d) FROM postgres;
GRANT ALL ON FUNCTION st_xmin(box3d) TO postgres;
GRANT ALL ON FUNCTION st_xmin(box3d) TO PUBLIC;
GRANT ALL ON FUNCTION st_xmin(box3d) TO data_admin WITH GRANT OPTION;


--
-- Name: st_y(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_y(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_y(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_y(geometry) TO postgres;
GRANT ALL ON FUNCTION st_y(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_y(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_ymax(box3d); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_ymax(box3d) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_ymax(box3d) FROM postgres;
GRANT ALL ON FUNCTION st_ymax(box3d) TO postgres;
GRANT ALL ON FUNCTION st_ymax(box3d) TO PUBLIC;
GRANT ALL ON FUNCTION st_ymax(box3d) TO data_admin WITH GRANT OPTION;


--
-- Name: st_ymin(box3d); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_ymin(box3d) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_ymin(box3d) FROM postgres;
GRANT ALL ON FUNCTION st_ymin(box3d) TO postgres;
GRANT ALL ON FUNCTION st_ymin(box3d) TO PUBLIC;
GRANT ALL ON FUNCTION st_ymin(box3d) TO data_admin WITH GRANT OPTION;


--
-- Name: st_z(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_z(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_z(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_z(geometry) TO postgres;
GRANT ALL ON FUNCTION st_z(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_z(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_zmax(box3d); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_zmax(box3d) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_zmax(box3d) FROM postgres;
GRANT ALL ON FUNCTION st_zmax(box3d) TO postgres;
GRANT ALL ON FUNCTION st_zmax(box3d) TO PUBLIC;
GRANT ALL ON FUNCTION st_zmax(box3d) TO data_admin WITH GRANT OPTION;


--
-- Name: st_zmflag(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_zmflag(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_zmflag(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_zmflag(geometry) TO postgres;
GRANT ALL ON FUNCTION st_zmflag(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_zmflag(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_zmin(box3d); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_zmin(box3d) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_zmin(box3d) FROM postgres;
GRANT ALL ON FUNCTION st_zmin(box3d) TO postgres;
GRANT ALL ON FUNCTION st_zmin(box3d) TO PUBLIC;
GRANT ALL ON FUNCTION st_zmin(box3d) TO data_admin WITH GRANT OPTION;


--
-- Name: startpoint(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION startpoint(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION startpoint(geometry) FROM postgres;
GRANT ALL ON FUNCTION startpoint(geometry) TO postgres;
GRANT ALL ON FUNCTION startpoint(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION startpoint(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: summary(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION summary(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION summary(geometry) FROM postgres;
GRANT ALL ON FUNCTION summary(geometry) TO postgres;
GRANT ALL ON FUNCTION summary(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION summary(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: symdifference(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION symdifference(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION symdifference(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION symdifference(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION symdifference(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION symdifference(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: symmetricdifference(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION symmetricdifference(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION symmetricdifference(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION symmetricdifference(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION symmetricdifference(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION symmetricdifference(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: text(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION text(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION text(geometry) FROM postgres;
GRANT ALL ON FUNCTION text(geometry) TO postgres;
GRANT ALL ON FUNCTION text(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION text(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: touches(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION touches(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION touches(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION touches(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION touches(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION touches(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: transform(geometry, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION transform(geometry, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION transform(geometry, integer) FROM postgres;
GRANT ALL ON FUNCTION transform(geometry, integer) TO postgres;
GRANT ALL ON FUNCTION transform(geometry, integer) TO PUBLIC;
GRANT ALL ON FUNCTION transform(geometry, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: translate(geometry, double precision, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION translate(geometry, double precision, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION translate(geometry, double precision, double precision) FROM postgres;
GRANT ALL ON FUNCTION translate(geometry, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION translate(geometry, double precision, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION translate(geometry, double precision, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: translate(geometry, double precision, double precision, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION translate(geometry, double precision, double precision, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION translate(geometry, double precision, double precision, double precision) FROM postgres;
GRANT ALL ON FUNCTION translate(geometry, double precision, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION translate(geometry, double precision, double precision, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION translate(geometry, double precision, double precision, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: transscale(geometry, double precision, double precision, double precision, double precision); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION transscale(geometry, double precision, double precision, double precision, double precision) FROM PUBLIC;
REVOKE ALL ON FUNCTION transscale(geometry, double precision, double precision, double precision, double precision) FROM postgres;
GRANT ALL ON FUNCTION transscale(geometry, double precision, double precision, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION transscale(geometry, double precision, double precision, double precision, double precision) TO PUBLIC;
GRANT ALL ON FUNCTION transscale(geometry, double precision, double precision, double precision, double precision) TO data_admin WITH GRANT OPTION;


--
-- Name: unite_garray(geometry[]); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION unite_garray(geometry[]) FROM PUBLIC;
REVOKE ALL ON FUNCTION unite_garray(geometry[]) FROM postgres;
GRANT ALL ON FUNCTION unite_garray(geometry[]) TO postgres;
GRANT ALL ON FUNCTION unite_garray(geometry[]) TO PUBLIC;
GRANT ALL ON FUNCTION unite_garray(geometry[]) TO data_admin WITH GRANT OPTION;


--
-- Name: unlockrows(text); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION unlockrows(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION unlockrows(text) FROM postgres;
GRANT ALL ON FUNCTION unlockrows(text) TO postgres;
GRANT ALL ON FUNCTION unlockrows(text) TO PUBLIC;
GRANT ALL ON FUNCTION unlockrows(text) TO data_admin WITH GRANT OPTION;


--
-- Name: updategeometrysrid(character varying, character varying, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION updategeometrysrid(character varying, character varying, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION updategeometrysrid(character varying, character varying, integer) FROM postgres;
GRANT ALL ON FUNCTION updategeometrysrid(character varying, character varying, integer) TO postgres;
GRANT ALL ON FUNCTION updategeometrysrid(character varying, character varying, integer) TO PUBLIC;
GRANT ALL ON FUNCTION updategeometrysrid(character varying, character varying, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: updategeometrysrid(character varying, character varying, character varying, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION updategeometrysrid(character varying, character varying, character varying, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION updategeometrysrid(character varying, character varying, character varying, integer) FROM postgres;
GRANT ALL ON FUNCTION updategeometrysrid(character varying, character varying, character varying, integer) TO postgres;
GRANT ALL ON FUNCTION updategeometrysrid(character varying, character varying, character varying, integer) TO PUBLIC;
GRANT ALL ON FUNCTION updategeometrysrid(character varying, character varying, character varying, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: updategeometrysrid(character varying, character varying, character varying, character varying, integer); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION updategeometrysrid(character varying, character varying, character varying, character varying, integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION updategeometrysrid(character varying, character varying, character varying, character varying, integer) FROM postgres;
GRANT ALL ON FUNCTION updategeometrysrid(character varying, character varying, character varying, character varying, integer) TO postgres;
GRANT ALL ON FUNCTION updategeometrysrid(character varying, character varying, character varying, character varying, integer) TO PUBLIC;
GRANT ALL ON FUNCTION updategeometrysrid(character varying, character varying, character varying, character varying, integer) TO data_admin WITH GRANT OPTION;


--
-- Name: width(chip); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION width(chip) FROM PUBLIC;
REVOKE ALL ON FUNCTION width(chip) FROM postgres;
GRANT ALL ON FUNCTION width(chip) TO postgres;
GRANT ALL ON FUNCTION width(chip) TO PUBLIC;
GRANT ALL ON FUNCTION width(chip) TO data_admin WITH GRANT OPTION;


--
-- Name: within(geometry, geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION within(geometry, geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION within(geometry, geometry) FROM postgres;
GRANT ALL ON FUNCTION within(geometry, geometry) TO postgres;
GRANT ALL ON FUNCTION within(geometry, geometry) TO PUBLIC;
GRANT ALL ON FUNCTION within(geometry, geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: x(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION x(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION x(geometry) FROM postgres;
GRANT ALL ON FUNCTION x(geometry) TO postgres;
GRANT ALL ON FUNCTION x(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION x(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: xmax(box3d); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION xmax(box3d) FROM PUBLIC;
REVOKE ALL ON FUNCTION xmax(box3d) FROM postgres;
GRANT ALL ON FUNCTION xmax(box3d) TO postgres;
GRANT ALL ON FUNCTION xmax(box3d) TO PUBLIC;
GRANT ALL ON FUNCTION xmax(box3d) TO data_admin WITH GRANT OPTION;


--
-- Name: xmin(box3d); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION xmin(box3d) FROM PUBLIC;
REVOKE ALL ON FUNCTION xmin(box3d) FROM postgres;
GRANT ALL ON FUNCTION xmin(box3d) TO postgres;
GRANT ALL ON FUNCTION xmin(box3d) TO PUBLIC;
GRANT ALL ON FUNCTION xmin(box3d) TO data_admin WITH GRANT OPTION;


--
-- Name: y(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION y(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION y(geometry) FROM postgres;
GRANT ALL ON FUNCTION y(geometry) TO postgres;
GRANT ALL ON FUNCTION y(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION y(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: ymax(box3d); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION ymax(box3d) FROM PUBLIC;
REVOKE ALL ON FUNCTION ymax(box3d) FROM postgres;
GRANT ALL ON FUNCTION ymax(box3d) TO postgres;
GRANT ALL ON FUNCTION ymax(box3d) TO PUBLIC;
GRANT ALL ON FUNCTION ymax(box3d) TO data_admin WITH GRANT OPTION;


--
-- Name: ymin(box3d); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION ymin(box3d) FROM PUBLIC;
REVOKE ALL ON FUNCTION ymin(box3d) FROM postgres;
GRANT ALL ON FUNCTION ymin(box3d) TO postgres;
GRANT ALL ON FUNCTION ymin(box3d) TO PUBLIC;
GRANT ALL ON FUNCTION ymin(box3d) TO data_admin WITH GRANT OPTION;


--
-- Name: z(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION z(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION z(geometry) FROM postgres;
GRANT ALL ON FUNCTION z(geometry) TO postgres;
GRANT ALL ON FUNCTION z(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION z(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: zmax(box3d); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION zmax(box3d) FROM PUBLIC;
REVOKE ALL ON FUNCTION zmax(box3d) FROM postgres;
GRANT ALL ON FUNCTION zmax(box3d) TO postgres;
GRANT ALL ON FUNCTION zmax(box3d) TO PUBLIC;
GRANT ALL ON FUNCTION zmax(box3d) TO data_admin WITH GRANT OPTION;


--
-- Name: zmflag(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION zmflag(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION zmflag(geometry) FROM postgres;
GRANT ALL ON FUNCTION zmflag(geometry) TO postgres;
GRANT ALL ON FUNCTION zmflag(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION zmflag(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: zmin(box3d); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION zmin(box3d) FROM PUBLIC;
REVOKE ALL ON FUNCTION zmin(box3d) FROM postgres;
GRANT ALL ON FUNCTION zmin(box3d) TO postgres;
GRANT ALL ON FUNCTION zmin(box3d) TO PUBLIC;
GRANT ALL ON FUNCTION zmin(box3d) TO data_admin WITH GRANT OPTION;


--
-- Name: accum(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION accum(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION accum(geometry) FROM postgres;
GRANT ALL ON FUNCTION accum(geometry) TO postgres;
GRANT ALL ON FUNCTION accum(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION accum(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: collect(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION collect(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION collect(geometry) FROM postgres;
GRANT ALL ON FUNCTION collect(geometry) TO postgres;
GRANT ALL ON FUNCTION collect(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION collect(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: extent(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION extent(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION extent(geometry) FROM postgres;
GRANT ALL ON FUNCTION extent(geometry) TO postgres;
GRANT ALL ON FUNCTION extent(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION extent(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: extent3d(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION extent3d(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION extent3d(geometry) FROM postgres;
GRANT ALL ON FUNCTION extent3d(geometry) TO postgres;
GRANT ALL ON FUNCTION extent3d(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION extent3d(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: makeline(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION makeline(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION makeline(geometry) FROM postgres;
GRANT ALL ON FUNCTION makeline(geometry) TO postgres;
GRANT ALL ON FUNCTION makeline(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION makeline(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: memcollect(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION memcollect(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION memcollect(geometry) FROM postgres;
GRANT ALL ON FUNCTION memcollect(geometry) TO postgres;
GRANT ALL ON FUNCTION memcollect(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION memcollect(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: memgeomunion(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION memgeomunion(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION memgeomunion(geometry) FROM postgres;
GRANT ALL ON FUNCTION memgeomunion(geometry) TO postgres;
GRANT ALL ON FUNCTION memgeomunion(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION memgeomunion(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: polygonize(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION polygonize(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION polygonize(geometry) FROM postgres;
GRANT ALL ON FUNCTION polygonize(geometry) TO postgres;
GRANT ALL ON FUNCTION polygonize(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION polygonize(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_accum(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_accum(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_accum(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_accum(geometry) TO postgres;
GRANT ALL ON FUNCTION st_accum(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_accum(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_collect(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_collect(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_collect(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_collect(geometry) TO postgres;
GRANT ALL ON FUNCTION st_collect(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_collect(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_extent(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_extent(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_extent(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_extent(geometry) TO postgres;
GRANT ALL ON FUNCTION st_extent(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_extent(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_extent3d(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_extent3d(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_extent3d(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_extent3d(geometry) TO postgres;
GRANT ALL ON FUNCTION st_extent3d(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_extent3d(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_makeline(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_makeline(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_makeline(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_makeline(geometry) TO postgres;
GRANT ALL ON FUNCTION st_makeline(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_makeline(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_memcollect(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_memcollect(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_memcollect(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_memcollect(geometry) TO postgres;
GRANT ALL ON FUNCTION st_memcollect(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_memcollect(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_memunion(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_memunion(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_memunion(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_memunion(geometry) TO postgres;
GRANT ALL ON FUNCTION st_memunion(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_memunion(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_polygonize(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_polygonize(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_polygonize(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_polygonize(geometry) TO postgres;
GRANT ALL ON FUNCTION st_polygonize(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_polygonize(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: st_union(geometry); Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON FUNCTION st_union(geometry) FROM PUBLIC;
REVOKE ALL ON FUNCTION st_union(geometry) FROM postgres;
GRANT ALL ON FUNCTION st_union(geometry) TO postgres;
GRANT ALL ON FUNCTION st_union(geometry) TO PUBLIC;
GRANT ALL ON FUNCTION st_union(geometry) TO data_admin WITH GRANT OPTION;


--
-- Name: dh_collars; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE dh_collars FROM PUBLIC;


--
-- Name: operation_active; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE operation_active FROM PUBLIC;


--
-- Name: dh_litho; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE dh_litho FROM PUBLIC;


--
-- Name: dh_sampling_grades; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE dh_sampling_grades FROM PUBLIC;


--
-- Name: topo_points; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE topo_points FROM PUBLIC;
GRANT ALL ON TABLE topo_points TO postgres;


--
-- Name: shift_reports; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE shift_reports FROM PUBLIC;


--
-- Name: ancient_workings; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE ancient_workings FROM PUBLIC;


--
-- Name: baselines; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE baselines FROM PUBLIC;


--
-- Name: lab_ana_results; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE lab_ana_results FROM PUBLIC;


--
-- Name: dh_core_boxes; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE dh_core_boxes FROM PUBLIC;


--
-- Name: dh_density; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE dh_density FROM PUBLIC;


--
-- Name: dh_devia; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE dh_devia FROM PUBLIC;
GRANT ALL ON TABLE dh_devia TO postgres;


--
-- Name: dh_followup; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE dh_followup FROM PUBLIC;


--
-- Name: dh_mineralised_intervals; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE dh_mineralised_intervals FROM PUBLIC;
GRANT ALL ON TABLE dh_mineralised_intervals TO postgres;


--
-- Name: dh_quicklog; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE dh_quicklog FROM PUBLIC;


--
-- Name: lab_ana_columns_definition; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE lab_ana_columns_definition FROM PUBLIC;


--
-- Name: dh_sampling_bottle_roll; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE dh_sampling_bottle_roll FROM PUBLIC;


--
-- Name: dh_struct_measures; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE dh_struct_measures FROM PUBLIC;


--
-- Name: dh_tech; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE dh_tech FROM PUBLIC;
GRANT ALL ON TABLE dh_tech TO postgres;


--
-- Name: dh_thinsections; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE dh_thinsections FROM PUBLIC;


--
-- Name: field_observations; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE field_observations FROM PUBLIC;


--
-- Name: field_observations_struct_measures; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE field_observations_struct_measures FROM PUBLIC;


--
-- Name: field_photos; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE field_photos FROM PUBLIC;


--
-- Name: formations_group_lithos; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE formations_group_lithos FROM PUBLIC;


--
-- Name: geoch_ana; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE geoch_ana FROM PUBLIC;
GRANT ALL ON TABLE geoch_ana TO postgres;


--
-- Name: geoch_sampling; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE geoch_sampling FROM PUBLIC;
GRANT ALL ON TABLE geoch_sampling TO postgres;


--
-- Name: geoch_sampling_grades; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE geoch_sampling_grades FROM PUBLIC;


--
-- Name: gpy_mag_ground; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE gpy_mag_ground FROM PUBLIC;


--
-- Name: grade_ctrl; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE grade_ctrl FROM PUBLIC;
GRANT ALL ON TABLE grade_ctrl TO postgres;


SET search_path = pierre, pg_catalog;

--
-- Name: rock_ana; Type: ACL; Schema: pierre; Owner: -
--

REVOKE ALL ON TABLE rock_ana FROM PUBLIC;
REVOKE ALL ON TABLE rock_ana FROM pierre;
GRANT ALL ON TABLE rock_ana TO pierre;
GRANT ALL ON TABLE rock_ana TO postgres;


--
-- Name: hammer_ana_numauto_seq; Type: ACL; Schema: pierre; Owner: -
--

REVOKE ALL ON SEQUENCE hammer_ana_numauto_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE hammer_ana_numauto_seq FROM pierre;
GRANT ALL ON SEQUENCE hammer_ana_numauto_seq TO pierre;
GRANT ALL ON SEQUENCE hammer_ana_numauto_seq TO postgres;


SET search_path = public, pg_catalog;

--
-- Name: index_geo_documentation; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE index_geo_documentation FROM PUBLIC;


--
-- Name: lab_ana_batches_expedition; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE lab_ana_batches_expedition FROM PUBLIC;


--
-- Name: lab_ana_batches_reception; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE lab_ana_batches_reception FROM PUBLIC;


--
-- Name: lab_ana_qaqc_results; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE lab_ana_qaqc_results FROM PUBLIC;


--
-- Name: lex_codes; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE lex_codes FROM PUBLIC;


--
-- Name: lex_datasource; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE lex_datasource FROM PUBLIC;


--
-- Name: lex_standard; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE lex_standard FROM PUBLIC;


--
-- Name: licences; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE licences FROM PUBLIC;


--
-- Name: mag_declination; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE mag_declination FROM PUBLIC;


--
-- Name: occurrences; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE occurrences FROM PUBLIC;


--
-- Name: operations; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE operations FROM PUBLIC;


--
-- Name: qc_sampling; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE qc_sampling FROM PUBLIC;


--
-- Name: qc_standards; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE qc_standards FROM PUBLIC;


SET search_path = pierre, pg_catalog;

--
-- Name: rock_sampling; Type: ACL; Schema: pierre; Owner: -
--

REVOKE ALL ON TABLE rock_sampling FROM PUBLIC;
REVOKE ALL ON TABLE rock_sampling FROM pierre;
GRANT ALL ON TABLE rock_sampling TO pierre;
GRANT ALL ON TABLE rock_sampling TO postgres;


SET search_path = public, pg_catalog;

--
-- Name: surface_samples_grades; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE surface_samples_grades FROM PUBLIC;


SET search_path = pierre, pg_catalog;

--
-- Name: toudoux_dh_sampling_grades_datasource_979; Type: ACL; Schema: pierre; Owner: -
--

REVOKE ALL ON TABLE toudoux_dh_sampling_grades_datasource_979 FROM PUBLIC;
REVOKE ALL ON TABLE toudoux_dh_sampling_grades_datasource_979 FROM pierre;
GRANT ALL ON TABLE toudoux_dh_sampling_grades_datasource_979 TO pierre;
GRANT ALL ON TABLE toudoux_dh_sampling_grades_datasource_979 TO tanguy;
GRANT SELECT ON TABLE toudoux_dh_sampling_grades_datasource_979 TO smiexplo;
GRANT ALL ON TABLE toudoux_dh_sampling_grades_datasource_979 TO data_admin;


SET search_path = public, pg_catalog;

--
-- Name: ancient_workings_gid_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE ancient_workings_gid_seq FROM PUBLIC;


--
-- Name: ancient_workings_numauto_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE ancient_workings_numauto_seq FROM PUBLIC;


--
-- Name: baselines_numauto_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE baselines_numauto_seq FROM PUBLIC;


--
-- Name: dh_collars_numauto_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE dh_collars_numauto_seq FROM PUBLIC;


--
-- Name: dh_core_boxes_numauto_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE dh_core_boxes_numauto_seq FROM PUBLIC;


--
-- Name: dh_density_numauto_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE dh_density_numauto_seq FROM PUBLIC;


--
-- Name: dh_devia_numauto_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE dh_devia_numauto_seq FROM PUBLIC;


--
-- Name: dh_followup_numauto_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE dh_followup_numauto_seq FROM PUBLIC;


--
-- Name: dh_litho_numauto_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE dh_litho_numauto_seq FROM PUBLIC;


--
-- Name: dh_mine_numauto_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE dh_mine_numauto_seq FROM PUBLIC;
GRANT ALL ON SEQUENCE dh_mine_numauto_seq TO postgres;


--
-- Name: dh_quicklog_numauto_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE dh_quicklog_numauto_seq FROM PUBLIC;


--
-- Name: dh_sampling_bottle_roll_numauto_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE dh_sampling_bottle_roll_numauto_seq FROM PUBLIC;


--
-- Name: dh_sampling_grades_numauto_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE dh_sampling_grades_numauto_seq FROM PUBLIC;


--
-- Name: dh_struct_measures_numauto_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE dh_struct_measures_numauto_seq FROM PUBLIC;


--
-- Name: dh_tech_numauto_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE dh_tech_numauto_seq FROM PUBLIC;
GRANT ALL ON SEQUENCE dh_tech_numauto_seq TO postgres;


--
-- Name: dh_thinsections_numauto_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE dh_thinsections_numauto_seq FROM PUBLIC;


--
-- Name: field_observations_numauto_seq2; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE field_observations_numauto_seq2 FROM PUBLIC;


--
-- Name: field_observations_struct_measures_numauto_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE field_observations_struct_measures_numauto_seq FROM PUBLIC;


--
-- Name: field_photos_numauto_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE field_photos_numauto_seq FROM PUBLIC;


--
-- Name: formations_group_lithos_numauto_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE formations_group_lithos_numauto_seq FROM PUBLIC;


--
-- Name: geoch_ana_numauto_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE geoch_ana_numauto_seq FROM PUBLIC;
GRANT ALL ON SEQUENCE geoch_ana_numauto_seq TO postgres;


--
-- Name: geoch_sampling_grades_numauto_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE geoch_sampling_grades_numauto_seq FROM PUBLIC;


--
-- Name: geoch_sampling_numauto_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE geoch_sampling_numauto_seq FROM PUBLIC;


--
-- Name: geoch_sampling_sampl_index_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE geoch_sampling_sampl_index_seq FROM PUBLIC;
GRANT ALL ON SEQUENCE geoch_sampling_sampl_index_seq TO postgres;


--
-- Name: geography_columns; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE geography_columns FROM PUBLIC;
REVOKE ALL ON TABLE geography_columns FROM postgres;
GRANT ALL ON TABLE geography_columns TO postgres;
GRANT ALL ON TABLE geography_columns TO data_admin WITH GRANT OPTION;


--
-- Name: geometry_columns; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE geometry_columns FROM PUBLIC;
REVOKE ALL ON TABLE geometry_columns FROM postgres;
GRANT ALL ON TABLE geometry_columns TO postgres;
GRANT ALL ON TABLE geometry_columns TO pierre;
GRANT ALL ON TABLE geometry_columns TO data_admin WITH GRANT OPTION;


--
-- Name: gpy_mag_ground_numauto_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE gpy_mag_ground_numauto_seq FROM PUBLIC;


--
-- Name: index_geo_documentation_id_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE index_geo_documentation_id_seq FROM PUBLIC;


--
-- Name: index_geo_documentation_numauto_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE index_geo_documentation_numauto_seq FROM PUBLIC;


--
-- Name: lab_ana_batches_expedition_numauto_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE lab_ana_batches_expedition_numauto_seq FROM PUBLIC;


--
-- Name: lab_ana_batches_reception_numauto_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE lab_ana_batches_reception_numauto_seq FROM PUBLIC;


--
-- Name: lab_ana_columns_definition_numauto_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE lab_ana_columns_definition_numauto_seq FROM PUBLIC;


--
-- Name: lab_ana_qaqc_results_numauto_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE lab_ana_qaqc_results_numauto_seq FROM PUBLIC;


--
-- Name: lab_ana_results_numauto_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE lab_ana_results_numauto_seq FROM PUBLIC;


--
-- Name: lex_codes_numauto_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE lex_codes_numauto_seq FROM PUBLIC;


--
-- Name: lex_datasource_datasource_id_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE lex_datasource_datasource_id_seq FROM PUBLIC;


--
-- Name: lex_datasource_numauto_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE lex_datasource_numauto_seq FROM PUBLIC;


--
-- Name: lex_standard_numauto_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE lex_standard_numauto_seq FROM PUBLIC;


--
-- Name: licences_numauto_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE licences_numauto_seq FROM PUBLIC;


--
-- Name: mag_declination_numauto_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE mag_declination_numauto_seq FROM PUBLIC;


--
-- Name: operation_active_numauto_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE operation_active_numauto_seq FROM PUBLIC;


--
-- Name: operations_numauto_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE operations_numauto_seq FROM PUBLIC;


--
-- Name: operations_opid_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE operations_opid_seq FROM PUBLIC;


--
-- Name: preex_sampling_numauto_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE preex_sampling_numauto_seq FROM PUBLIC;
GRANT ALL ON SEQUENCE preex_sampling_numauto_seq TO postgres;


--
-- Name: qc_sampling_numauto_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE qc_sampling_numauto_seq FROM PUBLIC;


--
-- Name: qc_standards_numauto_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE qc_standards_numauto_seq FROM PUBLIC;


--
-- Name: shift_reports_numauto_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE shift_reports_numauto_seq FROM PUBLIC;


--
-- Name: spatial_ref_sys; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE spatial_ref_sys FROM PUBLIC;
REVOKE ALL ON TABLE spatial_ref_sys FROM postgres;
GRANT ALL ON TABLE spatial_ref_sys TO postgres;
GRANT SELECT ON TABLE spatial_ref_sys TO pierre;
GRANT ALL ON TABLE spatial_ref_sys TO data_admin WITH GRANT OPTION;


--
-- Name: surface_samples_grades_numauto_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE surface_samples_grades_numauto_seq FROM PUBLIC;


--
-- Name: topo_points_numauto_seq; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON SEQUENCE topo_points_numauto_seq FROM PUBLIC;
GRANT ALL ON SEQUENCE topo_points_numauto_seq TO postgres;


--
-- PostgreSQL database dump complete
--

